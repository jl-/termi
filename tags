!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
#all	nvim/plugged/editorconfig-vim/tests/spec/editorconfig_spec.rb	/^  describe '#all' do$/;"	d
#content	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^#content {$/;"	i
#tty	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^#tty {$/;"	i
$	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    nn <buffer> <silent> $ g\$$/;"	m
$	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    vn <buffer> <silent> $ g\$$/;"	m
$(LIBDIR)$(VIMPROC).dll	nvim/plugged/vimproc.vim/make_msvc.mak	/^$(LIBDIR)\\$(VIMPROC).dll: $(OBJS)$/;"	t
$(OUTDIR)	nvim/plugged/vimproc.vim/make_msvc.mak	/^$(OUTDIR):$/;"	t
$(OUTDIR)/proc_w32.obj	nvim/plugged/vimproc.vim/make_msvc.mak	/^$(OUTDIR)\/proc_w32.obj: $(OUTDIR) $(SRCDIR)\/proc_w32.c $(SRCDIR)\/vimstack.c$/;"	t
$(TARGET)	nvim/plugged/vimproc.vim/make_android.mak	/^$(TARGET): $(SRC) $(INC)$/;"	t
$(TARGET)	nvim/plugged/vimproc.vim/make_bsd.mak	/^$(TARGET): $(SRC) src\/vimstack.c$/;"	t
$(TARGET)	nvim/plugged/vimproc.vim/make_cygwin.mak	/^$(TARGET): $(SRC) src\/vimstack.c$/;"	t
$(TARGET)	nvim/plugged/vimproc.vim/make_mac.mak	/^$(TARGET): $(SRC) src\/vimstack.c$/;"	t
$(TARGET)	nvim/plugged/vimproc.vim/make_mingw32.mak	/^$(TARGET): $(SRC) src\/vimstack.c$/;"	t
$(TARGET)	nvim/plugged/vimproc.vim/make_mingw64.mak	/^$(TARGET): $(SRC) src\/vimstack.c$/;"	t
$(TARGET)	nvim/plugged/vimproc.vim/make_sunos.mak	/^$(TARGET): $(SRC) $(INC)$/;"	t
$(TARGET)	nvim/plugged/vimproc.vim/make_unix.mak	/^$(TARGET): $(SRC) src\/vimstack.c$/;"	t
$(html2vimdoc)	nvim/plugged/vim-localvimrc/Makefile	/^$(html2vimdoc):$/;"	t
$GOPATH	nvim/plugged/vim-go/scripts/runtest.vim	/^  let $GOPATH = s:gopath$/;"	v
$NVIM_TUI_ENABLE_TRUE_COLOR	vim/settings/vim-colorschemes.vim	/^  let $NVIM_TUI_ENABLE_TRUE_COLOR=1$/;"	v
$RUNBENCH_SETTINGS	nvim/plugged/vim-go/scripts/runbench.vim	/^  let $RUNBENCH_SETTINGS = join(['array_whitespace_error', 'build_constraints',$/;"	v
*	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> *             <C-o>:silent! %foldopen!<CR>$/;"	m
*	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> * :silent! %foldopen!<CR>$/;"	m
+	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> +             <C-o>:silent! foldopen<CR>$/;"	m
+	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> + :silent! foldopen<CR>$/;"	m
,	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map , <Plug>(easymotion-prev)$/;"	m
,	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    ino <buffer> , ,<c-g>u$/;"	m
-	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> -             <C-o>:silent! foldclose<CR>$/;"	m
-	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> - :silent! foldclose<CR>$/;"	m
-84,7 +84,7	nvim/plugged/vim-localvimrc/support/vim-tools.patch	/^@@ -84,7 +84,7 @@ SHIFT_WIDTH = 2$/;"	h	modifiedFile:a/html2vimdoc.py
.	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    ino <buffer> . .<c-g>u$/;"	m
.blocked-content	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^.blocked-content {$/;"	c
.maintitle	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^.maintitle {$/;"	c
.subtitle	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^.subtitle {$/;"	c
/	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/	nvim/settings/vim-easymotion.vim	/^map  \/ <Plug>(easymotion-sn)$/;"	m
/	nvim/settings/vim-easymotion.vim	/^omap \/ <Plug>(easymotion-tn)$/;"	m
/	vim/settings/vim-easymotion.vim	/^map  \/ <Plug>(easymotion-sn)$/;"	m
/	vim/settings/vim-easymotion.vim	/^omap \/ <Plug>(easymotion-tn)$/;"	m
0	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    nn <buffer> <silent> 0 g0$/;"	m
0	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    vn <buffer> <silent> 0 g0$/;"	m
1\\. Introduction	nvim/plugged/syntastic/README.markdown	/^## 1\\. Introduction$/;"	s
2.1\\. Requirements	nvim/plugged/syntastic/README.markdown	/^### 2.1\\. Requirements$/;"	S
2.2.1\\. Step 1: Install pathogen.vim	nvim/plugged/syntastic/README.markdown	/^#### 2.2.1\\. Step 1: Install pathogen.vim$/;"	t
2.2.2\\. Step 2: Install syntastic as a Pathogen bundle	nvim/plugged/syntastic/README.markdown	/^#### 2.2.2\\. Step 2: Install syntastic as a Pathogen bundle$/;"	t
2.2\\. Installing syntastic with Pathogen	nvim/plugged/syntastic/README.markdown	/^### 2.2\\. Installing syntastic with Pathogen$/;"	S
2\\. Installation	nvim/plugged/syntastic/README.markdown	/^## 2\\. Installation$/;"	s
3-space indentation	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^3-space indentation$/;"	S	section:Space-based indentation
3\\. Recommended settings	nvim/plugged/syntastic/README.markdown	/^## 3\\. Recommended settings$/;"	s
4-space indentation with tab width of 8	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^4-space indentation with tab width of 8$/;"	S	section:Space-based indentation
4\\. FAQ	nvim/plugged/syntastic/README.markdown	/^## 4\\. FAQ$/;"	s
5\\. Resources	nvim/plugged/syntastic/README.markdown	/^## 5\\. Resources$/;"	s
:	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    ino <buffer> : :<c-g>u$/;"	m
;	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map ; <Plug>(easymotion-next)$/;"	m
;	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    ino <buffer> ; ;<c-g>u$/;"	m
<2-LeftMouse>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> <2-LeftMouse>$/;"	m
<2-LeftMouse>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse>$/;"	m
<BS>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> <BS> <C-o>:call <SID>Tlist_Window_Move_To_File(-1)<CR>$/;"	m
<BS>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <BS> :call <SID>Tlist_Window_Move_To_File(-1)<CR>$/;"	m
<C-LeftMouse>	nvim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-LeftMouse> <LeftMouse>:GoDef<cr>$/;"	m
<C-Space>	nvim/settings/neocomplete.vim	/^inoremap <C-Space> <C-n>$/;"	m
<C-Space>	vim/settings/neocomplete.vim	/^inoremap <C-Space> <C-n>$/;"	m
<C-]>	nvim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-]> :GoDef<cr>$/;"	m
<C-t>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> <C-t>$/;"	m
<C-t>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <C-t>$/;"	m
<C-t>	nvim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-t> :<C-U>call go#def#StackPop(v:count1)<cr>$/;"	m
<C-w><C-]>	nvim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w><C-]> :<C-u>call go#def#Jump("split")<CR>$/;"	m
<C-w><C-o>	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^    nnoremap <C-w><C-o> :ZoomWinTabToggle<CR>$/;"	m
<C-w>]	nvim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w>] :<C-u>call go#def#Jump("split")<CR>$/;"	m
<C-w>o	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^    nnoremap <C-w>o :ZoomWinTabToggle<CR>$/;"	m
<CR>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> <CR>$/;"	m
<CR>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <CR>$/;"	m
<CR>	nvim/plugged/vim-go/autoload/go/def.vim	/^  noremap <buffer> <silent> <CR>  :<C-U>call go#def#SelectStackEntry()<CR>$/;"	m
<CR>	nvim/plugged/vim-go/autoload/go/doc.vim	/^  noremap <buffer> <silent> <CR> :<C-U>close<CR>$/;"	m
<Down>	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    no <buffer> <silent> <Down> gj$/;"	m
<End>	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    no <buffer> <silent> <End>  g<End>$/;"	m
<Esc>	nvim/plugged/vim-go/autoload/go/def.vim	/^  noremap <buffer> <silent> <Esc> :<C-U>call go#ui#CloseWindow()<CR>$/;"	m
<Esc>	nvim/plugged/vim-go/autoload/go/doc.vim	/^  noremap <buffer> <silent> <Esc> :<C-U>close<CR>$/;"	m
<Esc>[	nvim/plugged/vim-go/autoload/go/doc.vim	/^  nnoremap <buffer> <silent> <Esc>[ <Esc>[$/;"	m
<F1>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> <F1>  <C-o>:call <SID>Tlist_Window_Toggle_Help_Text()<CR>$/;"	m
<F1>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <F1> :call <SID>Tlist_Window_Toggle_Help_Text()<CR>$/;"	m
<Home>	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    no <buffer> <silent> <Home> g<Home>$/;"	m
<Leader><Leader>	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^            map <Leader><Leader> <Plug>(easymotion-prefix)$/;"	m
<Leader>B	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>B <Plug>(easymotion-B)$/;"	m
<Leader>E	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>E <Plug>(easymotion-E)$/;"	m
<Leader>W	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>W <Plug>(easymotion-W)$/;"	m
<Leader>b	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>b	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>e	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>e <Plug>(easymotion-iskeyword-e)$/;"	m
<Leader>gE	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>gE <Plug>(easymotion-gE)$/;"	m
<Leader>ge	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>ge <Plug>(easymotion-iskeyword-ge)$/;"	m
<Leader>hp	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hp <Plug>GitGutterPreviewHunk$/;"	m
<Leader>hs	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hs <Plug>GitGutterStageHunk$/;"	m
<Leader>hu	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hu <Plug>GitGutterUndoHunk$/;"	m
<Leader>w	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<Leader>w	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<Plug>(-fzf-complete-trigger)	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<Plug>(easymotion-activate)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-activate) :<C-u>call EasyMotion#activate(0)<CR>$/;"	m
<Plug>(easymotion-activate)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-activate) :<C-u>call EasyMotion#activate(1)<CR>$/;"	m
<Plug>(easymotion-dotrepeat)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-dotrepeat)$/;"	m
<Plug>(easymotion-next)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-next)$/;"	m
<Plug>(easymotion-next)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-next)$/;"	m
<Plug>(easymotion-overwin-f)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f) :<C-u>call EasyMotion#OverwinF(1)<CR>$/;"	m
<Plug>(easymotion-overwin-f2)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f2) :<C-u>call EasyMotion#OverwinF(2)<CR>$/;"	m
<Plug>(easymotion-overwin-line)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-line) :<C-u>call EasyMotion#overwin#line()<CR>$/;"	m
<Plug>(easymotion-overwin-w)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-w) :<C-u>call EasyMotion#overwin#w()<CR>$/;"	m
<Plug>(easymotion-prev)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-prev)$/;"	m
<Plug>(easymotion-prev)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-prev)$/;"	m
<Plug>(easymotion-repeat)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-repeat)$/;"	m
<Plug>(easymotion-repeat)	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^xnoremap <silent><Plug>(easymotion-repeat)$/;"	m
<Plug>(go-alternate-edit)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-edit) :<C-u>call go#alternate#Switch(0, "edit")<CR>$/;"	m
<Plug>(go-alternate-split)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-split) :<C-u>call go#alternate#Switch(0, "split")<CR>$/;"	m
<Plug>(go-alternate-vertical)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-vertical) :<C-u>call go#alternate#Switch(0, "vsplit")<CR>$/;"	m
<Plug>(go-build)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-build) :<C-u>call go#cmd#Build(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-callees)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callees) :<C-u>call go#guru#Callees(-1)<CR>$/;"	m
<Plug>(go-callers)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callers) :<C-u>call go#guru#Callers(-1)<CR>$/;"	m
<Plug>(go-callstack)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callstack) :<C-u>call go#guru#Callstack(-1)<CR>$/;"	m
<Plug>(go-channelpeers)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-channelpeers) :<C-u>call go#guru#ChannelPeers(-1)<CR>$/;"	m
<Plug>(go-coverage)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage) :<C-u>call go#coverage#Buffer(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-browser)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-browser) :<C-u>call go#coverage#Browser(!g:go_jump_to_error/;"	m
<Plug>(go-coverage-clear)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-clear) :<C-u>call go#coverage#Clear()<CR>$/;"	m
<Plug>(go-coverage-toggle)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-toggle) :<C-u>call go#coverage#BufferToggle(!g:go_jump_to_e/;"	m
<Plug>(go-debug-breakpoint)	nvim/plugged/vim-go/autoload/go/debug.vim	/^  nnoremap <silent> <Plug>(go-debug-breakpoint) :<C-u>call go#debug#Breakpoint()<CR>$/;"	m
<Plug>(go-debug-continue)	nvim/plugged/vim-go/autoload/go/debug.vim	/^  nnoremap <silent> <Plug>(go-debug-continue)   :<C-u>call go#debug#Stack('continue')<CR>$/;"	m
<Plug>(go-debug-next)	nvim/plugged/vim-go/autoload/go/debug.vim	/^  nnoremap <silent> <Plug>(go-debug-next)       :<C-u>call go#debug#Stack('next')<CR>$/;"	m
<Plug>(go-debug-print)	nvim/plugged/vim-go/autoload/go/debug.vim	/^  nnoremap <silent> <Plug>(go-debug-print)      :<C-u>call go#debug#Print(expand('<cword>'))<CR>$/;"	m
<Plug>(go-debug-step)	nvim/plugged/vim-go/autoload/go/debug.vim	/^  nnoremap <silent> <Plug>(go-debug-step)       :<C-u>call go#debug#Stack('step')<CR>$/;"	m
<Plug>(go-debug-stepout)	nvim/plugged/vim-go/autoload/go/debug.vim	/^  nnoremap <silent> <Plug>(go-debug-stepout)    :<C-u>call go#debug#Stack('stepout')<CR>$/;"	m
<Plug>(go-debug-stop)	nvim/plugged/vim-go/autoload/go/debug.vim	/^  nnoremap <silent> <Plug>(go-debug-stop)       :<C-u>call go#debug#Stop()<CR>$/;"	m
<Plug>(go-decls)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-decls) :<C-u>call go#decls#Decls(0, '')<CR>$/;"	m
<Plug>(go-decls-dir)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-decls-dir) :<C-u>call go#decls#Decls(1, '')<CR>$/;"	m
<Plug>(go-def)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def) :<C-u>call go#def#Jump('')<CR>$/;"	m
<Plug>(go-def-pop)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-pop) :<C-u>call go#def#StackPop()<CR>$/;"	m
<Plug>(go-def-split)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-split) :<C-u>call go#def#Jump("split")<CR>$/;"	m
<Plug>(go-def-stack)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack) :<C-u>call go#def#Stack()<CR>$/;"	m
<Plug>(go-def-stack-clear)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack-clear) :<C-u>call go#def#StackClear()<CR>$/;"	m
<Plug>(go-def-tab)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-tab) :<C-u>call go#def#Jump("tab")<CR>$/;"	m
<Plug>(go-def-vertical)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-vertical) :<C-u>call go#def#Jump("vsplit")<CR>$/;"	m
<Plug>(go-deps)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-deps) :<C-u>call go#tool#Deps()<CR>$/;"	m
<Plug>(go-describe)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-describe) :<C-u>call go#guru#Describe(-1)<CR>$/;"	m
<Plug>(go-doc)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-browser)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-browser) :<C-u>call go#doc#OpenBrowser()<CR>$/;"	m
<Plug>(go-doc-split)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-split) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-tab)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-tab) :<C-u>call go#doc#Open("tabnew", "tabe")<CR>$/;"	m
<Plug>(go-doc-vertical)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-vertical) :<C-u>call go#doc#Open("vnew", "vsplit")<CR>$/;"	m
<Plug>(go-files)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-files) :<C-u>call go#tool#Files()<CR>$/;"	m
<Plug>(go-freevars)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^xnoremap <silent> <Plug>(go-freevars) :<C-u>call go#guru#Freevars(0)<CR>$/;"	m
<Plug>(go-generate)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-generate) :<C-u>call go#cmd#Generate(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-iferr)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-iferr) :<C-u>call go#iferr#Generate()<CR>$/;"	m
<Plug>(go-implements)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-implements) :<C-u>call go#guru#Implements(-1)<CR>$/;"	m
<Plug>(go-import)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-import) :<C-u>call go#import#SwitchImport(1, '', expand('<cword>'), /;"	m
<Plug>(go-imports)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-imports) :<C-u>call go#fmt#Format(1)<CR>$/;"	m
<Plug>(go-info)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-info) :<C-u>call go#tool#Info(1)<CR>$/;"	m
<Plug>(go-install)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-install) :<C-u>call go#cmd#Install(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-lint)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-lint) :<C-u>call go#lint#Golint(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-metalinter)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-metalinter) :<C-u>call go#lint#Gometa(!g:go_jump_to_error, 0)<CR>$/;"	m
<Plug>(go-mod-fmt)	nvim/plugged/vim-go/ftplugin/gomod/mappings.vim	/^nnoremap <silent> <Plug>(go-mod-fmt) :<C-u>call go#mod#Format()<CR>$/;"	m
<Plug>(go-pointsto)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-pointsto) :<C-u>call go#guru#PointsTo(-1)<CR>$/;"	m
<Plug>(go-referrers)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-referrers) :<C-u>call go#guru#Referrers(-1)<CR>$/;"	m
<Plug>(go-rename)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-rename) :<C-u>call go#rename#Rename(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-run) :<C-u>call go#cmd#Run(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run-split)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-split) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'split',/;"	m
<Plug>(go-run-tab)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-tab) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'tabe', []/;"	m
<Plug>(go-run-vertical)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-vertical) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'vspl/;"	m
<Plug>(go-sameids)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids) :<C-u>call go#guru#SameIds(1)<CR>$/;"	m
<Plug>(go-sameids-toggle)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids-toggle) :<C-u>call go#guru#ToggleSameIds()<CR>$/;"	m
<Plug>(go-test)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test) :<C-u>call go#test#Test(!g:go_jump_to_error, 0)<CR>$/;"	m
<Plug>(go-test-compile)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-compile) :<C-u>call go#test#Test(!g:go_jump_to_error, 1)<CR>$/;"	m
<Plug>(go-test-func)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-func) :<C-u>call go#test#Func(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-vet)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-vet) :<C-u>call go#lint#Vet(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-whicherrs)	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-whicherrs) :<C-u>call go#guru#Whicherrs(-1)<CR>$/;"	m
<Plug>GitGutterNextHunk	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\<C-U>execute v:count1 . 'Git/;"	m
<Plug>GitGutterPrevHunk	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\<C-U>execute v:count1 . 'Git/;"	m
<Plug>GitGutterPreviewHunk	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk<CR>$/;"	m
<Plug>GitGutterStageHunk	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk   :GitGutterStageHunk<CR>$/;"	m
<Plug>GitGutterTextObjectInnerPending	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectInnerPending :<C-U>call gitgutter#hunk#text_object(1)/;"	m
<Plug>GitGutterTextObjectInnerVisual	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>GitGutterTextObjectInnerVisual  :<C-U>call gitgutter#hunk#text_object(1)/;"	m
<Plug>GitGutterTextObjectOuterPending	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectOuterPending :<C-U>call gitgutter#hunk#text_object(0)/;"	m
<Plug>GitGutterTextObjectOuterVisual	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>GitGutterTextObjectOuterVisual  :<C-U>call gitgutter#hunk#text_object(0)/;"	m
<Plug>GitGutterUndoHunk	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk    :GitGutterUndoHunk<CR>$/;"	m
<Plug>MoveBlockDown	nvim/plugged/vim-move/plugin/move.vim	/^vnoremap <silent> <Plug>MoveBlockDown           :call <SID>MoveBlockOneLineDown()<CR>$/;"	m
<Plug>MoveBlockHalfPageDown	nvim/plugged/vim-move/plugin/move.vim	/^vnoremap <silent> <Plug>MoveBlockHalfPageDown   :call <SID>MoveBlockHalfPageDown()<CR>$/;"	m
<Plug>MoveBlockHalfPageUp	nvim/plugged/vim-move/plugin/move.vim	/^vnoremap <silent> <Plug>MoveBlockHalfPageUp     :call <SID>MoveBlockHalfPageUp()<CR>$/;"	m
<Plug>MoveBlockLeft	nvim/plugged/vim-move/plugin/move.vim	/^vnoremap <silent> <Plug>MoveBlockLeft           :call <SID>MoveBlockLeft()<CR>$/;"	m
<Plug>MoveBlockRight	nvim/plugged/vim-move/plugin/move.vim	/^vnoremap <silent> <Plug>MoveBlockRight          :call <SID>MoveBlockRight()<CR>$/;"	m
<Plug>MoveBlockUp	nvim/plugged/vim-move/plugin/move.vim	/^vnoremap <silent> <Plug>MoveBlockUp             :call <SID>MoveBlockOneLineUp()<CR>$/;"	m
<Plug>MoveCharLeft	nvim/plugged/vim-move/plugin/move.vim	/^nnoremap <silent> <Plug>MoveCharLeft            :<C-u>call <SID>MoveCharLeft()<CR>$/;"	m
<Plug>MoveCharRight	nvim/plugged/vim-move/plugin/move.vim	/^nnoremap <silent> <Plug>MoveCharRight           :<C-u>call <SID>MoveCharRight()<CR>$/;"	m
<Plug>MoveLineDown	nvim/plugged/vim-move/plugin/move.vim	/^nnoremap <silent> <Plug>MoveLineDown            :call <SID>MoveLineDown(1)<CR>$/;"	m
<Plug>MoveLineHalfPageDown	nvim/plugged/vim-move/plugin/move.vim	/^nnoremap <silent> <Plug>MoveLineHalfPageDown    :call <SID>MoveLineHalfPageDown()<CR>$/;"	m
<Plug>MoveLineHalfPageUp	nvim/plugged/vim-move/plugin/move.vim	/^nnoremap <silent> <Plug>MoveLineHalfPageUp      :call <SID>MoveLineHalfPageUp()<CR>$/;"	m
<Plug>MoveLineUp	nvim/plugged/vim-move/plugin/move.vim	/^nnoremap <silent> <Plug>MoveLineUp              :call <SID>MoveLineUp(1)<CR>$/;"	m
<Plug>_	nvim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^  inoremap <expr><silent> <Plug>_ deoplete#mapping#_dummy_complete()$/;"	m
<Return>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> <Return>$/;"	m
<S-Tab>	nvim/settings/deoplete.vim	/^inoremap <expr> <S-Tab> pumvisible() ? "\\<C-p>" : "\\<S-Tab>"$/;"	m
<S-Tab>	vim/settings/deoplete.vim	/^inoremap <expr> <S-Tab> pumvisible() ? "\\<C-p>" : "\\<S-Tab>"$/;"	m
<SID>xx	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<Space>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> <Space>       <C-o>:call$/;"	m
<Space>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <Space> :call <SID>Tlist_Window_Show_Info()<CR>$/;"	m
<Tab>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> <Tab> <C-o>:call <SID>Tlist_Window_Move_To_File(1)<CR>$/;"	m
<Tab>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <Tab> :call <SID>Tlist_Window_Move_To_File(1)<CR>$/;"	m
<Tab>	nvim/settings/deoplete.vim	/^inoremap <expr> <Tab> pumvisible() ? "\\<C-n>" : "\\<Tab>"$/;"	m
<Tab>	vim/settings/deoplete.vim	/^inoremap <expr> <Tab> pumvisible() ? "\\<C-n>" : "\\<Tab>"$/;"	m
<Up>	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    no <buffer> <silent> <Up>   gk$/;"	m
<c-u>	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    ino <buffer> <c-u> <c-g>u<c-u>$/;"	m
<c-w>	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    ino <buffer> <c-w> <c-g>u<c-w>$/;"	m
<cr>	nvim/autoload/plug.vim	/^      nmap <buffer> <cr> <plug>(plug-preview)$/;"	m
<cr>	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^    nnoremap <silent> <buffer> <cr> :call nerdtree#ui_glue#invokeKeyMap(g:NERDTreeMapActivateNod/;"	m
<cr>	nvim/plugged/vim-go/autoload/go/debug.vim	/^    nmap <buffer> <cr> :<c-u>call <SID>goto_file()<cr>$/;"	m
<cr>	nvim/plugged/vim-go/autoload/go/debug.vim	/^    nmap <buffer> <silent> <cr> :<c-u>call <SID>expand_var()<cr>$/;"	m
<cr>	nvim/plugged/vim-pencil/autoload/pencil.vim	/^      ino <buffer> <cr> <c-g>u<cr>$/;"	m
<kMinus>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> <kMinus>      <C-o>:silent! foldclose<CR>$/;"	m
<kMinus>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <kMinus> :silent! foldclose<CR>$/;"	m
<kMultiply>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> <kMultiply>   <C-o>:silent! %foldopen!<CR>$/;"	m
<kMultiply>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <kMultiply> :silent! %foldopen!<CR>$/;"	m
<kPlus>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> <kPlus>       <C-o>:silent! foldopen<CR>$/;"	m
<kPlus>	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <kPlus> :silent! foldopen<CR>$/;"	m
<leader>b	nvim/settings/fzf.vim	/^nmap <leader>b :Buffers<CR>$/;"	m
<leader>b	nvim/settings/fzf.vim	/^omap <leader>b :Buffers<CR>$/;"	m
<leader>b	nvim/settings/fzf.vim	/^xmap <leader>b :Buffers<CR>$/;"	m
<leader>b	vim/settings/fzf.vim	/^nmap <leader>b :Buffers<CR>$/;"	m
<leader>b	vim/settings/fzf.vim	/^omap <leader>b :Buffers<CR>$/;"	m
<leader>b	vim/settings/fzf.vim	/^xmap <leader>b :Buffers<CR>$/;"	m
<leader>f	nvim/settings/fzf.vim	/^nmap <leader>f :FZF $/;"	m
<leader>f	nvim/settings/fzf.vim	/^omap <leader>f :FZF $/;"	m
<leader>f	nvim/settings/fzf.vim	/^xmap <leader>f :FZF $/;"	m
<leader>f	vim/settings/fzf.vim	/^nmap <leader>f :FZF $/;"	m
<leader>f	vim/settings/fzf.vim	/^omap <leader>f :FZF $/;"	m
<leader>f	vim/settings/fzf.vim	/^xmap <leader>f :FZF $/;"	m
<leader>g	nvim/settings/goyo.vim	/^nmap <leader>g :Goyo<CR>$/;"	m
<leader>g	vim/settings/goyo.vim	/^nmap <leader>g :Goyo<CR>$/;"	m
<plug>(-fzf-/)	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-\/) \/$/;"	m
<plug>(-fzf-:)	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-:) :$/;"	m
<plug>(-fzf-vim-do)	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-file)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-path)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<plug>(fzf-maps-x)	nvim/plugged/fzf.vim/plugin/fzf.vim	/^xnoremap <silent> <plug>(fzf-maps-x) :<c-u>call fzf#vim#maps('x', 0)<cr>$/;"	m
<plug>(goyo-resize)	nvim/plugged/goyo.vim/autoload/goyo.vim	/^nnoremap <silent> <plug>(goyo-resize) :<c-u>call <sid>resize_pads()<cr>$/;"	m
<plug>(plug-preview)	nvim/autoload/plug.vim	/^    nnoremap <silent> <buffer> <plug>(plug-preview) :silent! call <SID>preview_commit()<cr>$/;"	m
=	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> =             <C-o>:silent! %foldclose<CR>$/;"	m
=	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> = :silent! %foldclose<CR>$/;"	m
?	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    ino <buffer> ? ?<c-g>u$/;"	m
ALLSPHINXOPTS	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^ALLSPHINXOPTS   = -d $(BUILDDIR)\/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
ALLSPHINXOPTS	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%$/;"	v
ALLSPHINXOPTS	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^set ALLSPHINXOPTS=-d %BUILDDIR%\/doctrees %SPHINXOPTS% .$/;"	v
APPVER	nvim/plugged/vimproc.vim/make_msvc.mak	/^APPVER = 5.0$/;"	m
ARCHS	nvim/plugged/vimproc.vim/make_mac.mak	/^ARCHS=$/;"	m
AddLine	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	nvim/plugged/vim-easymotion/t/operator_pending_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^function! AddLine(str)$/;"	f
AddTabularPattern	nvim/plugged/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPattern$/;"	c
AddTabularPattern	nvim/plugged/tabular/plugin/Tabular.vim	/^function! AddTabularPattern(command, force)$/;"	f
AddTabularPipeline	nvim/plugged/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPipeline$/;"	c
AddTabularPipeline	nvim/plugged/tabular/plugin/Tabular.vim	/^function! AddTabularPipeline(command, force)$/;"	f
Advanced initialization	nvim/plugged/vim-pencil/README.markdown	/^### Advanced initialization$/;"	S
Advanced pencil	nvim/plugged/vim-pencil/README.markdown	/^## Advanced pencil$/;"	s
Align	nvim/plugged/vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
AlsoMissingDoc	nvim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/quux.go	/^func AlsoMissingDoc() {$/;"	f	package:lint
Answer	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  func Answer(char)$/;"	f
Apiary	nvim/plugged/apiblueprint.vim/plugin/apiary.vim	/^augroup Apiary$/;"	a
Array,Arrays	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*const[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*\\[\/\\/;"	k
Array,Arrays	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*let[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*\\[\/\\1/;"	k
Array,Arrays	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*var[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*\\[\/\\1/;"	k
AsmFmt	nvim/plugged/vim-go/ftplugin/asm.vim	/^command! -nargs=0 AsmFmt call go#asmfmt#Format()$/;"	c
AsyncParent	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^class AsyncParent(_Parent):$/;"	c
Author	nvim/plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Author<\/h2>$/;"	i
Auto-detecting wrap mode	nvim/plugged/vim-pencil/README.markdown	/^### Auto-detecting wrap mode$/;"	S
AutoPencil	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  com -nargs=0 AutoPencil    call pencil#setAutoFormat(1)$/;"	c
Autoformat blacklisting (and whitelisting)	nvim/plugged/vim-pencil/README.markdown	/^### Autoformat blacklisting (and whitelisting)$/;"	S
Autoformat manual control	nvim/plugged/vim-pencil/README.markdown	/^### Autoformat manual control$/;"	S
Automatic formatting	nvim/plugged/vim-pencil/README.markdown	/^## Automatic formatting$/;"	s
BASE_DIR	nvim/plugged/deoplete.nvim/test/conftest.py	/^BASE_DIR = os.path.dirname(os.path.dirname(__file__))$/;"	v
BUILDDIR	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^BUILDDIR      = _build$/;"	m
BUILDDIR	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^set BUILDDIR=_build$/;"	v
Base	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^class Base(LoggingMixin):$/;"	c
Base	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^class Base(LoggingMixin):$/;"	c
Bookmark	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=? Bookmark :call nerdtree#ui_glue#bookmarkNode('<args>')$/;"	c
BookmarkToRoot	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=+ BookmarkToRoot cal/;"	c
Bundling EditorConfig Python Core with Plugin	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Bundling EditorConfig Python Core with Plugin$/;"	s	chapter:Writing Plugins
Bundling as a Submodule in Git	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Bundling as a Submodule in Git$/;"	S	section:Bundling EditorConfig Python Core with Plugin
Bundling as a Subtree in Git	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Bundling as a Subtree in Git$/;"	S	section:Bundling EditorConfig Python Core with Plugin
CC	nvim/plugged/vimproc.vim/make_mac.mak	/^CC=clang$/;"	m
CC	nvim/plugged/vimproc.vim/make_mac.mak	/^CC=gcc$/;"	m
CC	nvim/plugged/vimproc.vim/make_mac.mak	/^CC=llvm-gcc$/;"	m
CC	nvim/plugged/vimproc.vim/make_mingw32.mak	/^CC=gcc$/;"	m
CC	nvim/plugged/vimproc.vim/make_mingw64.mak	/^CC=x86_64-w64-mingw32-gcc$/;"	m
CC	nvim/plugged/vimproc.vim/make_sunos.mak	/^CC=$(SUNCC)$/;"	m
CC	nvim/plugged/vimproc.vim/make_sunos.mak	/^CC=gcc$/;"	m
CFLAGS	nvim/plugged/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) $(DEFINES) \/wd4100 \/wd4127 \/O2$/;"	m
CFLAGS	nvim/plugged/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_DEBUG$/;"	m
CFLAGS	nvim/plugged/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_NDEBUG$/;"	m
CHERE_INVOKING	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^set CHERE_INVOKING=yes$/;"	v
CHR2XD	nvim/plugged/vimproc.vim/src/vimstack.c	/^static const char CHR2XD[0x100] = {$/;"	v	typeref:typename:const char[0x100]	file:
CPU	nvim/plugged/vimproc.vim/make_msvc.mak	/^CPU = $(PROCESSOR_ARCHITECTURE)$/;"	m
CPU	nvim/plugged/vimproc.vim/make_msvc.mak	/^CPU = i386$/;"	m
CSCOPE_ARGS	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -R$/;"	v
CSCOPE_ARGS	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -i %TAGS_FILE%.files$/;"	v
CSCOPE_ARGS	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_EXE	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
Chapter 6.7	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^.. _`Chapter 6.7`: http:\/\/git-scm.com\/book\/ch6-7.html$/;"	T	subsection:Bundling as a Subtree in Git
Checking for Final Newline	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/insert_final_newline.rst	/^Checking for Final Newline$/;"	s	chapter:Insert Final Newline Property
Child	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^class Child(logger.LoggingMixin):$/;"	c
ClearAllBookmarks	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ClearAllBookmarks call g:NERDTreeBookmark.ClearAll() <bar> call b:/;"	c
ClearBookmarks	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=* ClearBookmarks cal/;"	c
Command Line Usage	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/command_line_usage.rst	/^Command Line Usage$/;"	c
CompareMovements	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! CompareMovements(movement1, movement2, backward)$/;"	f
CompilerSet	nvim/plugged/typescript-vim/compiler/typescript.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	nvim/plugged/vim-go/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	nvim/plugged/vim-javascript/compiler/eslint.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
Concealing \\_\\_markup\\_\\_	nvim/plugged/vim-pencil/README.markdown	/^## Concealing \\_\\_markup\\_\\_$/;"	s
Concealing styled text in Markdown	nvim/plugged/vim-pencil/README.markdown	/^### Concealing styled text in Markdown$/;"	S
Configuration	nvim/plugged/vim-pencil/README.markdown	/^# Configuration$/;"	c
Context	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^class Context(object):$/;"	c
Cursor wrap	nvim/plugged/vim-pencil/README.markdown	/^## Cursor wrap$/;"	s
CursorPos	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	nvim/plugged/vim-easymotion/t/operator_pending_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^function! CursorPos()$/;"	f
Custom	nvim/plugged/lightline.vim/test/expand.vim	/^  function! Custom()$/;"	f
Custom	nvim/plugged/lightline.vim/test/onetab.vim	/^  function! Custom(n)$/;"	f
Custom1	nvim/plugged/lightline.vim/test/subseparator.vim	/^  function! Custom1()$/;"	f
Custom2	nvim/plugged/lightline.vim/test/subseparator.vim	/^  function! Custom2()$/;"	f
Custom3	nvim/plugged/lightline.vim/test/subseparator.vim	/^  function! Custom3()$/;"	f
D	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
DB_FILE	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DECLS_SYNTAX_HIGHLIGHT	nvim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^DECLS_SYNTAX_HIGHLIGHT = [$/;"	v
DEFINES	nvim/plugged/vimproc.vim/make_msvc.mak	/^DEFINES = -D_CRT_SECURE_NO_WARNINGS=1 -D_BIND_TO_CURRENT_VCLIBS_VERSION=1$/;"	m
Debug	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/imports/vendor/gh.com/gi/foo-logging/logger.go	/^func (l *TestLogger) Debug(msg string) {$/;"	f	unknown:logging.TestLogger
Debug	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/vendor/gh.com/gi/foo-logging/logger.go	/^func (l *TestLogger) Debug(msg string) {$/;"	f	unknown:logging.TestLogger
Default textwidth	nvim/plugged/vim-pencil/README.markdown	/^## Default textwidth$/;"	s
Deoplete	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^class Deoplete(logger.LoggingMixin):$/;"	c
DeopleteHandlers	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    class DeopleteHandlers(object):$/;"	c
DeopleteLogFilter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class DeopleteLogFilter(logging.Filter):$/;"	c
Detect via modeline	nvim/plugged/vim-pencil/README.markdown	/^#### Detect via modeline$/;"	t
Detect via sampling	nvim/plugged/vim-pencil/README.markdown	/^#### Detect via sampling$/;"	t
DictCacheItem	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^DictCacheItem = namedtuple('DictCacheItem', 'mtime candidates')$/;"	v
Discovering EditorConfig properties	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/command_line_usage.rst	/^Discovering EditorConfig properties$/;"	s	chapter:Command Line Usage
Discovering EditorConfig properties	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Discovering EditorConfig properties$/;"	s	chapter:Usage
DoneParseArgs	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
DropPencil	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  com -nargs=0 DropPencil    call pencil#init({'wrap': 'off' })$/;"	c
EMCommandLineMap	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineMap$/;"	c
EMCommandLineNoreMap	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineNoreMap$/;"	c
EMCommandLineUnMap	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineUnMap$/;"	c
END	nvim/plugged/apiblueprint.vim/scripts/screenshot	/^osascript <<END$/;"	h
EOF	nvim/plugged/vim-localvimrc/support/build_vim-tools.sh	/^cat > $DEST\/bin\/html2vimdoc <<EOF$/;"	h
EOF	nvim/plugged/vim-localvimrc/test/setup.sh	/^  cat >${DIR}\/.localvimrc <<EOF$/;"	h
EOF	nvim/plugged/vim-localvimrc/test/setup.sh	/^  cat >${DIR}\/.lvimrc <<EOF$/;"	h
EXPORT	nvim/plugged/vimproc.vim/src/proc_w32.c	/^# define EXPORT /;"	d	file:
EXPORT	nvim/plugged/vimproc.vim/src/proc_w32.c	/^# define EXPORT$/;"	d	file:
EasyMotion#DotRepeat	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#DotRepeat() " {{{$/;"	f
EasyMotion#E	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#E(visualmode, direction) " {{{$/;"	f
EasyMotion#EK	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EK(visualmode, direction) " {{{$/;"	f
EasyMotion#EL	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EL(visualmode, direction) " {{{$/;"	f
EasyMotion#EW	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EW(visualmode, direction) " {{{$/;"	f
EasyMotion#Eol	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Eol(visualmode, direction) " {{{$/;"	f
EasyMotion#JK	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JK(visualmode, direction) " {{{$/;"	f
EasyMotion#JumpToAnywhere	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JumpToAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#LineAnywhere	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#LineAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#NextPrevious	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#NextPrevious(visualmode, direction) " {{{$/;"	f
EasyMotion#OverwinF	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#OverwinF(num_strokes) " {{{$/;"	f
EasyMotion#Repeat	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Repeat(visualmode) " {{{$/;"	f
EasyMotion#S	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#S(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#SL	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#SL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#Search	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Search(visualmode, direction, respect_direction) " {{{$/;"	f
EasyMotion#Sol	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Sol(visualmode, direction) " {{{$/;"	f
EasyMotion#T	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#T(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#TL	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#TL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#User	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#User(pattern, visualmode, direction, inclusive, ...) " {{{$/;"	f
EasyMotion#WB	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WB(visualmode, direction) " {{{$/;"	f
EasyMotion#WBK	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBK(visualmode, direction) " {{{$/;"	f
EasyMotion#WBL	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBL(visualmode, direction) " {{{$/;"	f
EasyMotion#WBW	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBW(visualmode, direction) " {{{$/;"	f
EasyMotion#activate	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#activate(is_visual) "{{{$/;"	f
EasyMotion#attach_active_autocmd	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#attach_active_autocmd() "{{{$/;"	f
EasyMotion#cmigemo#getMigemoPattern	nvim/plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#getMigemoPattern(input) "{{{$/;"	f
EasyMotion#cmigemo#system	nvim/plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#system(...) "{{{$/;"	f
EasyMotion#command_line#GetInput	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#GetInput(num_strokes, prev, direction) "{{{$/;"	f
EasyMotion#command_line#cmap	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cmap(args)$/;"	f
EasyMotion#command_line#cnoremap	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cnoremap(args)$/;"	f
EasyMotion#command_line#cunmap	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cunmap(lhs)$/;"	f
EasyMotion#go	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#go(...) abort$/;"	f
EasyMotion#helper#VarReset	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#VarReset(var, ...) "{{{$/;"	f
EasyMotion#helper#get_char_by_coord	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#get_char_by_coord(coord) "{{{$/;"	f
EasyMotion#helper#include_multibyte_char	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#include_multibyte_char(str) "{{{$/;"	f
EasyMotion#helper#is_folded	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_folded(line) "{{{$/;"	f
EasyMotion#helper#is_greater_coords	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_greater_coords(coords1, coords2) "{{{$/;"	f
EasyMotion#helper#load_migemo_dict	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#load_migemo_dict() "{{{$/;"	f
EasyMotion#helper#mode	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#mode(flag) "{{{$/;"	f
EasyMotion#helper#should_case_sensitive	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#should_case_sensitive(input, is_search) "{{{$/;"	f
EasyMotion#helper#silent_feedkeys	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#silent_feedkeys(expr, name, ...) "{{{$/;"	f
EasyMotion#helper#strchars	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^    function! EasyMotion#helper#strchars(str)$/;"	f
EasyMotion#helper#vcol	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#vcol(expr) abort$/;"	f
EasyMotion#highlight#InitHL	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#InitHL(group, colors) " {{{$/;"	f
EasyMotion#highlight#add_color_group	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_color_group(new_groups) "{{{$/;"	f
EasyMotion#highlight#add_highlight	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_highlight(re, group) "{{{$/;"	f
EasyMotion#highlight#add_pos_highlight	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_pos_highlight(line_num, col_num, group) "{{{$/;"	f
EasyMotion#highlight#attach_autocmd	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#attach_autocmd() "{{{$/;"	f
EasyMotion#highlight#capture	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#capture(hlname) "{{{$/;"	f
EasyMotion#highlight#delete_highlight	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#delete_highlight(...) "{{{$/;"	f
EasyMotion#highlight#init	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#init() "{{{$/;"	f
EasyMotion#highlight#load	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#load()$/;"	f
EasyMotion#highlight#turn_off	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_off(hl) "{{{$/;"	f
EasyMotion#highlight#turn_on	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_on(hl) "{{{$/;"	f
EasyMotion#init	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#init()$/;"	f
EasyMotion#is_active	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#is_active() "{{{$/;"	f
EasyMotion#migemo#cp932#load_dict	nvim/plugged/vim-easymotion/autoload/EasyMotion/migemo/cp932.vim	/^function! EasyMotion#migemo#cp932#load_dict()$/;"	f
EasyMotion#migemo#eucjp#load_dict	nvim/plugged/vim-easymotion/autoload/EasyMotion/migemo/eucjp.vim	/^function! EasyMotion#migemo#eucjp#load_dict()$/;"	f
EasyMotion#migemo#utf8#load_dict	nvim/plugged/vim-easymotion/autoload/EasyMotion/migemo/utf8.vim	/^function! EasyMotion#migemo#utf8#load_dict()$/;"	f
EasyMotion#overwin#line	nvim/plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#line() abort$/;"	f
EasyMotion#overwin#move	nvim/plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#move(pattern) abort$/;"	f
EasyMotion#overwin#w	nvim/plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#w() abort$/;"	f
EasyMotion#reset	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#reset()$/;"	f
EasyMotion#sticky_table#jp	nvim/plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#jp = {$/;"	v
EasyMotion#sticky_table#us	nvim/plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#us = {$/;"	v
EasyMotion#undo#save	nvim/plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! EasyMotion#undo#save() abort$/;"	f
EasyMotionInitHL	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^augroup EasyMotionInitHL$/;"	a
EditorConfig Homepage	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/index.rst	/^.. _`EditorConfig Homepage`: http:\/\/editorconfig.org$/;"	T	chapter:EditorConfig Python Core -- Process EditorConfig Files With Python
EditorConfig Project	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^EditorConfig Project$/;"	c
EditorConfig Python Core	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^EditorConfig Python Core$/;"	c
EditorConfig Python Core -- Process EditorConfig Files With Python	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/index.rst	/^EditorConfig Python Core -- Process EditorConfig Files With Python$/;"	c
EditorConfigError	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^class EditorConfigError(Exception):$/;"	c
EditorConfigHandler	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^class EditorConfigHandler(object):$/;"	c
EditorConfigParser	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^class EditorConfigParser(object):$/;"	c
EditorConfigReload	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigReload call s:UseConfigFiles() " Reload EditorConfig files$/;"	c
Emmet	nvim/plugged/emmet-vim/plugin/emmet.vim	/^  command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
EmmetInstall	nvim/plugged/emmet-vim/plugin/emmet.vim	/^command! -nargs=0 -bar EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)$/;"	c
EmmetUnitTest	nvim/plugged/emmet-vim/unittest.vim	/^command! -bang -nargs=* -complete=customlist,<SID>emmet_unittest_complete EmmetUnitTest call s:d/;"	c
Errors	nvim/plugged/syntastic/plugin/syntastic.vim	/^command! -bar Errors              call SyntasticErrors()$/;"	c
Example	nvim/plugged/vim-go/autoload/go/test-fixtures/complete/complete.go	/^func Example(s string) {$/;"	f	package:complete
Exception	nvim/plugged/vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
Exception handling example	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Exception handling example$/;"	S	section:Handling Exceptions
Exceptions module reference	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Exceptions module reference$/;"	S	section:Handling Exceptions
ExitRemoteProcess	nvim/plugged/vimproc.vim/src/proc_w32.c	/^static BOOL ExitRemoteProcess(HANDLE hProcess, UINT_PTR uExitCode)$/;"	f	typeref:typename:BOOL	file:
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}\\({[ \\t]*\\)*\\([A-Za-z0-9_\\*]*[ \\t]as[ \\t/;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}const[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[/;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}const[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)\//;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}default[ \\t]\\{1,\\}\\({[ \\t]*\\)*\\([A-Za-z0/;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}default[ \\t]\\{1,\\}const[ \\t]\\{1,\\}\\([A-Z/;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}default[ \\t]\\{1,\\}function[ \\t]\\{1,\\}\\([/;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}default[ \\t]\\{1,\\}let[ \\t]\\{1,\\}\\([A-Za-/;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}default[ \\t]\\{1,\\}var[ \\t]\\{1,\\}\\([A-Za-/;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}function[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\/;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}let[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\/;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}let[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)\/\\/;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}var[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\/;"	k
Export,Exports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*export[ \\t]\\{1,\\}var[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)\/\\/;"	k
F	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map F <Plug>(easymotion-F)$/;"	m
F.A.Q.	nvim/plugged/nerdtree/README.markdown	/^F.A.Q.$/;"	s
F/	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map F\/ <Plug>(easymotion-Fn)$/;"	m
FILE_LIST_CMD	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
Fail	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/mock/controller.go	/^func Fail(t *testing.T) {$/;"	f	package:mock
Features	nvim/plugged/vim-pencil/README.markdown	/^# Features$/;"	c
FetchBlueprint	nvim/plugged/apiblueprint.vim/plugin/apiary.vim	/^function! FetchBlueprint()$/;"	f
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^class Filter(Base):$/;"	c
Filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^class Filter(Base):$/;"	c
Finding Trailing Whitespace	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Finding Trailing Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
Foo	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/imports/goimports.go	/^func Foo(log *logging.TestLogger) {$/;"	f	package:main
Foo	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/imports/goimports_golden.go	/^func Foo(log *logging.TestLogger) {$/;"	f	package:main
Foo	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^func Foo(log *logging.TestLogger) {$/;"	f	package:main
Foo	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^func Foo(log *logging.TestLogger) {$/;"	f	package:main
FriendlyName	nvim/plugged/vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
Future development	nvim/plugged/vim-pencil/README.markdown	/^# Future development$/;"	c
GTabularize	nvim/plugged/tabular/plugin/Tabular.vim	/^   \\ GTabularize <line1>,<line2>$/;"	c
Gedit	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^.. _`Gedit`: https:\/\/github.com\/editorconfig\/editorconfig-gedit$/;"	T	chapter:Writing Plugins
GenerateRefract	nvim/plugged/apiblueprint.vim/plugin/apiblueprint.vim	/^function! GenerateRefract()$/;"	f
Generator,Generators	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*\\(\\*[ \\t]\\)\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*(.*)[ \\t]*[{]\/\\/;"	k
Generator,Generators	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*const[ \\t]\\{1,\\}\\([a-z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*f/;"	k
Generator,Generators	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*function[ \\t]*\\*[ \\t]*\\([A-Za-z0-9_$]\\{1,\\}\\)\/\\1\/G,Genera/;"	k
Generator,Generators	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*let[ \\t]\\{1,\\}\\([a-z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*fun/;"	k
Generator,Generators	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*var[ \\t]\\{1,\\}\\([a-z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*fun/;"	k
GetGoHTMLTmplIndent	nvim/plugged/vim-go/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetJavascriptIndent	nvim/plugged/vim-javascript/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetPugIndent	nvim/plugged/vim-pug/indent/pug.vim	/^function! GetPugIndent()$/;"	f
GetTypescriptIndent	nvim/plugged/typescript-vim/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
Getting Help	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^Getting Help$/;"	c
GitGutter	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 1)$/;"	c
GitGutterAll	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterAll call gitgutter#all(1)$/;"	c
GitGutterDebug	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterGetHunkSummary	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsDisable call gitgutter#highlight#line_disable()$/;"	c
GitGutterLineHighlightsEnable	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsEnable  call gitgutter#highlight#line_enable()$/;"	c
GitGutterLineHighlightsToggle	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsToggle  call gitgutter#highlight#line_toggle()$/;"	c
GitGutterNextHunk	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterPreviewHunk call gitgutter#hunk#preview()$/;"	c
GitGutterSignsDisable	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsDisable call gitgutter#sign#disable()$/;"	c
GitGutterSignsEnable	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsEnable  call gitgutter#sign#enable()$/;"	c
GitGutterSignsToggle	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsToggle  call gitgutter#sign#toggle()$/;"	c
GitGutterStageHunk	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterStageHunk   call gitgutter#hunk#stage()$/;"	c
GitGutterToggle	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterUndoHunk    call gitgutter#hunk#undo()$/;"	c
GoAddTags	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoAddTags call go#tags#Add(<line1>, <line2>, <count>, <f-args>)$/;"	c
GoAlternate	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -bang GoAlternate call go#alternate#Switch(<bang>0, '')$/;"	c
GoAsmFmtAutoSaveToggle	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAsmFmtAutoSaveToggle call go#asmfmt#ToggleAsmFmtAutoSave()$/;"	c
GoAutoTypeInfoToggle	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAutoTypeInfoToggle call go#complete#ToggleAutoTypeInfo()$/;"	c
GoBuild	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoBuild call go#cmd#Build(<bang>0,<f-args>)$/;"	c
GoBuildTags	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -bang GoBuildTags call go#cmd#BuildTags(<bang>0, <f-args>)$/;"	c
GoCallees	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallees call go#guru#Callees(<count>)$/;"	c
GoCallers	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallers call go#guru#Callers(<count>)$/;"	c
GoCallstack	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallstack call go#guru#Callstack(<count>)$/;"	c
GoChannelPeers	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoChannelPeers call go#guru#ChannelPeers(<count>)$/;"	c
GoCoverage	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverage call go#coverage#Buffer(<bang>0, <f-args>)$/;"	c
GoCoverageBrowser	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageBrowser call go#coverage#Browser(<bang>0, <f-args>)$/;"	c
GoCoverageClear	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageClear call go#coverage#Clear()$/;"	c
GoCoverageToggle	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageToggle call go#coverage#BufferToggle(<bang>0, <f-args>)$/;"	c
GoDebugBreakpoint	nvim/plugged/vim-go/autoload/go/debug.vim	/^  command! -nargs=? GoDebugBreakpoint call go#debug#Breakpoint(<f-args>)$/;"	c
GoDebugBreakpoint	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^  command! -nargs=? GoDebugBreakpoint call go#debug#Breakpoint(<f-args>)$/;"	c
GoDebugContinue	nvim/plugged/vim-go/autoload/go/debug.vim	/^  command! -nargs=0 GoDebugContinue   call go#debug#Stack('continue')$/;"	c
GoDebugNext	nvim/plugged/vim-go/autoload/go/debug.vim	/^  command! -nargs=0 GoDebugNext       call go#debug#Stack('next')$/;"	c
GoDebugPrint	nvim/plugged/vim-go/autoload/go/debug.vim	/^  command! -nargs=1 GoDebugPrint      call go#debug#Print(<q-args>)$/;"	c
GoDebugRestart	nvim/plugged/vim-go/autoload/go/debug.vim	/^  command! -nargs=0 GoDebugRestart    call go#debug#Restart()$/;"	c
GoDebugSet	nvim/plugged/vim-go/autoload/go/debug.vim	/^  command! -nargs=* GoDebugSet        call go#debug#Set(<f-args>)$/;"	c
GoDebugStart	nvim/plugged/vim-go/autoload/go/debug.vim	/^  command! -nargs=* -complete=customlist,go#package#Complete GoDebugStart call go#debug#Start(0,/;"	c
GoDebugStart	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^  command! -nargs=* -complete=customlist,go#package#Complete GoDebugStart call go#debug#Start(0,/;"	c
GoDebugStep	nvim/plugged/vim-go/autoload/go/debug.vim	/^  command! -nargs=0 GoDebugStep       call go#debug#Stack('step')$/;"	c
GoDebugStepOut	nvim/plugged/vim-go/autoload/go/debug.vim	/^  command! -nargs=0 GoDebugStepOut    call go#debug#Stack('stepOut')$/;"	c
GoDebugStop	nvim/plugged/vim-go/autoload/go/debug.vim	/^  command! -nargs=0 GoDebugStop       call go#debug#Stop()$/;"	c
GoDebugTest	nvim/plugged/vim-go/autoload/go/debug.vim	/^  command! -nargs=* -complete=customlist,go#package#Complete GoDebugTest  call go#debug#Start(1,/;"	c
GoDebugTest	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^  command! -nargs=* -complete=customlist,go#package#Complete GoDebugTest  call go#debug#Start(1,/;"	c
GoDecls	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=file GoDecls call go#decls#Decls(0, <q-args>)$/;"	c
GoDeclsDir	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=dir GoDeclsDir call go#decls#Decls(1, <q-args>)$/;"	c
GoDef	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoDef :call go#def#Jump('')$/;"	c
GoDefPop	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefPop :call go#def#StackPop(<f-args>)$/;"	c
GoDefStack	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStack :call go#def#Stack(<f-args>)$/;"	c
GoDefStackClear	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStackClear :call go#def#StackClear(<f-args>)$/;"	c
GoDeps	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoDeps echo go#tool#Deps()$/;"	c
GoDescribe	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoDescribe call go#guru#Describe(<count>)$/;"	c
GoDoc	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDoc call go#doc#Open('new', /;"	c
GoDocBrowser	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDocBrowser call go#doc#OpenB/;"	c
GoDrop	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#package#Complete GoDrop call go#import#SwitchImport(0,/;"	c
GoErrCheck	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=customlist,go#package#Complete GoErrCheck call go#lint#Errchec/;"	c
GoFiles	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#tool#ValidFiles GoFiles echo go#tool#Files(<f-args>)$/;"	c
GoFillStruct	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFillStruct call go#fillstruct#FillStruct()$/;"	c
GoFmt	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmt call go#fmt#Format(-1)$/;"	c
GoFmtAutoSaveToggle	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmtAutoSaveToggle call go#fmt#ToggleFmtAutoSave()$/;"	c
GoFreevars	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoFreevars call go#guru#Freevars(<count>)$/;"	c
GoGenerate	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoGenerate call go#cmd#Generate(<bang>0,<f-args>)$/;"	c
GoGuruScope	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoGuruScope call go#guru#Scope(<f-arg/;"	c
GoIfErr	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoIfErr call go#iferr#Generate()$/;"	c
GoImpl	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#impl#Complete GoImpl call go#impl#Impl(<f-args>)$/;"	c
GoImplements	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoImplements call go#guru#Implements(<count>)$/;"	c
GoImport	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=1 -bang -complete=customlist,go#package#Complete GoImport call go#import#SwitchI/;"	c
GoImportAs	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=customlist,go#package#Complete GoImportAs call go#import#Switc/;"	c
GoImports	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoImports call go#fmt#Format(1)$/;"	c
GoIndent	nvim/plugged/vim-go/indent/go.vim	/^function! GoIndent(lnum) abort$/;"	f
GoInfo	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoInfo call go#tool#Info(1)$/;"	c
GoInstall	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoInstall call go#cmd#Install(<bang>0, <f-args>)$/;"	c
GoInstallBinaries	nvim/plugged/vim-go/plugin/go.vim	/^command! -nargs=* -complete=customlist,s:complete GoInstallBinaries call s:GoInstallBinaries(-1,/;"	c
GoKeyify	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoKeyify call go#keyify#Keyify()$/;"	c
GoLint	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoLint call go#lint#Golint(<bang>0, <f-args>)$/;"	c
GoMetaLinter	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoMetaLinter call go#lint#Gometa(<bang>0, 0, <f-args>)$/;"	c
GoMetaLinterAutoSaveToggle	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoMetaLinterAutoSaveToggle call go#lint#ToggleMetaLinterAutoSave()$/;"	c
GoModFmt	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range GoModFmt call go#mod#Format()$/;"	c
GoModFmt	nvim/plugged/vim-go/ftplugin/gomod/commands.vim	/^command! -nargs=0 -range GoModFmt call go#mod#Format()$/;"	c
GoModFmtAutoSaveToggle	nvim/plugged/vim-go/ftplugin/gomod/commands.vim	/^command! -nargs=0 GoModFmtAutoSaveToggle call go#mod#ToggleModFmtAutoSave()$/;"	c
GoPath	nvim/plugged/vim-go/plugin/go.vim	/^command! -nargs=? -complete=dir GoPath call go#path#GoPath(<f-args>)$/;"	c
GoPlay	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range=% GoPlay call go#play#Share(<count>, <line1>, <line2>)$/;"	c
GoPointsTo	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoPointsTo call go#guru#PointsTo(<count>)$/;"	c
GoReferrers	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoReferrers call go#guru#Referrers(<count>)$/;"	c
GoRemoveTags	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoRemoveTags call go#tags#Remove(<line1>, <line2>, <count>, <f-args>)$/;"	c
GoRename	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#rename#Complete GoRename call go#rename#Rename(<bang>0/;"	c
GoReportGitHubIssue	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoReportGitHubIssue call go#issue#New()$/;"	c
GoRun	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=file GoRun call go#cmd#Run(<bang>0,<f-args>)$/;"	c
GoSameIds	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIds call go#guru#SameIds(1)$/;"	c
GoSameIdsAutoToggle	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsAutoToggle call go#guru#AutoToogleSameIds()$/;"	c
GoSameIdsClear	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsClear call go#guru#ClearSameIds()$/;"	c
GoSameIdsToggle	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsToggle call go#guru#ToggleSameIds()$/;"	c
GoTemplateAutoCreateToggle	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoTemplateAutoCreateToggle call go#template#ToggleAutoCreate()$/;"	c
GoTest	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTest call go#test#Test(<bang>0, 0, <f-args>)$/;"	c
GoTestCompile	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestCompile call go#test#Test(<bang>0, 1, <f-args>)$/;"	c
GoTestFunc	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestFunc call go#test#Func(<bang>0, <f-args>)$/;"	c
GoUpdateBinaries	nvim/plugged/vim-go/plugin/go.vim	/^command! -nargs=* -complete=customlist,s:complete GoUpdateBinaries  call s:GoInstallBinaries(1, /;"	c
GoVet	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoVet call go#lint#Vet(<bang>0, <f-args>)$/;"	c
GoWhicherrs	nvim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoWhicherrs call go#guru#Whicherrs(<count>)$/;"	c
Goyo	nvim/plugged/goyo.vim/plugin/goyo.vim	/^command! -nargs=? -bar -bang Goyo call goyo#execute(<bang>0, <q-args>)$/;"	c
GutentagsToggleEnabled	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUpdate	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^    command! -buffer -bang GutentagsUpdate :call s:manual_update_tags(<bang>0)$/;"	c
Handling Exceptions	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Handling Exceptions$/;"	s	chapter:Usage
Hard line breaks or soft line wrap?	nvim/plugged/vim-pencil/README.markdown	/^## Hard line breaks or soft line wrap?$/;"	s
HardPencil	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 HardPencil     call pencil#init({'wrap': 'hard'})$/;"	c
HiLink	nvim/plugged/typescript-vim/syntax/typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	nvim/plugged/typescript-vim/syntax/typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	nvim/plugged/vim-javascript/extras/flow.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	nvim/plugged/vim-javascript/extras/flow.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	nvim/plugged/vim-javascript/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	nvim/plugged/vim-javascript/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	nvim/plugged/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	nvim/plugged/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
How This Work	nvim/plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">How This Work<\/h2>$/;"	i
INC	nvim/plugged/vimproc.vim/make_android.mak	/^INC=src\/vimstack.c src\/ptytty.h$/;"	m
INC	nvim/plugged/vimproc.vim/make_sunos.mak	/^INC=src\/vimstack.c src\/ptytty.h$/;"	m
INDEX_WHOLE_PROJECT	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
INTP_VER	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^INTP_VER = sys.version_info[:2]$/;"	v
Import,Imports	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*import[ \\t]\\{1,\\}\\([{][ \\t]*\\)*\\([A-Za-z0-9_\\*]*[ \\t]as[ \\/;"	k
IndentLinesDisable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^    command! IndentLinesDisable call <SID>IndentLinesDisable()$/;"	c
IndentLinesDisable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^    command! IndentLinesDisable let b:indentLine_enabled = 0 | call <SID>IndentLinesDisable()$/;"	c
IndentLinesEnable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^    command! IndentLinesEnable call <SID>IndentLinesEnable()$/;"	c
IndentLinesEnable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^    command! IndentLinesEnable let b:indentLine_enabled = 1 | call <SID>IndentLinesEnable()$/;"	c
IndentLinesReset	nvim/plugged/indentline/after/plugin/indentLine.vim	/^command! -nargs=? IndentLinesReset call <SID>ResetWidth(<f-args>)$/;"	c
IndentLinesToggle	nvim/plugged/indentline/after/plugin/indentLine.vim	/^command! IndentLinesToggle call <SID>IndentLinesToggle()$/;"	c
Initializing by command	nvim/plugged/vim-pencil/README.markdown	/^## Initializing by command$/;"	s
Initializing by file type	nvim/plugged/vim-pencil/README.markdown	/^## Initializing by file type$/;"	s
Insert Final Newline Property	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/insert_final_newline.rst	/^Insert Final Newline Property$/;"	c
InsertTestText1	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! InsertTestText1()$/;"	f
Install	nvim/plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Install<\/h2>$/;"	i
Installation	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^Installation$/;"	c
Installation	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Installation$/;"	s	chapter:Usage
Installation	nvim/plugged/nerdtree/README.markdown	/^Installation$/;"	s
Installation	nvim/plugged/vim-pencil/README.markdown	/^# Installation$/;"	c
Installation	nvim/plugged/vim-pug/README.markdown	/^Installation$/;"	s
Introduction	nvim/plugged/nerdtree/README.markdown	/^Introduction$/;"	s
J	nvim/settings/vim-move.vim	/^vmap J <Plug>MoveBlockDown$/;"	m
J	vim/settings/vim-move.vim	/^vmap J <Plug>MoveBlockDown$/;"	m
K	nvim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> K :GoDoc<cr>$/;"	m
K	nvim/settings/vim-move.vim	/^vmap K <Plug>MoveBlockUp$/;"	m
K	vim/settings/vim-move.vim	/^vmap K <Plug>MoveBlockUp$/;"	m
L	nvim/autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	nvim/autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
LDFLAGS	nvim/plugged/vimproc.vim/make_mac.mak	/^LDFLAGS=$/;"	m
LEFT_BRACE	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^LEFT_BRACE = re.compile($/;"	v
LIBDIR	nvim/plugged/vimproc.vim/make_msvc.mak	/^LIBDIR = lib$/;"	m
LIBS	nvim/plugged/vimproc.vim/make_unix.mak	/^LIBS=-lutil$/;"	m
LINES_ABOVE	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^LINES_ABOVE = 100$/;"	v
LINES_ABOVE	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^LINES_ABOVE = 20$/;"	v
LINES_BELOW	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^LINES_BELOW = 100$/;"	v
LINES_BELOW	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^LINES_BELOW = 20$/;"	v
LOG_FILE	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
Latin1 Character Set	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^Latin1 Character Set$/;"	s	chapter:Tests for Newlines
Latin1 Character Set with Unicode	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^Latin1 Character Set with Unicode$/;"	s	chapter:Tests for Newlines
LeadingSpaceDisable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^    command! LeadingSpaceDisable call <SID>LeadingSpaceDisable()$/;"	c
LeadingSpaceDisable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^    command! LeadingSpaceDisable let b:indentLine_leadingSpaceEnabled = 0 | call <SID>LeadingSpa/;"	c
LeadingSpaceEnable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^    command! LeadingSpaceEnable call <SID>LeadingSpaceEnable()$/;"	c
LeadingSpaceEnable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^    command! LeadingSpaceEnable let b:indentLine_leadingSpaceEnabled = 1 | call <SID>LeadingSpac/;"	c
LeadingSpaceToggle	nvim/plugged/indentline/after/plugin/indentLine.vim	/^command! LeadingSpaceToggle call <SID>LeadingSpaceToggle()$/;"	c
License	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^License$/;"	c
License	nvim/plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">License<\/h2>$/;"	i
License	nvim/plugged/vim-markdown/README.markdown	/^## License$/;"	s
LightlineFilename	nvim/settings/lightline.vim	/^function! LightlineFilename()$/;"	f
LightlineFilename	vim/settings/lightline.vim	/^function! LightlineFilename()$/;"	f
LocalVimRC	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^command! LocalVimRC        call s:LocalVimRC()$/;"	c
LocalVimRCCleanup	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^command! LocalVimRCCleanup call s:LocalVimRCCleanup()$/;"	c
LocalVimRCClear	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^command! LocalVimRCClear   call s:LocalVimRCClear()$/;"	c
LocalVimRCDebugShow	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^command! LocalVimRCDebugShow call s:LocalVimRCDebugShow()$/;"	c
LocalVimRCDisable	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^command! LocalVimRCDisable call s:LocalVimRCDisable()$/;"	c
LocalVimRCEdit	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^command! LocalVimRCEdit    call s:LocalVimRCEdit()$/;"	c
LocalVimRCEnable	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^command! LocalVimRCEnable  call s:LocalVimRCEnable()$/;"	c
LocalVimRCFinish	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! LocalVimRCFinish()$/;"	f
LocalVimRCForget	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^command! -nargs=+ -complete=file LocalVimRCForget  call s:LocalVimRCForget(<f-args>)$/;"	c
Log	nvim/plugged/vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
LoggingMixin	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class LoggingMixin(object):$/;"	c
LoopParseArgs	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
MAKE	nvim/plugged/vimproc.vim/Makefile	/^        MAKE = make # BSD Make$/;"	m
Manual formatting	nvim/plugged/vim-pencil/README.markdown	/^## Manual formatting$/;"	s
ManualPencil	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  com -nargs=0 ManualPencil  call pencil#setAutoFormat(0)$/;"	c
MarkdownFold	nvim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! MarkdownFold()$/;"	f
MarkdownFoldText	nvim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! MarkdownFoldText()$/;"	f
Method,Methods	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*\\([A-Za-z0-9_$]\\{1,\\}\\)(.*)[ \\t]*[{]\/\\1\/M,Method,Methods\/b$/;"	k
Method,Methods	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*[:=][ \\t]*[(]*function[ \\t]*(\//;"	k
Method,Methods	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*[=][ \\t].\\{1,\\}=>\/\\1\/M,Meth/;"	k
Method,Methods	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*static[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*(\/\\1\/M,Met/;"	k
Method,Methods	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*this\\.\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=.*[{]$\/\\1\/M,Method,Met/;"	k
MissingDoc	nvim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/lint.go	/^func MissingDoc() {$/;"	f	package:lint
MissingFooDoc	nvim/plugged/vim-go/autoload/go/test-fixtures/lint/src/foo/foo.go	/^func MissingFooDoc() {$/;"	f	package:foo
Modified	nvim/plugged/lightline.vim/test/expand.vim	/^  function! Modified()$/;"	f
N	nvim/settings/vim-easymotion.vim	/^map  N <Plug>(easymotion-prev)$/;"	m
N	vim/settings/vim-easymotion.vim	/^map  N <Plug>(easymotion-prev)$/;"	m
NERDTree	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreateTabTree('<args>')$/;"	c
NERDTree	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTreeAddKeyMap	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeClose	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeClose :call g:NERDTree.Close()$/;"	c
NERDTreeCopyNode	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeDirArrows	nvim/settings/NERDTree.vim	/^let NERDTreeDirArrows = 1$/;"	v
NERDTreeDirArrows	vim/settings/NERDTree.vim	/^let NERDTreeDirArrows = 1$/;"	v
NERDTreeExecFile	nvim/plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	nvim/plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeFind	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=file -bar NERDTreeFind call s:findAndRevealPath('<args>')$/;"	c
NERDTreeFocus	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call/;"	c
NERDTreeHijackNetrw	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMinimalUI	nvim/settings/NERDTree.vim	/^let NERDTreeMinimalUI = 1$/;"	v
NERDTreeMinimalUI	vim/settings/NERDTree.vim	/^let NERDTreeMinimalUI = 1$/;"	v
NERDTreeMirror	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRefreshRoot	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeRefreshRoot call s:refreshRoot()$/;"	c
NERDTreeRender	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeShowHidden	nvim/settings/NERDTree.vim	/^let NERDTreeShowHidden = 1$/;"	v
NERDTreeShowHidden	vim/settings/NERDTree.vim	/^let NERDTreeShowHidden = 1$/;"	v
NERDTreeToggle	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.ToggleTabTree('<args/;"	c
NUMERIC_RANGE	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^NUMERIC_RANGE = re.compile($/;"	v
NeoBundle	nvim/plugged/vim-pencil/README.markdown	/^#### NeoBundle$/;"	t
NoPencil	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 NoPencil       call pencil#init({'wrap': 'off' })$/;"	c
Not Trimming Whitespace	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Not Trimming Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
OBJS	nvim/plugged/vimproc.vim/make_msvc.mak	/^OBJS = $(OUTDIR)\/proc_w32.obj$/;"	m
OPEN_MAX	nvim/plugged/vimproc.vim/src/fakepoll.h	/^  #define OPEN_MAX /;"	d
OPTCRE	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    OPTCRE = re.compile($/;"	v	class:EditorConfigParser
OUTDIR	nvim/plugged/vimproc.vim/make_msvc.mak	/^OUTDIR = $(SRCDIR)\\obj$(CPU)$/;"	m
Object,Objects	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*const[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*[{]\/\\/;"	k
Object,Objects	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*let[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*[{]\/\\1/;"	k
Object,Objects	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*var[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*[{]\/\\1/;"	k
Old Mac-style Newlines	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Old Mac-style Newlines$/;"	S	section:Tests for Newlines
OpenBookmark	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 OpenBookmark call /;"	c
OrderedDict	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^class OrderedDict(dict):$/;"	c
P	nvim/init.vim	/^nnoremap P P=`]<C-o>$/;"	m
P	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> P$/;"	m
P	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> P$/;"	m
P	vim/.vimrc	/^nnoremap P P=`]<C-o>$/;"	m
PAPER	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^PAPER         =$/;"	m
PAPER	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter$/;"	v
PAPEROPT_a4	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^PAPEROPT_a4     = -D latex_paper_size=a4$/;"	m
PAPEROPT_letter	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^PAPEROPT_letter = -D latex_paper_size=letter$/;"	m
PATH	nvim/plugged/deoplete.nvim/Makefile	/^PATH := .\/vim-themis\/bin:$(PATH)$/;"	m
PAUSE_BEFORE_EXIT	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
PFormat	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 PFormat        call pencil#setAutoFormat(1)$/;"	c
PFormatOff	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 PFormatOff     call pencil#setAutoFormat(0)$/;"	c
PFormatToggle	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 PFormatToggle  call pencil#setAutoFormat(-1)$/;"	c
PLATFORM	nvim/plugged/vimproc.vim/Makefile	/^            PLATFORM = mingw32$/;"	m
PLATFORM	nvim/plugged/vimproc.vim/Makefile	/^            PLATFORM = mingw64$/;"	m
PLATFORM	nvim/plugged/vimproc.vim/Makefile	/^        PLATFORM = bsd$/;"	m
PLATFORM	nvim/plugged/vimproc.vim/Makefile	/^        PLATFORM = cygwin$/;"	m
PLATFORM	nvim/plugged/vimproc.vim/Makefile	/^        PLATFORM = mac$/;"	m
PLATFORM	nvim/plugged/vimproc.vim/Makefile	/^        PLATFORM = sunos$/;"	m
PLATFORM	nvim/plugged/vimproc.vim/Makefile	/^        PLATFORM = unix$/;"	m
POLLERR	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define POLLERR /;"	d
POLLHUP	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define POLLHUP /;"	d
POLLIN	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define POLLIN /;"	d
POLLNORM	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define POLLNORM /;"	d
POLLNVAL	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define POLLNVAL /;"	d
POLLOUT	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define POLLOUT /;"	d
POLLPRI	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define POLLPRI /;"	d
POLLRDBAND	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define POLLRDBAND /;"	d
POLLRDNORM	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define POLLRDNORM /;"	d
POLLWRBAND	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define POLLWRBAND /;"	d
POLLWRNORM	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define POLLWRNORM /;"	d
POST_PROCESS_CMD	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_ROOT	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
Parse	nvim/plugged/vim-go/test/parse.go	/^func Parse(r io.Reader) (*Node, error) {$/;"	f	package:html
ParseArgs	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseFragment	nvim/plugged/vim-go/test/parse.go	/^func ParseFragment(r io.Reader, context *Node) ([]*Node, error) {$/;"	f	package:html
ParsingError	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^class ParsingError(_ParsingError, EditorConfigError):$/;"	c
PathError	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^class PathError(ValueError, EditorConfigError):$/;"	c
Pathogen	nvim/plugged/vim-pencil/README.markdown	/^#### Pathogen$/;"	t
Pencil	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 Pencil         call pencil#init({'wrap': 'on' })$/;"	c
PencilHard	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 PencilHard     call pencil#init({'wrap': 'hard'})$/;"	c
PencilMode	nvim/plugged/vim-pencil/plugin/pencil.vim	/^fun! PencilMode()$/;"	f
PencilOff	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 PencilOff      call pencil#init({'wrap': 'off' })$/;"	c
PencilSoft	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 PencilSoft     call pencil#init({'wrap': 'soft'})$/;"	c
PencilToggle	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 PencilToggle   call pencil#init({'wrap': 'toggle'})$/;"	c
Plug	nvim/autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
Plug	nvim/plugged/vim-pencil/README.markdown	/^#### Plug$/;"	t
PlugClean	nvim/autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	nvim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	nvim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	nvim/autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	nvim/autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	nvim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	nvim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	nvim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
PowerlineMain	nvim/plugged/goyo.vim/autoload/goyo.vim	/^    augroup PowerlineMain$/;"	a
Process	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^class Process(asyncio.SubprocessProtocol):$/;"	c
Property,Properties	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*\\(this\\.\\)*\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*[:=].*[,;]*[^{]$\/\\/;"	k
PublishBlueprint	nvim/plugged/apiblueprint.vim/plugin/apiary.vim	/^function! PublishBlueprint()$/;"	f
R	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
RIGHT_BRACE	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^RIGHT_BRACE = re.compile($/;"	v
Random	nvim/plugged/vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
ReadBookmarks	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ReadBookmarks call g:NERDTreeBookmark.CacheBookmarks(0) <bar> call/;"	c
RedirectStream	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^class RedirectStream(io.IOBase):$/;"	c
Repository	nvim/plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Repository<\/h2>$/;"	i
RevealBookmark	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 RevealBookmark :ca/;"	c
RunTest	nvim/plugged/vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
Running Test Cases	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^Running Test Cases$/;"	c
Running Tests	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/README.rst	/^Running Tests$/;"	s	chapter:Tests for EditorConfig Plugins
S	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
SECTCRE	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    SECTCRE = re.compile($/;"	v	class:EditorConfigParser
SPHINXBUILD	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^SPHINXBUILD   = sphinx-build$/;"	m
SPHINXBUILD	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^	set SPHINXBUILD=sphinx-build$/;"	v
SPHINXOPTS	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^SPHINXOPTS    =$/;"	m
SRC	nvim/plugged/vimproc.vim/make_android.mak	/^SRC=src\/proc.c src\/ptytty.c$/;"	m
SRC	nvim/plugged/vimproc.vim/make_bsd.mak	/^SRC=src\/proc.c$/;"	m
SRC	nvim/plugged/vimproc.vim/make_cygwin.mak	/^SRC=src\/proc.c$/;"	m
SRC	nvim/plugged/vimproc.vim/make_mac.mak	/^SRC=src\/proc.c$/;"	m
SRC	nvim/plugged/vimproc.vim/make_mingw32.mak	/^SRC=src\/proc_w32.c$/;"	m
SRC	nvim/plugged/vimproc.vim/make_mingw64.mak	/^SRC=src\/proc_w32.c$/;"	m
SRC	nvim/plugged/vimproc.vim/make_sunos.mak	/^SRC=src\/proc.c src\/ptytty.c$/;"	m
SRC	nvim/plugged/vimproc.vim/make_unix.mak	/^SRC=src\/proc.c$/;"	m
SRCDIR	nvim/plugged/vimproc.vim/make_msvc.mak	/^SRCDIR = src$/;"	m
SUFFIX	nvim/plugged/vimproc.vim/make_unix.mak	/^	SUFFIX=linux$(if $(wildcard \/lib*\/ld-linux*64.so.2),64,32)$/;"	m
SUFFIX	nvim/plugged/vimproc.vim/make_unix.mak	/^	SUFFIX=unix$/;"	m
SYS	nvim/plugged/vimproc.vim/Makefile	/^    SYS := $(shell gcc -dumpmachine)$/;"	m
See also	nvim/plugged/vim-pencil/README.markdown	/^# See also$/;"	c
Sentence spacing	nvim/plugged/vim-pencil/README.markdown	/^## Sentence spacing$/;"	s
SetUp	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
ShiftPencil	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  com -nargs=0 ShiftPencil   call pencil#setAutoFormat(-1)$/;"	c
ShowUsage	nvim/plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	nvim/plugged/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Shuffle	nvim/plugged/vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
SoftPencil	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 SoftPencil     call pencil#init({'wrap': 'soft'})$/;"	c
Source	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^class Source(Base):$/;"	c
Source	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^class Source(Base):$/;"	c
Source	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^class Source(Base):$/;"	c
Source	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^class Source(Base):$/;"	c
Source	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^class Source(Base):$/;"	c
Source	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^class Source(Base):$/;"	c
Source	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^class Source(Base):$/;"	c
Source	nvim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^class Source(Base):$/;"	c
SourceInitError	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/exceptions.py	/^class SourceInitError(Exception):$/;"	c
Space-based indentation	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Space-based indentation$/;"	s	chapter:Tests for Indentation Properties
Space-based indentation with no size specified	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Space-based indentation with no size specified$/;"	S	section:Space-based indentation
SplitCDeclarations	nvim/plugged/tabular/after/plugin/TabularMaps.vim	/^function! SplitCDeclarations(lines)$/;"	f
Status line indicator	nvim/plugged/vim-pencil/README.markdown	/^## Status line indicator$/;"	s
StyledComponent,StyledComponents	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*const[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*create/;"	k
StyledComponent,StyledComponents	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*const[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*styled/;"	k
StyledComponent,StyledComponents	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*let[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*createGl/;"	k
StyledComponent,StyledComponents	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*let[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*styled\//;"	k
StyledComponent,StyledComponents	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*var[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*createGl/;"	k
StyledComponent,StyledComponents	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*var[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*styled\//;"	k
Suspend automatic formatting for the Insert	nvim/plugged/vim-pencil/README.markdown	/^## Suspend automatic formatting for the Insert$/;"	s
SyncParent	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^class SyncParent(_Parent):$/;"	c
SyntasticAutoloclistNotifier.AutoToggle	nvim/plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist) abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.New	nvim/plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New() abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.refresh	nvim/plugged/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsExprNotifier	nvim/plugged/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.New	nvim/plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.enabled	nvim/plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.refresh	nvim/plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsNotifier.reset	nvim/plugged/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticCheck	nvim/plugged/syntastic/plugin/syntastic.vim	/^command! -bar -nargs=* -complete=custom,s:CompleteCheckerName SyntasticCheck call SyntasticCheck/;"	c
SyntasticCheck	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticCheck(...) abort " {{{2$/;"	f
SyntasticChecker.New	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args, ...) abort " {{{2$/;"	f
SyntasticChecker._getOpt	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._getOpt(opts, basename, name, default) abort " {{{2$/;"	f
SyntasticChecker._populateHighlightRegexes	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(errors) abort " {{{2$/;"	f
SyntasticChecker._quietMessages	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._quietMessages(errors) abort " {{{2$/;"	f
SyntasticChecker.getCName	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getCName() abort " {{{2$/;"	f
SyntasticChecker.getExec	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExec() abort " {{{2$/;"	f
SyntasticChecker.getExecEscaped	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExecEscaped() abort " {{{2$/;"	f
SyntasticChecker.getFiletype	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype() abort " {{{2$/;"	f
SyntasticChecker.getLocList	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList() abort " {{{2$/;"	f
SyntasticChecker.getLocListRaw	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocListRaw() abort " {{{2$/;"	f
SyntasticChecker.getName	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName() abort " {{{2$/;"	f
SyntasticChecker.getVersion	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getVersion(...) abort " {{{2$/;"	f
SyntasticChecker.isAvailable	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable() abort " {{{2$/;"	f
SyntasticChecker.isDisabled	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isDisabled() abort " {{{2$/;"	f
SyntasticChecker.log	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.log(msg, ...) abort " {{{2$/;"	f
SyntasticChecker.makeprgBuild	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.makeprgBuild(opts) abort " {{{2$/;"	f
SyntasticChecker.setVersion	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setVersion(version) abort " {{{2$/;"	f
SyntasticChecker.setWantSort	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setWantSort(val) abort " {{{2$/;"	f
SyntasticChecker.syncExec	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.syncExec(...) abort " {{{2$/;"	f
SyntasticChecker.wantSort	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.wantSort() abort " {{{2$/;"	f
SyntasticCursorNotifier.New	nvim/plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New() abort " {{{2$/;"	f
SyntasticCursorNotifier.enabled	nvim/plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled() abort " {{{2$/;"	f
SyntasticCursorNotifier.refresh	nvim/plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticCursorNotifier.reset	nvim/plugged/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticErrors	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticErrors() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.New	nvim/plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._reset	nvim/plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._reset() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._setup	nvim/plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._setup() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.enabled	nvim/plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.refresh	nvim/plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticHighlightingNotifier.reset	nvim/plugged/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticInfo	nvim/plugged/syntastic/plugin/syntastic.vim	/^command! -bar -nargs=? -complete=custom,s:CompleteFiletypes   SyntasticInfo  call SyntasticInfo(/;"	c
SyntasticInfo	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticInfo(...) abort " {{{2$/;"	f
SyntasticJavacEditClasspath	nvim/plugged/syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditClasspath runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditC/;"	c
SyntasticJavacEditClasspath	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticJavacEditConfig	nvim/plugged/syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditConfig    runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditC/;"	c
SyntasticJavacEditConfig	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditConfig    call s:EditConfig()$/;"	c
SyntasticLoclist.New	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist) abort " {{{2$/;"	f
SyntasticLoclist.balloons	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.balloons() abort " {{{2$/;"	f
SyntasticLoclist.copyRaw	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.copyRaw() abort " {{{2$/;"	f
SyntasticLoclist.current	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current(...) abort " {{{2$/;"	f
SyntasticLoclist.decorate	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.decorate(tag) abort " {{{2$/;"	f
SyntasticLoclist.deploy	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.deploy() abort " {{{2$/;"	f
SyntasticLoclist.destroy	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.destroy() abort " {{{2$/;"	f
SyntasticLoclist.errors	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors() abort " {{{2$/;"	f
SyntasticLoclist.extend	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other) abort " {{{2$/;"	f
SyntasticLoclist.filter	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters) abort " {{{2$/;"	f
SyntasticLoclist.getBuffers	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getBuffers() abort " {{{2$/;"	f
SyntasticLoclist.getCursorColumns	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getCursorColumns() abort " {{{2$/;"	f
SyntasticLoclist.getFirstError	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getFirstError(...) abort " {{{2$/;"	f
SyntasticLoclist.getName	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName() abort " {{{2$/;"	f
SyntasticLoclist.getOwner	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getOwner() abort " {{{2$/;"	f
SyntasticLoclist.getRaw	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getRaw() abort " {{{2$/;"	f
SyntasticLoclist.getStatuslineFlag	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getStatuslineFlag() abort " {{{2$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay() abort " {{{2$/;"	f
SyntasticLoclist.isEmpty	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty() abort " {{{2$/;"	f
SyntasticLoclist.isNewerThan	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isNewerThan(stamp) abort " {{{2$/;"	f
SyntasticLoclist.messages	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf) abort " {{{2$/;"	f
SyntasticLoclist.setName	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name) abort " {{{2$/;"	f
SyntasticLoclist.setOwner	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setOwner(buffer) abort " {{{2$/;"	f
SyntasticLoclist.setloclist	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setloclist(new) abort " {{{2$/;"	f
SyntasticLoclist.show	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show() abort " {{{2$/;"	f
SyntasticLoclist.sort	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.sort() abort " {{{2$/;"	f
SyntasticLoclist.warnings	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings() abort " {{{2$/;"	f
SyntasticLoclistHide	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! SyntasticLoclistHide() abort " {{{2$/;"	f
SyntasticMake	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options) abort " {{{2$/;"	f
SyntasticModeMap.Instance	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance() abort " {{{2$/;"	f
SyntasticModeMap._isOneFiletypeActive	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap._noFiletypesArePassive	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.allowsAutoChecking	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype) abort " {{{2$/;"	f
SyntasticModeMap.doAutoChecking	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.doAutoChecking(buf) abort " {{{2$/;"	f
SyntasticModeMap.echoMode	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode() abort " {{{2$/;"	f
SyntasticModeMap.isPassive	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive() abort " {{{2$/;"	f
SyntasticModeMap.modeInfo	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.modeInfo(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.synch	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.synch() abort " {{{2$/;"	f
SyntasticModeMap.toggleMode	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode() abort " {{{2$/;"	f
SyntasticNotifiers.Instance	nvim/plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance() abort " {{{2$/;"	f
SyntasticNotifiers._initNotifiers	nvim/plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers() abort " {{{2$/;"	f
SyntasticNotifiers.refresh	nvim/plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist) abort " {{{2$/;"	f
SyntasticNotifiers.reset	nvim/plugged/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist) abort " {{{2$/;"	f
SyntasticRefreshCursor	nvim/plugged/syntastic/plugin/syntastic/cursor.vim	/^function! SyntasticRefreshCursor() abort " {{{2$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args) abort " {{{2$/;"	f
SyntasticRegistry.Instance	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance() abort " {{{2$/;"	f
SyntasticRegistry._filterCheckersByName	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(cnames) abort " {{{2$/;"	f
SyntasticRegistry._findChecker	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._findChecker(cname) abort " {{{2$/;"	f
SyntasticRegistry._loadCheckersFor	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckersFor(filetype, force) abort " {{{2$/;"	f
SyntasticRegistry._registerChecker	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._registerChecker(checker) abort " {{{2$/;"	f
SyntasticRegistry._sanityCheck	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._sanityCheck(filetype) abort " {{{2$/;"	f
SyntasticRegistry.echoInfoFor	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckers	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckers(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersAvailable	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersAvailable(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersDisabled	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersDisabled(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getKnownFiletypes	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getKnownFiletypes() abort " {{{2$/;"	f
SyntasticRegistry.getNamesOfAvailableCheckers	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getNamesOfAvailableCheckers(ftalias) abort " {{{2$/;"	f
SyntasticRegistry.resolveFiletypes	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.resolveFiletypes(ftalias) abort " {{{2$/;"	f
SyntasticReset	nvim/plugged/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticReset      call SyntasticReset()$/;"	c
SyntasticReset	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticReset() abort " {{{2$/;"	f
SyntasticSetLoclist	nvim/plugged/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticSetLoclist call SyntasticSetLoclist()$/;"	c
SyntasticSetLoclist	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticSetLoclist() abort " {{{2$/;"	f
SyntasticSignsNotifier.New	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New() abort " {{{2$/;"	f
SyntasticSignsNotifier._bufSignIds	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds() abort " {{{2$/;"	f
SyntasticSignsNotifier._removeSigns	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids) abort " {{{2$/;"	f
SyntasticSignsNotifier._setup	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup() abort " {{{2$/;"	f
SyntasticSignsNotifier._signErrors	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist) abort " {{{2$/;"	f
SyntasticSignsNotifier.enabled	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled() abort " {{{2$/;"	f
SyntasticSignsNotifier.refresh	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticStatuslineFlag	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag() abort " {{{2$/;"	f
SyntasticToggleMode	nvim/plugged/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticToggleMode call SyntasticToggleMode()$/;"	c
SyntasticToggleMode	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! SyntasticToggleMode() abort " {{{2$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetLocList	nvim/plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_GetLocList	nvim/plugged/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	nvim/plugged/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_GetLocList() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_apiblueprint_drafter_GetLocList	nvim/plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^function! SyntaxCheckers_apiblueprint_drafter_GetLocList() dict$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	nvim/plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList() dict$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	nvim/plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList() dict$/;"	f
SyntaxCheckers_asl_iasl_GetLocList	nvim/plugged/syntastic/syntax_checkers/asl/iasl.vim	/^function! SyntaxCheckers_asl_iasl_GetLocList() dict$/;"	f
SyntaxCheckers_asm_gcc_GetLocList	nvim/plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_asm_gcc_IsAvailable	nvim/plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_bemhtml_bemhtmllint_GetLocList	nvim/plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^function SyntaxCheckers_bemhtml_bemhtmllint_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_bro_bro_GetLocList	nvim/plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_IsAvailable	nvim/plugged/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_IsAvailable() dict$/;"	f
SyntaxCheckers_c_avrgcc_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^function! SyntaxCheckers_c_avrgcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	nvim/plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_IsAvailable() dict$/;"	f
SyntaxCheckers_c_clang_check_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/clang_check.vim	/^function! SyntaxCheckers_c_clang_check_GetLocList() dict$/;"	f
SyntaxCheckers_c_clang_tidy_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^function! SyntaxCheckers_c_clang_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppcheck_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^function! SyntaxCheckers_c_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppclean_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/cppclean.vim	/^function! SyntaxCheckers_c_cppclean_GetLocList() dict$/;"	f
SyntaxCheckers_c_flawfinder_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^function! SyntaxCheckers_c_flawfinder_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_c_flawfinder_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^function! SyntaxCheckers_c_flawfinder_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	nvim/plugged/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_c_make_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList() dict$/;"	f
SyntaxCheckers_c_oclint_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList() dict$/;"	f
SyntaxCheckers_c_pc_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^function! SyntaxCheckers_c_pc_lint_GetLocList() dict$/;"	f
SyntaxCheckers_c_sparse_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList() dict$/;"	f
SyntaxCheckers_c_splint_GetLocList	nvim/plugged/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList() dict$/;"	f
SyntaxCheckers_cabal_cabal_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_cabal_cabal_GetLocList	nvim/plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetLocList() dict$/;"	f
SyntaxCheckers_chef_foodcritic_GetLocList	nvim/plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^function! SyntaxCheckers_chef_foodcritic_GetLocList() dict$/;"	f
SyntaxCheckers_cmake_cmakelint_GetLocList	nvim/plugged/syntastic/syntax_checkers/cmake/cmakelint.vim	/^function! SyntaxCheckers_cmake_cmakelint_GetLocList() dict$/;"	f
SyntaxCheckers_co_coco_GetLocList	nvim/plugged/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	nvim/plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	nvim/plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	nvim/plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	nvim/plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_jshint_GetLocList	nvim/plugged/syntastic/syntax_checkers/coffee/coffee_jshint.vim	/^function! SyntaxCheckers_coffee_coffee_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	nvim/plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList() dict$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	nvim/plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	nvim/plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	nvim/plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	nvim/plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_cpp_verapp_GetLocList	nvim/plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^function! SyntaxCheckers_cpp_verapp_GetLocList() dict$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	nvim/plugged/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList() dict$/;"	f
SyntaxCheckers_css_csslint_GetLocList	nvim/plugged/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList() dict$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	nvim/plugged/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList() dict$/;"	f
SyntaxCheckers_css_stylelint_GetLocList	nvim/plugged/syntastic/syntax_checkers/css/stylelint.vim	/^function! SyntaxCheckers_css_stylelint_GetLocList() dict$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	nvim/plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList() dict$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	nvim/plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_GetLocList	nvim/plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	nvim/plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_d_dscanner_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/d/dscanner.vim	/^function! SyntaxCheckers_d_dscanner_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_d_dscanner_GetLocList	nvim/plugged/syntastic/syntax_checkers/d/dscanner.vim	/^function! SyntaxCheckers_d_dscanner_GetLocList() dict$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetLocList	nvim/plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetLocList() dict$/;"	f
SyntaxCheckers_docbk_igor_GetLocList	nvim/plugged/syntastic/syntax_checkers/docbk/igor.vim	/^function! SyntaxCheckers_docbk_igor_GetLocList() dict$/;"	f
SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^function! SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList() dict$/;"	f
SyntaxCheckers_dockerfile_hadolint_GetLocList	nvim/plugged/syntastic/syntax_checkers/dockerfile/hadolint.vim	/^function! SyntaxCheckers_dockerfile_hadolint_GetLocList() dict$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	nvim/plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	nvim/plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	nvim/plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable() dict$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	nvim/plugged/syntastic/syntax_checkers/erlang/escript.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList() dict$/;"	f
SyntaxCheckers_erlang_syntaxerl_GetLocList	nvim/plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^function! SyntaxCheckers_erlang_syntaxerl_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	nvim/plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	nvim/plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable() dict$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	nvim/plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	nvim/plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_glsl_cgc_GetLocList	nvim/plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^function! SyntaxCheckers_glsl_cgc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_go_go_GetLocList	nvim/plugged/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_IsAvailable	nvim/plugged/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable() dict$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	nvim/plugged/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList() dict$/;"	f
SyntaxCheckers_go_golangci_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/go/golangci_lint.vim	/^function! SyntaxCheckers_go_golangci_lint_GetLocList() dict$/;"	f
SyntaxCheckers_go_golint_GetLocList	nvim/plugged/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList() dict$/;"	f
SyntaxCheckers_go_gometalinter_GetLocList	nvim/plugged/syntastic/syntax_checkers/go/gometalinter.vim	/^function! SyntaxCheckers_go_gometalinter_GetLocList() dict$/;"	f
SyntaxCheckers_go_gotype_GetLocList	nvim/plugged/syntastic/syntax_checkers/go/gotype.vim	/^function! SyntaxCheckers_go_gotype_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_GetLocList	nvim/plugged/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_GetLocList	nvim/plugged/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	nvim/plugged/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^function! SyntaxCheckers_haml_haml_lint_GetLocList() dict$/;"	f
SyntaxCheckers_handlebars_handlebars_GetLocList	nvim/plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^function! SyntaxCheckers_handlebars_handlebars_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	nvim/plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	nvim/plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_scan_GetLocList	nvim/plugged/syntastic/syntax_checkers/haskell/scan.vim	/^function! SyntaxCheckers_haskell_scan_GetLocList() dict$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	nvim/plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList() dict$/;"	f
SyntaxCheckers_hss_hss_GetLocList	nvim/plugged/syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList() dict$/;"	f
SyntaxCheckers_html_htmlhint_GetLocList	nvim/plugged/syntastic/syntax_checkers/html/htmlhint.vim	/^function! SyntaxCheckers_html_htmlhint_GetLocList() dict$/;"	f
SyntaxCheckers_html_htmlhint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/html/htmlhint.vim	/^function! SyntaxCheckers_html_htmlhint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_jshint_GetLocList	nvim/plugged/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_tidy_GetLocList	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_html_validator_GetLocList	nvim/plugged/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList() dict$/;"	f
SyntaxCheckers_html_w3_GetLocList	nvim/plugged/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	nvim/plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	nvim/plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable() dict$/;"	f
SyntaxCheckers_java_javac_GetLocList	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_java_javac_IsAvailable	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	nvim/plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_eslint_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_eslint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_flow_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_flow_IsAvailable	nvim/plugged/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_IsAvailable	nvim/plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jslint_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_javascript_jsxhint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_javascript_lynt_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/lynt.vim	/^function! SyntaxCheckers_javascript_lynt_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_mixedindentlint_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^function! SyntaxCheckers_javascript_mixedindentlint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_IsAvailable	nvim/plugged/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_tern_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/javascript/tern_lint.vim	/^function! SyntaxCheckers_javascript_tern_lint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_tern_lint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/javascript/tern_lint.vim	/^function! SyntaxCheckers_javascript_tern_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	nvim/plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	nvim/plugged/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList() dict$/;"	f
SyntaxCheckers_julia_lint_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/julia/lint.vim	/^function! SyntaxCheckers_julia_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_julia_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/julia/lint.vim	/^function! SyntaxCheckers_julia_lint_GetLocList() dict$/;"	f
SyntaxCheckers_julia_lint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/julia/lint.vim	/^function! SyntaxCheckers_julia_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_less_lessc_GetLocList	nvim/plugged/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	nvim/plugged/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable() dict$/;"	f
SyntaxCheckers_less_recess_GetLocList	nvim/plugged/syntastic/syntax_checkers/less/recess.vim	/^function! SyntaxCheckers_less_recess_GetLocList() dict$/;"	f
SyntaxCheckers_lex_flex_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lex_flex_GetLocList	nvim/plugged/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetLocList() dict$/;"	f
SyntaxCheckers_limbo_limbo_GetLocList	nvim/plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^function! SyntaxCheckers_limbo_limbo_GetLocList() dict$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	nvim/plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList() dict$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	nvim/plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	nvim/plugged/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luacheck_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lua_luacheck_GetLocList	nvim/plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_mdl_GetLocList	nvim/plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^function! SyntaxCheckers_markdown_mdl_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_remark_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/markdown/remark_lint.vim	/^function! SyntaxCheckers_markdown_remark_lint_GetLocList() dict$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	nvim/plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList() dict$/;"	f
SyntaxCheckers_mercury_mmc_GetLocList	nvim/plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^function! SyntaxCheckers_mercury_mmc_GetLocList() dict$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	nvim/plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList() dict$/;"	f
SyntaxCheckers_nix_nix_GetLocList	nvim/plugged/syntastic/syntax_checkers/nix/nix.vim	/^function! SyntaxCheckers_nix_nix_GetLocList() dict$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	nvim/plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	nvim/plugged/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	nvim/plugged/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	nvim/plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	nvim/plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl6_perl6_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/perl6/perl6.vim	/^function! SyntaxCheckers_perl6_perl6_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_perl6_perl6_GetLocList	nvim/plugged/syntastic/syntax_checkers/perl6/perl6.vim	/^function! SyntaxCheckers_perl6_perl6_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_perl6_perl6_IsAvailable	nvim/plugged/syntastic/syntax_checkers/perl6/perl6.vim	/^function! SyntaxCheckers_perl6_perl6_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perl_GetLocList	nvim/plugged/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	nvim/plugged/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	nvim/plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList() dict$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	nvim/plugged/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	nvim/plugged/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList() dict$/;"	f
SyntaxCheckers_php_phplint_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phplint_GetLocList	nvim/plugged/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	nvim/plugged/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpstan_GetLocList	nvim/plugged/syntastic/syntax_checkers/php/phpstan.vim	/^function! SyntaxCheckers_php_phpstan_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpstan_IsAvailable	nvim/plugged/syntastic/syntax_checkers/php/phpstan.vim	/^function! SyntaxCheckers_php_phpstan_IsAvailable() dict$/;"	f
SyntaxCheckers_po_dennis_GetLocList	nvim/plugged/syntastic/syntax_checkers/po/dennis.vim	/^function! SyntaxCheckers_po_dennis_GetLocList() dict$/;"	f
SyntaxCheckers_po_msgfmt_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_po_msgfmt_GetLocList	nvim/plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetLocList() dict$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	nvim/plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList() dict$/;"	f
SyntaxCheckers_pug_pug_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/pug/pug_lint.vim	/^function! SyntaxCheckers_pug_pug_lint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	nvim/plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	nvim/plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_bandit_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/bandit.vim	/^function! SyntaxCheckers_python_bandit_GetLocList() dict$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList() dict$/;"	f
SyntaxCheckers_python_frosted_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/frosted.vim	/^function! SyntaxCheckers_python_frosted_GetLocList() dict$/;"	f
SyntaxCheckers_python_mypy_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/mypy.vim	/^function! SyntaxCheckers_python_mypy_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_IsAvailable	nvim/plugged/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_IsAvailable() dict$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList() dict$/;"	f
SyntaxCheckers_python_pycodestyle_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/pycodestyle.vim	/^function! SyntaxCheckers_python_pycodestyle_GetLocList() dict$/;"	f
SyntaxCheckers_python_pydocstyle_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/pydocstyle.vim	/^function! SyntaxCheckers_python_pydocstyle_GetLocList() dict$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_python_python_GetLocList	nvim/plugged/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList() dict$/;"	f
SyntaxCheckers_python_python_IsAvailable	nvim/plugged/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable() dict$/;"	f
SyntaxCheckers_qml_qmllint_GetLocList	nvim/plugged/syntastic/syntax_checkers/qml/qmllint.vim	/^function! SyntaxCheckers_qml_qmllint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_r_lintr_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lintr_GetLocList	nvim/plugged/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_GetLocList() dict$/;"	f
SyntaxCheckers_r_lintr_IsAvailable	nvim/plugged/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_IsAvailable() dict$/;"	f
SyntaxCheckers_r_svtools_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_svtools_GetLocList	nvim/plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetLocList() dict$/;"	f
SyntaxCheckers_r_svtools_IsAvailable	nvim/plugged/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_GetLocList	nvim/plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_IsAvailable	nvim/plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_racket_GetLocList	nvim/plugged/syntastic/syntax_checkers/racket/racket.vim	/^function! SyntaxCheckers_racket_racket_GetLocList() dict$/;"	f
SyntaxCheckers_rnc_rnv_GetLocList	nvim/plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^function! SyntaxCheckers_rnc_rnv_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	nvim/plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_IsAvailable	nvim/plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_IsAvailable() dict$/;"	f
SyntaxCheckers_rst_rstcheck_GetLocList	nvim/plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^function! SyntaxCheckers_rst_rstcheck_GetLocList() dict$/;"	f
SyntaxCheckers_rst_sphinx_GetLocList	nvim/plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^function! SyntaxCheckers_rst_sphinx_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_flog_GetLocList	nvim/plugged/syntastic/syntax_checkers/ruby/flog.vim	/^function! SyntaxCheckers_ruby_flog_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	nvim/plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	nvim/plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	nvim/plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	nvim/plugged/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_reek_GetLocList	nvim/plugged/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_reek_IsAvailable	nvim/plugged/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	nvim/plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	nvim/plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubylint_GetLocList	nvim/plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^function! SyntaxCheckers_ruby_rubylint_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_GetLocList	nvim/plugged/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/sass/sass_lint.vim	/^function! SyntaxCheckers_sass_sass_lint_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_lint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/sass/sass_lint.vim	/^function! SyntaxCheckers_sass_sass_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sass_sassc_GetLocList	nvim/plugged/syntastic/syntax_checkers/sass/sassc.vim	/^function! SyntaxCheckers_sass_sassc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	nvim/plugged/syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	nvim/plugged/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_GetLocList	nvim/plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_IsAvailable	nvim/plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_IsAvailable() dict$/;"	f
SyntaxCheckers_scss_scss_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_GetLocList() dict$/;"	f
SyntaxCheckers_scss_scss_lint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_bashate_GetLocList	nvim/plugged/syntastic/syntax_checkers/sh/bashate.vim	/^function! SyntaxCheckers_sh_bashate_GetLocList() dict$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	nvim/plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_GetLocList	nvim/plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	nvim/plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_sh_shellcheck_GetLocList	nvim/plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! SyntaxCheckers_sh_shellcheck_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_slim_slim_lint_GetLocList	nvim/plugged/syntastic/syntax_checkers/slim/slim_lint.vim	/^function! SyntaxCheckers_slim_slim_lint_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	nvim/plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList() dict$/;"	f
SyntaxCheckers_sml_smlnj_GetLocList	nvim/plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^function! SyntaxCheckers_sml_smlnj_GetLocList() dict$/;"	f
SyntaxCheckers_solidity_solc_GetLocList	nvim/plugged/syntastic/syntax_checkers/solidity/solc.vim	/^function! SyntaxCheckers_solidity_solc_GetLocList() dict$/;"	f
SyntaxCheckers_solidity_solhint_GetLocList	nvim/plugged/syntastic/syntax_checkers/solidity/solhint.vim	/^function! SyntaxCheckers_solidity_solhint_GetLocList() dict$/;"	f
SyntaxCheckers_solidity_solium_GetLocList	nvim/plugged/syntastic/syntax_checkers/solidity/solium.vim	/^function! SyntaxCheckers_solidity_solium_GetLocList() dict$/;"	f
SyntaxCheckers_spec_rpmlint_GetLocList	nvim/plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^function! SyntaxCheckers_spec_rpmlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_sql_sqlint_GetLocList	nvim/plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_IsAvailable() dict$/;"	f
SyntaxCheckers_sql_tsqllint_GetLocList	nvim/plugged/syntastic/syntax_checkers/sql/tsqllint.vim	/^function! SyntaxCheckers_sql_tsqllint_GetLocList() dict$/;"	f
SyntaxCheckers_stylus_stylint_GetLocList	nvim/plugged/syntastic/syntax_checkers/stylus/stylint.vim	/^function! SyntaxCheckers_stylus_stylint_GetLocList() dict$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	nvim/plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList() dict$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	nvim/plugged/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList() dict$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	nvim/plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList() dict$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetLocList	nvim/plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetLocList() dict$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	nvim/plugged/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList() dict$/;"	f
SyntaxCheckers_text_language_check_GetLocList	nvim/plugged/syntastic/syntax_checkers/text/language_check.vim	/^function! SyntaxCheckers_text_language_check_GetLocList() dict$/;"	f
SyntaxCheckers_text_proselint_GetLocList	nvim/plugged/syntastic/syntax_checkers/text/proselint.vim	/^function! SyntaxCheckers_text_proselint_GetLocList() dict$/;"	f
SyntaxCheckers_text_textlint_GetLocList	nvim/plugged/syntastic/syntax_checkers/text/textlint.vim	/^function! SyntaxCheckers_text_textlint_GetLocList() dict$/;"	f
SyntaxCheckers_turtle_rapper_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/turtle/rapper.vim	/^function! SyntaxCheckers_turtle_rapper_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_turtle_rapper_GetLocList	nvim/plugged/syntastic/syntax_checkers/turtle/rapper.vim	/^function! SyntaxCheckers_turtle_rapper_GetLocList() dict$/;"	f
SyntaxCheckers_turtle_ttl_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/turtle/ttl.vim	/^function! SyntaxCheckers_turtle_ttl_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_turtle_ttl_GetLocList	nvim/plugged/syntastic/syntax_checkers/turtle/ttl.vim	/^function! SyntaxCheckers_turtle_ttl_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	nvim/plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tslint_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_typescript_tslint_GetLocList	nvim/plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetLocList() dict$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos) " {{{1$/;"	f
SyntaxCheckers_vala_valac_GetLocList	nvim/plugged/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_verilog_iverilog_GetLocList	nvim/plugged/syntastic/syntax_checkers/verilog/iverilog.vim	/^function! SyntaxCheckers_verilog_iverilog_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	nvim/plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	nvim/plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable() dict$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	nvim/plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList() dict$/;"	f
SyntaxCheckers_vhdl_vcom_GetLocList	nvim/plugged/syntastic/syntax_checkers/vhdl/vcom.vim	/^function! SyntaxCheckers_vhdl_vcom_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_GetLocList	nvim/plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_IsAvailable	nvim/plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_vim_vint_GetLocList	nvim/plugged/syntastic/syntax_checkers/vim/vint.vim	/^function! SyntaxCheckers_vim_vint_GetLocList() dict$/;"	f
SyntaxCheckers_vue_pug_lint_vue_GetLocList	nvim/plugged/syntastic/syntax_checkers/vue/pug_lint_vue.vim	/^function! SyntaxCheckers_vue_pug_lint_vue_GetLocList() dict$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	nvim/plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_xml_plutil_GetLocList	nvim/plugged/syntastic/syntax_checkers/xml/plutil.vim	/^function! SyntaxCheckers_xml_plutil_GetLocList() dict$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	nvim/plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList() dict$/;"	f
SyntaxCheckers_xquery_basex_GetLocList	nvim/plugged/syntastic/syntax_checkers/xquery/basex.vim	/^function! SyntaxCheckers_xquery_basex_GetLocList() dict$/;"	f
SyntaxCheckers_yacc_bison_GetLocList	nvim/plugged/syntastic/syntax_checkers/yacc/bison.vim	/^function! SyntaxCheckers_yacc_bison_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	nvim/plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamllint_GetLocList	nvim/plugged/syntastic/syntax_checkers/yaml/yamllint.vim	/^function! SyntaxCheckers_yaml_yamllint_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_GetLocList	nvim/plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_IsAvailable	nvim/plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_IsAvailable() dict$/;"	f
SyntaxCheckers_yang_pyang_GetHighlightRegex	nvim/plugged/syntastic/syntax_checkers/yang/pyang.vim	/^function! SyntaxCheckers_yang_pyang_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_yang_pyang_GetLocList	nvim/plugged/syntastic/syntax_checkers/yang/pyang.vim	/^function! SyntaxCheckers_yang_pyang_GetLocList() dict$/;"	f
SyntaxCheckers_yara_yarac_GetLocList	nvim/plugged/syntastic/syntax_checkers/yara/yara.vim	/^function! SyntaxCheckers_yara_yarac_GetLocList() dict$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	nvim/plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList() dict$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	nvim/plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList() dict$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	nvim/plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList() dict$/;"	f
T	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map T <Plug>(easymotion-T)$/;"	m
T	nvim/plugged/vim-go/autoload/go/test-fixtures/complete/complete.go	/^type T struct {$/;"	s	package:complete
T/	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map T\/ <Plug>(easymotion-Tn)$/;"	m
TAGS_FILE	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TARGET	nvim/plugged/vimproc.vim/make_android.mak	/^TARGET=lib\/vimproc_unix.so$/;"	m
TARGET	nvim/plugged/vimproc.vim/make_bsd.mak	/^TARGET=lib\/vimproc_$(SUFFIX).so$/;"	m
TARGET	nvim/plugged/vimproc.vim/make_cygwin.mak	/^TARGET=lib\/vimproc_cygwin.dll$/;"	m
TARGET	nvim/plugged/vimproc.vim/make_mac.mak	/^TARGET=lib\/vimproc_mac.so$/;"	m
TARGET	nvim/plugged/vimproc.vim/make_mingw32.mak	/^TARGET=lib\/vimproc_win32.dll$/;"	m
TARGET	nvim/plugged/vimproc.vim/make_mingw64.mak	/^TARGET=lib\/vimproc_win64.dll$/;"	m
TARGET	nvim/plugged/vimproc.vim/make_msvc.mak	/^TARGET = WINNT$/;"	m
TARGET	nvim/plugged/vimproc.vim/make_sunos.mak	/^TARGET=lib\/vimproc_unix.so$/;"	m
TARGET	nvim/plugged/vimproc.vim/make_unix.mak	/^TARGET=lib\/vimproc_$(SUFFIX).so$/;"	m
THEMIS_ARGS	nvim/plugged/deoplete.nvim/Makefile	/^export THEMIS_ARGS := -e -s --headless$/;"	m
THEMIS_HOME	nvim/plugged/deoplete.nvim/Makefile	/^export THEMIS_HOME := .\/vim-themis$/;"	m
THEMIS_VIM	nvim/plugged/deoplete.nvim/Makefile	/^export THEMIS_VIM  := nvim$/;"	m
THEMIS_VIM	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^set THEMIS_VIM=%APPVEYOR_BUILD_FOLDER%\\vim%VIMVER%-kaoriya-win%BIT%\\vim.exe$/;"	v
Tab-based indentation	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation$/;"	s	chapter:Tests for Indentation Properties
Tab-based indentation with no size specified	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with no size specified$/;"	S	section:Tab-based indentation
Tab-based indentation with size of 4	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with size of 4$/;"	S	section:Tab-based indentation
Tab-based indentation with size of 4 and tab width of 8	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with size of 4 and tab width of 8$/;"	S	section:Tab-based indentation
Tabularize	nvim/plugged/tabular/plugin/Tabular.vim	/^   \\ Tabularize <line1>,<line2>call Tabularize(<q-args>)$/;"	c
Tabularize	nvim/plugged/tabular/plugin/Tabular.vim	/^function! Tabularize(command, ...) range$/;"	f
Tag,Tags	ctags/javascript.ctags	/^--regex-javascript=\/\\\/\\\/[ \\t]*\\(!!!\\)[ \\t]*:*\\(.*\\)\/\\1\/T,Tag,Tags\/b$/;"	k
Tag,Tags	ctags/javascript.ctags	/^--regex-javascript=\/\\\/\\\/[ \\t]*\\(???\\)[ \\t]*:*\\(.*\\)\/\\1\/T,Tag,Tags\/b$/;"	k
Tag,Tags	ctags/javascript.ctags	/^--regex-javascript=\/\\\/\\\/[ \\t]*\\(BUG\\)[ \\t]*:*\\(.*\\)\/\\1\/T,Tag,Tags\/b$/;"	k
Tag,Tags	ctags/javascript.ctags	/^--regex-javascript=\/\\\/\\\/[ \\t]*\\(FIXME\\)[ \\t]*:*\\(.*\\)\/\\1\/T,Tag,Tags\/b$/;"	k
Tag,Tags	ctags/javascript.ctags	/^--regex-javascript=\/\\\/\\\/[ \\t]*\\(HACK\\)[ \\t]*:*\\(.*\\)\/\\1\/T,Tag,Tags\/b$/;"	k
Tag,Tags	ctags/javascript.ctags	/^--regex-javascript=\/\\\/\\\/[ \\t]*\\(NOBUG\\)[ \\t]*:*\\(.*\\)\/\\1\/T,Tag,Tags\/b$/;"	k
Tag,Tags	ctags/javascript.ctags	/^--regex-javascript=\/\\\/\\\/[ \\t]*\\(TODO\\)[ \\t]*:*\\(.*\\)\/\\1\/T,Tag,Tags\/b$/;"	k
Tag,Tags	ctags/javascript.ctags	/^--regex-javascript=\/\\\/\\\/[ \\t]*\\(XXX\\)[ \\t]*:*\\(.*\\)\/\\1\/T,Tag,Tags\/b$/;"	k
TagListAutoCmds	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    augroup TagListAutoCmds$/;"	a
TagListMenuCmds	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    augroup TagListMenuCmds$/;"	a
TagList_IsValid	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TearDown	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
Test for Newline	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/insert_final_newline.rst	/^Test for Newline$/;"	S	section:Tests for Newline at end of File
Test for No Newline	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/insert_final_newline.rst	/^Test for No Newline$/;"	S	section:Tests for Newline at end of File
TestConcurrentPanic	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestConcurrentPanic(t *testing.T) {$/;"	f	package:play
TestHelloWorld	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/showname/showname_test.go	/^func TestHelloWorld(t *testing.T) {$/;"	f	package:main
TestHelloWorld	nvim/plugged/vim-go/templates/hello_world_test.go	/^func TestHelloWorld(t *testing.T) {$/;"	f	package:main
TestLogger	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/imports/vendor/gh.com/gi/foo-logging/logger.go	/^type TestLogger struct {$/;"	s	package:logging
TestLogger	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/vendor/gh.com/gi/foo-logging/logger.go	/^type TestLogger struct {$/;"	s	package:logging
TestMocked	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestMocked(t *testing.T) {$/;"	f	package:play
TestMultiline	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestMultiline(t *testing.T) {$/;"	f	package:play
TestOK	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestOK(t *testing.T) {$/;"	f	package:play
TestPanic	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestPanic(t *testing.T) {$/;"	f	package:play
TestRunning	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/timeout/timeout_test.go	/^func TestRunning(t *testing.T) {$/;"	f	package:main
TestRunningAlso	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/timeout/timeout_test.go	/^func TestRunningAlso(t *testing.T) {$/;"	f	package:main
TestSleep	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/timeout/timeout_test.go	/^func TestSleep(t *testing.T) {$/;"	f	package:main
TestSomething	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/testcompilerror/testcompilerror_test.go	/^func TestSomething(t *testing.T) {$/;"	f	package:main
TestSub	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestSub(t *testing.T) {$/;"	f	package:play
TestTopSubHelper	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestTopSubHelper(t *testing.T) {$/;"	f	package:play
Test_Detect_Gopath	nvim/plugged/vim-go/test/gopath_test.vim	/^fun! Test_Detect_Gopath() abort$/;"	f
Test_Detect_Gopath_disabled	nvim/plugged/vim-go/test/gopath_test.vim	/^fun! Test_Detect_Gopath_disabled() abort$/;"	f
Test_ExecuteInDir	nvim/plugged/vim-go/autoload/go/tool_test.vim	/^func! Test_ExecuteInDir() abort$/;"	f
Test_ExecuteInDir_nodir	nvim/plugged/vim-go/autoload/go/tool_test.vim	/^func! Test_ExecuteInDir_nodir() abort$/;"	f
Test_GetInfo	nvim/plugged/vim-go/autoload/go/complete_test.vim	/^func! Test_GetInfo()$/;"	f
Test_GoBuildErrors	nvim/plugged/vim-go/autoload/go/cmd_test.vim	/^func! Test_GoBuildErrors()$/;"	f
Test_GoDebugStart_Empty	nvim/plugged/vim-go/autoload/go/debug_test.vim	/^function! Test_GoDebugStart_Empty() abort$/;"	f
Test_GoDebugStart_Package	nvim/plugged/vim-go/autoload/go/debug_test.vim	/^function! Test_GoDebugStart_Package() abort$/;"	f
Test_GoDebugStart_RelativePackage	nvim/plugged/vim-go/autoload/go/debug_test.vim	/^function! Test_GoDebugStart_RelativePackage() abort$/;"	f
Test_GoTermNewMode	nvim/plugged/vim-go/autoload/go/term_test.vim	/^func! Test_GoTermNewMode()$/;"	f
Test_GoTermNewMode_SplitRight	nvim/plugged/vim-go/autoload/go/term_test.vim	/^func! Test_GoTermNewMode_SplitRight()$/;"	f
Test_GoTest	nvim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTest() abort$/;"	f
Test_GoTestCompilerError	nvim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestCompilerError() abort$/;"	f
Test_GoTestConcurrentPanic	nvim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestConcurrentPanic()$/;"	f
Test_GoTestShowName	nvim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestShowName() abort$/;"	f
Test_GoTestTestCompilerError	nvim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestTestCompilerError() abort$/;"	f
Test_GoTestTimeout	nvim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestTimeout() abort$/;"	f
Test_GoTestVerbose	nvim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestVerbose() abort$/;"	f
Test_GoTestVet	nvim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestVet() abort$/;"	f
Test_Gometa	nvim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_Gometa() abort$/;"	f
Test_GometaAutoSave	nvim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_GometaAutoSave() abort$/;"	f
Test_GometaWithDisabled	nvim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_GometaWithDisabled() abort$/;"	f
Test_GuruScope_Set	nvim/plugged/vim-go/autoload/go/guru_test.vim	/^function Test_GuruScope_Set() abort$/;"	f
Test_Jump_leaves_lists	nvim/plugged/vim-go/autoload/go/def_test.vim	/^func! Test_Jump_leaves_lists() abort$/;"	f
Test_Vet	nvim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_Vet()$/;"	f
Test_add_lines	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_add_tags	nvim/plugged/vim-go/autoload/go/tags_test.vim	/^func! Test_add_tags() abort$/;"	f
Test_around_text_object	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_around_text_object()$/;"	f
Test_edit_file_with_same_name_as_a_branch	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_encoding	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_encoding()$/;"	f
Test_file_added_to_git	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_filename_leading_dash	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_leading_dash()$/;"	f
Test_filename_umlaut	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_umlaut()$/;"	f
Test_filename_with_equals	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_square_brackets	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_fillstruct	nvim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^func! Test_fillstruct() abort$/;"	f
Test_fillstruct_line	nvim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^func! Test_fillstruct_line() abort$/;"	f
Test_fillstruct_two_cursor	nvim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^func! Test_fillstruct_two_cursor() abort$/;"	f
Test_fillstruct_two_line	nvim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^func! Test_fillstruct_two_line() abort$/;"	f
Test_fix_file_references	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_fix_file_references()$/;"	f
Test_follow_symlink	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_goimports	nvim/plugged/vim-go/autoload/go/fmt_test.vim	/^func! Test_goimports() abort$/;"	f
Test_gomodVersion_highlight	nvim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_gomodVersion_highlight() abort$/;"	f
Test_gomodVersion_incompatible_highlight	nvim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_gomodVersion_incompatible_highlight() abort$/;"	f
Test_hunk_outside_noop	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_undo	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_impl	nvim/plugged/vim-go/autoload/go/impl_test.vim	/^func! Test_impl() abort$/;"	f
Test_impl_get	nvim/plugged/vim-go/autoload/go/impl_test.vim	/^func! Test_impl_get() abort$/;"	f
Test_indent_raw_string	nvim/plugged/vim-go/autoload/go/indent_test.vim	/^func! Test_indent_raw_string() abort$/;"	f
Test_inner_text_object	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_inner_text_object()$/;"	f
Test_jump_to_declaration_godef	nvim/plugged/vim-go/autoload/go/def_test.vim	/^func! Test_jump_to_declaration_godef() abort$/;"	f
Test_jump_to_declaration_guru	nvim/plugged/vim-go/autoload/go/def_test.vim	/^func! Test_jump_to_declaration_guru() abort$/;"	f
Test_keep_alt	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_modify_lines	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_orphaned_signs	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_overlapping_hunk_op	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunk_op()$/;"	f
Test_overlapping_hunks	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunks()$/;"	f
Test_remove_first_lines	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_remove_tags	nvim/plugged/vim-go/autoload/go/tags_test.vim	/^func! Test_remove_tags() abort$/;"	f
Test_run_fmt	nvim/plugged/vim-go/autoload/go/fmt_test.vim	/^func! Test_run_fmt() abort$/;"	f
Test_undo_nearby_hunk	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_update_file	nvim/plugged/vim-go/autoload/go/fmt_test.vim	/^func! Test_update_file() abort$/;"	f
Test_user_autocmd	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_user_autocmd()$/;"	f
Test_write_option	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_write_option()$/;"	f
Tests for EditorConfig Plugins	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/README.rst	/^Tests for EditorConfig Plugins$/;"	c
Tests for End of Line Property	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Tests for End of Line Property$/;"	c
Tests for Indentation Properties	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Tests for Indentation Properties$/;"	c
Tests for Newline at end of File	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/insert_final_newline.rst	/^Tests for Newline at end of File$/;"	s	chapter:Insert Final Newline Property
Tests for Newlines	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^Tests for Newlines$/;"	c
Tests for Newlines	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Tests for Newlines$/;"	s	chapter:Tests for End of Line Property
The NERDTree	nvim/plugged/nerdtree/README.markdown	/^The NERDTree$/;"	c
Tlist	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Auto_Highlight_Tag	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Close_On_Select	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	nvim/plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	nvim/plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	nvim/plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	nvim/plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	nvim/plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Display_Prototype	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exit_OnlyWindow	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_File_Fold_Auto_Close	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_GainFocus_On_ToggleOpen	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Tag_Prototype_By_Line	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tagname_By_Line	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	nvim/plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	nvim/plugged/taglist.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Max_Submenu_Items	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Process_File_Always	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Set_App	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Sort_Type	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Use_Horiz_Window	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_WinHeight	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
TogglePencil	nvim/plugged/vim-pencil/plugin/pencil.vim	/^com -nargs=0 TogglePencil   call pencil#init({'wrap': 'toggle'})$/;"	c
Trim Trailing Whitespace Property	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Trim Trailing Whitespace Property$/;"	c
Trimming Whitespace	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Trimming Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
TryNormal	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^function TryNormal(str)$/;"	f
U	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	nvim/autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
UNAME_S	nvim/plugged/vimproc.vim/Makefile	/^    UNAME_S := $(shell uname -s)$/;"	m
UPDATED_SOURCE	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UTF-16BE Character Set	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^UTF-16BE Character Set$/;"	s	chapter:Tests for Newlines
UTF-16LE Character Set	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^UTF-16LE Character Set$/;"	s	chapter:Tests for Newlines
UTF-8 Character Set	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^UTF-8 Character Set$/;"	s	chapter:Tests for Newlines
UTF-8 with BOM Character Set	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^UTF-8 with BOM Character Set$/;"	s	chapter:Tests for Newlines
Unix-style Newlines	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Unix-style Newlines$/;"	S	section:Tests for Newlines
Unlock	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Usage	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Usage$/;"	c
Usage	nvim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Use as a library	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Use as a library$/;"	s	chapter:Writing Plugins
Using as a Library	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^Using as a Library$/;"	c
Using with an external Python interpreter	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Using with an external Python interpreter$/;"	s	chapter:Writing Plugins
V	nvim/plugged/vim-go/autoload/go/test-fixtures/complete/complete.go	/^	V string$/;"	m	struct:complete.T
VERSION	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/__init__.py	/^VERSION = (0, 12, 0, "final")$/;"	v
VIMPROC	nvim/plugged/vimproc.vim/make_msvc.mak	/^VIMPROC=vimproc_win32$/;"	m
VIMPROC	nvim/plugged/vimproc.vim/make_msvc.mak	/^VIMPROC=vimproc_win64$/;"	m
VIMS	nvim/plugged/vim-go/Makefile	/^VIMS ?= vim-7.4 vim-8.0 nvim$/;"	m
VP_BUFSIZE	nvim/plugged/vimproc.vim/src/proc.c	/^#define VP_BUFSIZE /;"	d	file:
VP_BUFSIZE	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define VP_BUFSIZE /;"	d	file:
VP_CHR_TO_OFLAG	nvim/plugged/vimproc.vim/src/proc.c	/^#define VP_CHR_TO_OFLAG(/;"	d	file:
VP_CHR_TO_OFLAG	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define VP_CHR_TO_OFLAG(/;"	d	file:
VP_DUP_HANDLE	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define VP_DUP_HANDLE(/;"	d	file:
VP_EOV	nvim/plugged/vimproc.vim/src/vimstack.c	/^#define VP_EOV /;"	d	file:
VP_EOV_STR	nvim/plugged/vimproc.vim/src/vimstack.c	/^#define VP_EOV_STR /;"	d	file:
VP_ERRMSG_SIZE	nvim/plugged/vimproc.vim/src/vimstack.c	/^#define VP_ERRMSG_SIZE /;"	d	file:
VP_GOTO_ERROR	nvim/plugged/vimproc.vim/src/proc.c	/^#define VP_GOTO_ERROR(/;"	d	file:
VP_GOTO_ERROR	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define VP_GOTO_ERROR(/;"	d	file:
VP_HEADER_SIZE	nvim/plugged/vimproc.vim/src/vimstack.c	/^#define VP_HEADER_SIZE /;"	d	file:
VP_INITIAL_BUFSIZE	nvim/plugged/vimproc.vim/src/vimstack.c	/^#define VP_INITIAL_BUFSIZE /;"	d	file:
VP_NUMFMT_BUFSIZE	nvim/plugged/vimproc.vim/src/vimstack.c	/^#define VP_NUMFMT_BUFSIZE /;"	d	file:
VP_NUM_BUFSIZE	nvim/plugged/vimproc.vim/src/vimstack.c	/^#define VP_NUM_BUFSIZE /;"	d	file:
VP_POLLIN	nvim/plugged/vimproc.vim/src/proc.c	/^# define VP_POLLIN /;"	d	file:
VP_PTYTTY_H_	nvim/plugged/vimproc.vim/src/ptytty.h	/^#define VP_PTYTTY_H_$/;"	d
VP_READ_BUFSIZE	nvim/plugged/vimproc.vim/src/proc.c	/^#define VP_READ_BUFSIZE /;"	d	file:
VP_READ_BUFSIZE	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define VP_READ_BUFSIZE /;"	d	file:
VP_RETURN_IF_FAIL	nvim/plugged/vimproc.vim/src/vimstack.c	/^#define VP_RETURN_IF_FAIL(/;"	d	file:
VP_SET_NONBLOCK_IF_NEEDED	nvim/plugged/vimproc.vim/src/proc.c	/^# define VP_SET_NONBLOCK_IF_NEEDED(/;"	d	file:
VP_STACK_NULL	nvim/plugged/vimproc.vim/src/vimstack.c	/^#define VP_STACK_NULL /;"	d	file:
VP_STACK_PUSH_ALTSIGNAME	nvim/plugged/vimproc.vim/src/proc.c	/^#define VP_STACK_PUSH_ALTSIGNAME(/;"	d	file:
VP_STACK_PUSH_SIGNAME	nvim/plugged/vimproc.vim/src/proc.c	/^#define VP_STACK_PUSH_SIGNAME(/;"	d	file:
VP_STR_TO_OFLAG	nvim/plugged/vimproc.vim/src/proc.c	/^#define VP_STR_TO_OFLAG(/;"	d	file:
VP_STR_TO_OFLAG	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define VP_STR_TO_OFLAG(/;"	d	file:
Value	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/imports/vendor/gh.com/gi/foo-logging/logger.go	/^	Value string$/;"	m	struct:logging.TestLogger
Value	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/vendor/gh.com/gi/foo-logging/logger.go	/^	Value string$/;"	m	struct:logging.TestLogger
Variable,Variables	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*const[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*[0-9\\/;"	k
Variable,Variables	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*const[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*new\/\\/;"	k
Variable,Variables	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*let[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*[0-9\\"'/;"	k
Variable,Variables	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*let[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*new\/\\1/;"	k
Variable,Variables	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*var[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*[0-9\\"'/;"	k
Variable,Variables	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*var[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*new\/\\1/;"	k
Verifying Character Set	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^Verifying Character Set$/;"	c
Verifying Newline Style	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Verifying Newline Style$/;"	s	chapter:Tests for End of Line Property
VersionError	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^class VersionError(ValueError, EditorConfigError):$/;"	c
Vim	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^.. _`Vim`: https:\/\/github.com\/editorconfig\/editorconfig-vim$/;"	T	chapter:Writing Plugins
Vim Markdown runtime files	nvim/plugged/vim-markdown/README.markdown	/^# Vim Markdown runtime files$/;"	c
VimProcBang	nvim/plugged/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcBang$/;"	c
VimProcInstall	nvim/plugged/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=* VimProcInstall$/;"	c
VimProcRead	nvim/plugged/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcRead$/;"	c
Vundle	nvim/plugged/vim-pencil/README.markdown	/^#### Vundle$/;"	t
WIFCONTINUED	nvim/plugged/vimproc.vim/src/proc.c	/^# define WIFCONTINUED(/;"	d	file:
WINVER	nvim/plugged/vimproc.vim/make_msvc.mak	/^WINVER = 0x0500$/;"	m
WINVER	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define WINVER /;"	d	file:
Whats	nvim/plugged/emmet-vim/docs/index.html	/^				<h2 class="maintitle">Whats<\/h2>$/;"	i
Why use Vim for writing?	nvim/plugged/vim-pencil/README.markdown	/^# Why use Vim for writing?$/;"	c
Windows-style Newlines	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Windows-style Newlines$/;"	S	section:Tests for Newlines
WriteBookmarks	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 WriteBookmarks call g:NERDTreeBookmark.Write()$/;"	c
Writing Plugins	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Writing Plugins$/;"	c
X	nvim/autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
ZoomWinTabIn	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^command! ZoomWinTabIn call ZoomWinTabIn()$/;"	c
ZoomWinTabIn	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^function! ZoomWinTabIn()$/;"	f
ZoomWinTabOut	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^command! ZoomWinTabOut call ZoomWinTabOut()$/;"	c
ZoomWinTabOut	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^function! ZoomWinTabOut() $/;"	f
ZoomWinTabToggle	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^command! ZoomWinTabToggle call ZoomWinTabToggle()$/;"	c
ZoomWinTabToggle	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^function! ZoomWinTabToggle()$/;"	f
[[	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
[[	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> [[   <C-o>:call <SID>Tlist_Window_Move_To_File(-1)<CR>$/;"	m
[[	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> [[ :call <SID>Tlist_Window_Move_To_File(-1)<CR>$/;"	m
[[	nvim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('n', 'prev')<cr>$/;"	m
[[	nvim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('o', 'prev')<cr>$/;"	m
[[	nvim/plugged/vim-go/ftplugin/go.vim	/^  xnoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('v', 'prev')<cr>$/;"	m
[apt-vim](https://github.com/egalpin/apt-vim)	nvim/plugged/nerdtree/README.markdown	/^#### [apt-vim](https:\/\/github.com\/egalpin\/apt-vim)$/;"	t
[c	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> [c <Plug>GitGutterPrevHunk$/;"	m
[pathogen.vim](https://github.com/tpope/vim-pathogen)	nvim/plugged/nerdtree/README.markdown	/^#### [pathogen.vim](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	t
\x20on	tmux/tmux.conf	/^setw -g automatic-rename off # on => rename window to reflect current program$/;"	k
\x21	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    ino <buffer> ! !<c-g>u$/;"	m
]]	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
]]	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> ]]   <C-o>:call <SID>Tlist_Window_Move_To_File(1)<CR>$/;"	m
]]	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> ]] :call <SID>Tlist_Window_Move_To_File(1)<CR>$/;"	m
]]	nvim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('n', 'next')<cr>$/;"	m
]]	nvim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('o', 'next')<cr>$/;"	m
]]	nvim/plugged/vim-go/ftplugin/go.vim	/^  xnoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('v', 'next')<cr>$/;"	m
]c	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> ]c <Plug>GitGutterNextHunk$/;"	m
_$	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	_$ = window.$;$/;"	P
_FAKE_POLL_H	nvim/plugged/vimproc.vim/src/fakepoll.h	/^#define _FAKE_POLL_H$/;"	d
_GNU_SOURCE	nvim/plugged/vimproc.vim/src/ptytty.c	/^# define _GNU_SOURCE$/;"	d	file:
_POSIX_	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define _POSIX_$/;"	d	file:
_Parent	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^class _Parent(logger.LoggingMixin):$/;"	c
_ParsingError	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^    from ConfigParser import ParsingError as _ParsingError$/;"	x
_ParsingError	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^    from configparser import ParsingError as _ParsingError$/;"	x
_WIN32_IE	nvim/plugged/vimproc.vim/make_msvc.mak	/^_WIN32_IE = 0x0500$/;"	m
_WIN32_WINNT	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define _WIN32_WINNT /;"	d	file:
_XOPEN_SOURCE	nvim/plugged/vimproc.vim/src/proc.c	/^#define _XOPEN_SOURCE /;"	d	file:
__BSD_VISIBLE	nvim/plugged/vimproc.vim/src/proc.c	/^# define __BSD_VISIBLE /;"	d	file:
__all__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/__init__.py	/^__all__ = ['get_properties', 'EditorConfigError', 'exceptions']$/;"	v
__all__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/compat.py	/^__all__ = ['force_unicode', 'u']$/;"	v
__all__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^__all__ = ["fnmatch", "fnmatchcase", "translate"]$/;"	v
__all__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^__all__ = ['EditorConfigHandler']$/;"	v
__all__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^__all__ = ["ParsingError", "EditorConfigParser"]$/;"	v
__all__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^__all__ = ['OrderedDict']$/;"	v
__all__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/versiontools.py	/^__all__ = ['join_version', 'split_version']$/;"	v
__deepcopy__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __deepcopy__(self, memo):$/;"	m	class:OrderedDict
__delitem__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __delitem__(self, key):$/;"	m	class:OrderedDict
__docformat__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^__docformat__ = "restructuredtext en"$/;"	v
__eq__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __eq__(self, other):$/;"	m	class:OrderedDict
__ge__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __ge__(self, other):$/;"	m	class:OrderedDict
__getattr__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __getattr__(self, name):$/;"	m	class:OrderedDict
__getitem__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __getitem__(self, key):$/;"	m	class:OrderedDict
__gt__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __gt__(self, other):$/;"	m	class:OrderedDict
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def __init__(self, vim):$/;"	m	class:DeopleteHandlers
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def __init__(self, vim):$/;"	m	class:Child
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^    def __init__(self, vim):$/;"	m	class:Context
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def __init__(self, vim):$/;"	m	class:Deoplete
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def __init__(self, handler):$/;"	m	class:RedirectStream
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def __init__(self, vim):$/;"	m	class:Base
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def __init__(self, vim, name=''):$/;"	m	class:DeopleteLogFilter
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def __init__(self, vim):$/;"	m	class:_Parent
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def __init__(self, plugin):$/;"	m	class:Process
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def __init__(self, vim):$/;"	m	class:Base
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^    def __init__(self, filepath, conf_filename='.editorconfig',$/;"	m	class:EditorConfigHandler
__init__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    def __init__(self, filename):$/;"	m	class:EditorConfigParser
__init__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __init__(self, init_val=(), strict=False):$/;"	m	class:OrderedDict
__init__	nvim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^    def __init__(self, vim):$/;"	m	class:Source
__iter__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    __iter__ = iterkeys$/;"	v	class:OrderedDict	file:
__le__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __le__(self, other):$/;"	m	class:OrderedDict
__lt__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __lt__(self, other):$/;"	m	class:OrderedDict
__ne__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __ne__(self, other):$/;"	m	class:OrderedDict
__repr__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __repr__(self):$/;"	m	class:OrderedDict
__setattr__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __setattr__(self, name, value):$/;"	m	class:OrderedDict
__setitem__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __setitem__(self, key, val):$/;"	m	class:OrderedDict
__str__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    __str__ = __repr__$/;"	v	class:OrderedDict	file:
__version__	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/__init__.py	/^__version__ = join_version(VERSION)$/;"	v
_add_filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _add_filter(self, path):$/;"	m	class:Child
_add_parent	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _add_parent(self, parent_cls):$/;"	m	class:Deoplete
_add_source	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _add_source(self, path):$/;"	m	class:Child
_cache	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^_cache = {}$/;"	v
_check_recache	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _check_recache(self, context):$/;"	m	class:Deoplete
_connect_stdin	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _connect_stdin(self, stdin):$/;"	m	class:AsyncParent
_ctx	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_fuzzy.py	/^def _ctx(complete_str, ignorecase=True, camelcase=True):$/;"	f
_default	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			_default: "*\/*"$/;"	P
_default	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		_default: function(fx){$/;"	M
_enable_logging	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _enable_logging(self):$/;"	m	class:Child
_find_rplugins	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _find_rplugins(self, source):$/;"	m	class:Deoplete
_fzf_statusline	nvim/plugged/fzf.vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_gather_async_results	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _gather_async_results(self, result, source):$/;"	m	class:Child
_gather_results	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _gather_results(self, context):$/;"	m	class:Child
_get	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _get(self, queue_id):$/;"	m	class:AsyncParent
_get_candidates	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _get_candidates(self, result, context_input, next_input):$/;"	m	class:Child
_get_complete_position	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def _get_complete_position(self, context, current_ft, filetype):$/;"	m	class:Source
_get_cpsm_result	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def _get_cpsm_result(self, candidates, pattern):$/;"	m	class:Filter
_get_dictionaries	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def _get_dictionaries(self, context):$/;"	m	class:Source
_get_result	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _get_result(self, context, source):$/;"	m	class:Child
_get_results	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _get_results(self, context):$/;"	m	class:Deoplete
_get_sources	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _get_sources(self):$/;"	m	class:Child
_get_tagfiles	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def _get_tagfiles(self, context):$/;"	m	class:Source
_handle_source_exception	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _handle_source_exception(self, source, exc):$/;"	m	class:Child
_init_cached	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^    def _init_cached(self):$/;"	m	class:Context
_init_cached_filetype	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^    def _init_cached_filetype(self, filetype):$/;"	m	class:Context
_init_cpsm	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def _init_cpsm(self, context):$/;"	m	class:Filter
_init_parents	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _init_parents(self):$/;"	m	class:Deoplete
_internal_get_pty	nvim/plugged/vimproc.vim/src/ptytty.c	/^_internal_get_pty(int *master, char **path)$/;"	f	typeref:typename:int	file:
_internal_get_tty	nvim/plugged/vimproc.vim/src/ptytty.c	/^_internal_get_tty(int *slave, const char *path,$/;"	f	typeref:typename:int	file:
_internal_login_tty	nvim/plugged/vimproc.vim/src/ptytty.c	/^_internal_login_tty(int fd, const char *path,$/;"	f	typeref:typename:int	file:
_is_skip	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _is_skip(self, context, source):$/;"	m	class:Child
_itersource	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _itersource(self, context):$/;"	m	class:Child
_load	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	_load: jQuery.fn.load,$/;"	P
_load_filters	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _load_filters(self, context):$/;"	m	class:Deoplete
_load_sources	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _load_sources(self, context):$/;"	m	class:Deoplete
_logger	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    _logger = None  # type: logging.Logger$/;"	v	class:LoggingMixin
_longest_path_that_exists	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def _longest_path_that_exists(self, context, input_str):$/;"	m	class:Source
_make_cache	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def _make_cache(self, context):$/;"	m	class:Source
_make_cache	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def _make_cache(self, context):$/;"	m	class:Source
_make_candidate	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def _make_candidate(self, line):$/;"	m	class:Source
_merge_results	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _merge_results(self, context, queue_id):$/;"	m	class:Child
_merge_results	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _merge_results(self, context):$/;"	m	class:Deoplete
_on_event	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _on_event(self, context):$/;"	m	class:Child
_process_filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _process_filter(self, f, context, max_candidates):$/;"	m	class:Child
_profile_end	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _profile_end(self, name):$/;"	m	class:Child
_profile_start	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _profile_start(self, context, name):$/;"	m	class:Child
_put	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _put(self, name, args):$/;"	m	class:AsyncParent
_put	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _put(self, name, args):$/;"	m	class:SyncParent
_read	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    def _read(self, fp, fpname):$/;"	m	class:EditorConfigParser
_result	nvim/plugged/vimproc.vim/src/proc.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	typeref:typename:vp_stack_t	file:
_result	nvim/plugged/vimproc.vim/src/proc_w32.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	typeref:typename:vp_stack_t	file:
_set_source_attributes	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _set_source_attributes(self, context):$/;"	m	class:Child
_set_source_attributes	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _set_source_attributes(self, context):$/;"	m	class:Deoplete
_start_process	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _start_process(self):$/;"	m	class:AsyncParent
_start_process	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _start_process(self):$/;"	m	class:SyncParent
_substitute_path	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def _substitute_path(self, context, path):$/;"	m	class:Source
_target	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^  set _target=$/;"	v
_target	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^  set _target=_test$/;"	v
_toggle	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	_toggle: jQuery.fn.toggle,$/;"	P
_usage	nvim/plugged/vim-go/scripts/test	/^_usage() {$/;"	f
_use_previous_result	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _use_previous_result(self, context, result, is_volatile):$/;"	m	class:Child
_version_re	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/versiontools.py	/^_version_re = re.compile(r'^(\\d+)\\.(\\d+)\\.(\\d+)(\\..*)?$', re.VERBOSE)$/;"	v
_write	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _write(self, stdout, expr):$/;"	m	class:Child
a	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^a{$/;"	s
a	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap a <Nop>$/;"	m
a/html2vimdoc.py	nvim/plugged/vim-localvimrc/support/vim-tools.patch	/^--- a\/html2vimdoc.py$/;"	m
a:hover	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^a:hover {$/;"	s
a:link	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^a:link {$/;"	s
a:visited	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^a:visited {$/;"	s
ac	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    omap <buffer> ac <Plug>GitGutterTextObjectOuterPending$/;"	m
ac	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    xmap <buffer> ac <Plug>GitGutterTextObjectOuterVisual$/;"	m
ac	nvim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> ac :<c-u>call go#textobj#Comment('a')<cr>$/;"	m
ac	nvim/plugged/vim-go/ftplugin/go.vim	/^  xnoremap <buffer> <silent> ac :<c-u>call go#textobj#Comment('a')<cr>$/;"	m
acknowledgeSelfClosingTag	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) acknowledgeSelfClosingTag() {$/;"	f	unknown:html.parser
active	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	active: 0,$/;"	P
add	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							add = true;$/;"	P
add	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						add = true;$/;"	P
add	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		add: function( elem, classNames ) {$/;"	M
add	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	add: function( selector ) {$/;"	M
add	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	add: function(elem, types, handler, data) {$/;"	M
addChild	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) addChild(n *Node) {$/;"	f	unknown:html.parser
addClass	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	addClass: function( classNames ) {$/;"	M
addElement	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) addElement() {$/;"	f	unknown:html.parser
addFormattingElement	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) addFormattingElement() {$/;"	f	unknown:html.parser
addText	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) addText(text string) {$/;"	f	unknown:html.parser
add_filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def add_filter(self, path):$/;"	m	class:_Parent
add_source	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def add_source(self, path):$/;"	m	class:_Parent
af	nvim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> af :<c-u>call go#textobj#Function('a')<cr>$/;"	m
af	nvim/plugged/vim-go/ftplugin/go.vim	/^  xnoremap <buffer> <silent> af :<c-u>call go#textobj#Function('a')<cr>$/;"	m
afe	nvim/plugged/vim-go/test/parse.go	/^	oe, afe nodeStack$/;"	m	struct:html.parser
after	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	after: function() {$/;"	M
afterAfterBodyIM	nvim/plugged/vim-go/test/parse.go	/^func afterAfterBodyIM(p *parser) bool {$/;"	f	package:html
afterAfterFramesetIM	nvim/plugged/vim-go/test/parse.go	/^func afterAfterFramesetIM(p *parser) bool {$/;"	f	package:html
afterBodyIM	nvim/plugged/vim-go/test/parse.go	/^func afterBodyIM(p *parser) bool {$/;"	f	package:html
afterFramesetIM	nvim/plugged/vim-go/test/parse.go	/^func afterFramesetIM(p *parser) bool {$/;"	f	package:html
afterHeadIM	nvim/plugged/vim-go/test/parse.go	/^func afterHeadIM(p *parser) bool {$/;"	f	package:html
ajax	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ajax: function( s ) {$/;"	M
ajaxSetup	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ajaxSetup: function( settings ) {$/;"	M
all	nvim/plugged/emmet-vim/Makefile	/^all : emmet-vim.zip$/;"	t
all	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		all = !namespace && !event.exclusive;$/;"	P
all	nvim/plugged/vim-go/Makefile	/^all: install test lint$/;"	t
all	nvim/plugged/vim-localvimrc/Makefile	/^all: doc package$/;"	t
all	nvim/plugged/vimproc.vim/Makefile	/^all:$/;"	t
all	nvim/plugged/vimproc.vim/make_android.mak	/^all: $(TARGET)$/;"	t
all	nvim/plugged/vimproc.vim/make_bsd.mak	/^all: $(TARGET)$/;"	t
all	nvim/plugged/vimproc.vim/make_cygwin.mak	/^all: $(TARGET)$/;"	t
all	nvim/plugged/vimproc.vim/make_mac.mak	/^all: $(TARGET)$/;"	t
all	nvim/plugged/vimproc.vim/make_mingw32.mak	/^all: $(TARGET)$/;"	t
all	nvim/plugged/vimproc.vim/make_mingw64.mak	/^all: $(TARGET)$/;"	t
all	nvim/plugged/vimproc.vim/make_sunos.mak	/^all: $(TARGET)$/;"	t
all	nvim/plugged/vimproc.vim/make_unix.mak	/^all: $(TARGET)$/;"	t
andSelf	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	andSelf: function() {$/;"	M
animate	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	animate: function( prop, speed, easing, callback ) {$/;"	M
animated	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			animated: function(a){return jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).leng/;"	M
animated	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			animated: function(a){return jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).leng/;"	P
append	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	append: function() {$/;"	M
appendTo	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	appendTo: "append",$/;"	P
apps_dir_from_src	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^apps_dir_from_src(SrcFile) ->$/;"	f
arg	nvim/plugged/syntastic/syntax_checkers/less/less-lint.js	/^      arg = match[1];$/;"	P
args	nvim/plugged/syntastic/syntax_checkers/less/less-lint.js	/^  args = process.argv.slice(1);$/;"	P
args	nvim/plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^args = parser.parse_args()$/;"	v
article	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^article {$/;"	s
asset_time	nvim/plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^    asset_time = time.strptime(asset['updated_at'], '%Y-%m-%dT%H:%M:%SZ')$/;"	v
async	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			async: false,$/;"	P
async	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		async: true,$/;"	P
attach_vim	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^def attach_vim(serveraddr):$/;"	f
attr	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	attr: function( elem, name, value ) {$/;"	M
attr	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	attr: function( name, value, type ) {$/;"	M
author	nvim/plugged/vim-go/addon-info.json	/^  "author": "Fatih Arslan <fatih@arslan.io>",$/;"	s
auto_completion_begin	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def auto_completion_begin(self, context):$/;"	m	class:DeopleteHandlers
autoloaded_pencil	nvim/plugged/vim-pencil/autoload/pencil.vim	/^let autoloaded_pencil = 1$/;"	v
b	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map b <Plug>(easymotion-b)$/;"	m
b	nvim/plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap b <Plug>(easymotion-b)$/;"	m
b:	nvim/plugged/vim-markdown/syntax/markdown.vim	/^    let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:browsefilter	nvim/plugged/vim-pug/ftplugin/pug.vim	/^  let b:browsefilter="Pug Files (*.pug)\\t*.pug\\n" . s:browsefilter$/;"	v
b:color_pattern	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^let b:color_pattern = {}$/;"	v
b:current_syntax	nvim/plugged/apiblueprint.vim/syntax/apiblueprint.vim	/^let b:current_syntax = 'apiblueprint'$/;"	v
b:current_syntax	nvim/plugged/typescript-vim/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	nvim/plugged/vim-go/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	nvim/plugged/vim-go/syntax/godebugoutput.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	nvim/plugged/vim-go/syntax/godebugstacktrace.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	nvim/plugged/vim-go/syntax/godebugvariables.vim	/^let b:current_syntax = "godebugvariables"$/;"	v
b:current_syntax	nvim/plugged/vim-go/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	nvim/plugged/vim-go/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	nvim/plugged/vim-go/syntax/gomod.vim	/^let b:current_syntax = "gomod"$/;"	v
b:current_syntax	nvim/plugged/vim-go/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	nvim/plugged/vim-go/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	nvim/plugged/vim-javascript/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	nvim/plugged/vim-markdown/syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	nvim/plugged/vim-pug/syntax/pug.vim	/^let b:current_syntax = "pug"$/;"	v
b:current_syntax	nvim/plugged/vim-vue/syntax/vue.vim	/^let b:current_syntax = "vue"$/;"	v
b:did_ftplugin	nvim/plugged/typescript-vim/ftplugin/typescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	nvim/plugged/vim-go/ftplugin/asm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	nvim/plugged/vim-go/ftplugin/go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	nvim/plugged/vim-go/ftplugin/gomod.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	nvim/plugged/typescript-vim/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	nvim/plugged/vim-go/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	nvim/plugged/vim-javascript/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	nvim/plugged/vim-pug/indent/pug.vim	/^let b:did_indent = 1$/;"	v
b:match_words	nvim/plugged/vim-pug/ftplugin/pug.vim	/^  let b:match_words = s:match_words$/;"	v
b:matchescache	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^let b:matchescache = {}$/;"	v
b:undo_ftplugin	nvim/plugged/typescript-vim/ftplugin/typescript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<"$/;"	v
b:undo_ftplugin	nvim/plugged/vim-go/ftplugin/asm.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	nvim/plugged/vim-go/ftplugin/go.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	nvim/plugged/vim-go/ftplugin/gomod.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	nvim/plugged/vim-javascript/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	nvim/plugged/vim-javascript/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	nvim/plugged/vim-markdown/ftplugin/markdown.vim	/^  let b:undo_ftplugin .= " foldexpr< foldmethod< foldtext<"$/;"	v
b:undo_ftplugin	nvim/plugged/vim-markdown/ftplugin/markdown.vim	/^  let b:undo_ftplugin .= "|setl cms< com< fo< flp<"$/;"	v
b:undo_ftplugin	nvim/plugged/vim-markdown/ftplugin/markdown.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp<"$/;"	v
b:undo_ftplugin	nvim/plugged/vim-pug/ftplugin/pug.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_indent	nvim/plugged/typescript-vim/indent/typescript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:undo_indent	nvim/plugged/vim-javascript/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
base	nvim/plugged/vim-go/assets/vim-go.svg	/^     fit-margin-bottom="0">$/;"	i
before	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	before: function() {$/;"	M
beforeHTMLIM	nvim/plugged/vim-go/test/parse.go	/^func beforeHTMLIM(p *parser) bool {$/;"	f	package:html
beforeHeadIM	nvim/plugged/vim-go/test/parse.go	/^func beforeHeadIM(p *parser) bool {$/;"	f	package:html
binary_search_begin	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def binary_search_begin(l, prefix):$/;"	f
binary_search_end	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def binary_search_end(l, prefix):$/;"	f
binary_search_lines_by_prefix	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^def binary_search_lines_by_prefix(prefix, filename):$/;"	f
bind	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	bind: function( type, data, fn ) {$/;"	M
body	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^body {$/;"	s
bootstrap	install.sh	/^function bootstrap() {$/;"	f
boxModel	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	boxModel: !jQuery.browser.msie || document.compatMode == "CSS1Compat",$/;"	P
br	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		br = i ? "Right" : "Bottom"; \/\/ bottom or right$/;"	P
buf	nvim/plugged/vimproc.vim/src/vimstack.c	/^    char *buf;   \/* stack buffer *\/$/;"	m	struct:vp_stack_t	typeref:typename:char *	file:
build	nvim/plugged/vimproc.vim/make_msvc.mak	/^build: $(LIBDIR)\\$(VIMPROC).dll$/;"	t
button	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			button: function(a){return "button"==a.type||jQuery.nodeName(a,"button");},$/;"	M
button	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			button: function(a){return "button"==a.type||jQuery.nodeName(a,"button");},$/;"	P
buttonScope	nvim/plugged/vim-go/test/parse.go	/^	buttonScope$/;"	c	package:html
bytepos2charpos	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def bytepos2charpos(encoding, text, pos):$/;"	f
c	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						var c = 1;$/;"	V
c	nvim/plugged/vimproc.vim/tools/fork.py	/^c = 'p' if pid == 0 else 'c'$/;"	v
cache	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	cache: {},$/;"	P
cached_translate	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^def cached_translate(pat):$/;"	f
callback	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				callback = params;$/;"	P
callback	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			callback = data;$/;"	P
callback	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		callback = callback || function(){};$/;"	P
cellspacing	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		cellspacing: "cellSpacing"$/;"	P
changes	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^changes:$/;"	t
charpos2bytepos	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charpos2bytepos(encoding, text, pos):$/;"	f
charwidth	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charwidth(c):$/;"	f
check_assertions	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^    def check_assertions(self):$/;"	m	class:EditorConfigHandler
checkbox	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			checkbox: function(a){return "checkbox"==a.type;},$/;"	M
checkbox	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			checkbox: function(a){return "checkbox"==a.type;},$/;"	P
checked	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				this.checked = (jQuery.inArray(this.value, value) >= 0 ||$/;"	P
checked	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			checked: function(a){return a.checked;},$/;"	M
checked	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			checked: function(a){return a.checked;},$/;"	P
children	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	children: function(elem){return jQuery.sibling(elem.firstChild);},$/;"	M
children	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	children: function(elem){return jQuery.sibling(elem.firstChild);},$/;"	P
circle4830	nvim/plugged/vim-go/assets/vim-go.svg	/^         style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visib/;"	i
circle4830-3	nvim/plugged/vim-go/assets/vim-go.svg	/^         transform="matrix(0.98640333,0.16434257,-0.16434257,0.98640333,0,0)" \/>$/;"	i
class,classes	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*class[ \\t]\\{1,\\}\\([A-Za-z0-9_$]\\{1,\\}\\)\/\\1\/c,class,classe/;"	k
class,classes	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*const[ \\t]\\{1,\\}\\([A-Z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*f/;"	k
class,classes	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*let[ \\t]\\{1,\\}\\([A-Z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*fun/;"	k
class,classes	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*var[ \\t]\\{1,\\}\\([A-Z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*fun/;"	k
classFilter	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	classFilter: function(r,m,not){$/;"	M
clean	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^clean:$/;"	t
clean	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	clean: function( elems, context ) {$/;"	M
clean	nvim/plugged/vim-go/Makefile	/^clean:$/;"	t
clean	nvim/plugged/vim-localvimrc/Makefile	/^clean:$/;"	t
clean	nvim/plugged/vimproc.vim/Makefile	/^clean:$/;"	t
clean	nvim/plugged/vimproc.vim/make_android.mak	/^clean:$/;"	t
clean	nvim/plugged/vimproc.vim/make_bsd.mak	/^clean:$/;"	t
clean	nvim/plugged/vimproc.vim/make_cygwin.mak	/^clean:$/;"	t
clean	nvim/plugged/vimproc.vim/make_mac.mak	/^clean:$/;"	t
clean	nvim/plugged/vimproc.vim/make_mingw32.mak	/^clean:$/;"	t
clean	nvim/plugged/vimproc.vim/make_mingw64.mak	/^clean:$/;"	t
clean	nvim/plugged/vimproc.vim/make_msvc.mak	/^clean:$/;"	t
clean	nvim/plugged/vimproc.vim/make_sunos.mak	/^clean:$/;"	t
clean	nvim/plugged/vimproc.vim/make_unix.mak	/^clean:$/;"	t
clear	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def clear(self):$/;"	m	class:OrderedDict
clearActiveFormattingElements	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) clearActiveFormattingElements() {$/;"	f	unknown:html.parser
clearStackToContext	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) clearStackToContext(s scope) {$/;"	f	unknown:html.parser
clone	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	clone: function( events ) {$/;"	M
close	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define close /;"	d	file:
close_allfd	nvim/plugged/vimproc.vim/src/proc.c	/^close_allfd(int fds[3][2])$/;"	f	typeref:typename:void	file:
cnt	nvim/plugged/vimproc.vim/tools/benchmark.vim	/^let cnt = 25$/;"	v
compare	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^        def compare(x):$/;"	f	member:Filter.filter	file:
complete	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			complete: fn || !fn && easing ||$/;"	P
complete	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			complete: function(res, status){$/;"	M
complete	nvim/plugged/vim-go/autoload/go/test-fixtures/complete/complete.go	/^package complete$/;"	p
completion_begin	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def completion_begin(self, user_context):$/;"	m	class:Deoplete
config_ctags	install.sh	/^function config_ctags() {$/;"	f
config_fzf	install.sh	/^function config_fzf() {$/;"	f
config_git	install.sh	/^function config_git() {$/;"	f
config_omz	install.sh	/^function config_omz() {$/;"	f
config_tmux	install.sh	/^function config_tmux() {$/;"	f
config_vim	install.sh	/^function config_vim() {$/;"	f
connection_made	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def connection_made(self, transport):$/;"	m	class:Process
container	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					container = document.createElement("div");$/;"	P
contains	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			contains: function(a,i,m){return (a.textContent||a.innerText||jQuery(a).text()||"").indexOf(m/;"	M
contains	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			contains: function(a,i,m){return (a.textContent||a.innerText||jQuery(a).text()||"").indexOf(m/;"	P
contentType	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		contentType: "application\/x-www-form-urlencoded",$/;"	P
contents	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	contents: function(elem){return jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.conte/;"	M
contents	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	contents: function(elem){return jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.conte/;"	P
context	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			context = context.ownerDocument || context[0] && context[0].ownerDocument || document;$/;"	P
context	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		context = context || document;$/;"	P
context	nvim/plugged/vim-go/test/parse.go	/^	context *Node$/;"	m	struct:html.parser
convert2candidates	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2candidates(l):$/;"	f
convert2list	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2list(expr):$/;"	f
copy	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def copy(self):$/;"	m	class:OrderedDict
copyAttributes	nvim/plugged/vim-go/test/parse.go	/^func copyAttributes(dst *Node, src Token) {$/;"	f	package:html
copyright	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^copyright = u'2012, EditorConfig Team'$/;"	v
critical	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def critical(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
css	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    css          = jQuery.curCSS,$/;"	P
css	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	css: function( elem, name, force ) {$/;"	M
css	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	css: function( key, value ) {$/;"	M
cssFloat	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		cssFloat: styleFloat,$/;"	P
ctermid	nvim/plugged/vimproc.vim/src/proc.c	/^# define ctermid(/;"	d	file:
ctrlp#decls#accept	nvim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#accept(mode, str) abort$/;"	f
ctrlp#decls#cmd	nvim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#cmd(mode, ...) abort$/;"	f
ctrlp#decls#enter	nvim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#enter() abort$/;"	f
ctrlp#decls#exit	nvim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#exit() abort$/;"	f
ctrlp#decls#init	nvim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#init() abort$/;"	f
cur	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			cur = cur[dir];$/;"	P
cur	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			cur = elem[dir];$/;"	P
cur	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			cur = not ? elems = f.r : jQuery.merge( cur, f.r );$/;"	P
cur	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	cur: function(force){$/;"	M
curCSS	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	curCSS: function( elem, name, force ) {$/;"	M
current_compiler	nvim/plugged/typescript-vim/compiler/typescript.vim	/^let current_compiler = "typescript"$/;"	v
current_compiler	nvim/plugged/vim-javascript/compiler/eslint.vim	/^let current_compiler = "eslint"$/;"	v
custom	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	custom: function(from, to, unit){$/;"	M
cygwin	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^:cygwin$/;"	l
cygwin_test	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^:cygwin_test$/;"	l
d	nvim/autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	nvim/autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
d	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> d    <C-o>:call <SID>Tlist_Remove_File(-1, 1)<CR>$/;"	m
d	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> d :call <SID>Tlist_Remove_File(-1, 1)<CR>$/;"	m
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						data = jQuery.httpData( xhr, s.dataType, s.dataFilter );$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				data = jQuery.data( this[0], key );$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				data = tmp;$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			data = eval("(" + data + ")");$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			data = filter( data, type );$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			data = null;$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			data = xml ? xhr.responseXML : xhr.responseText;$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			data = {};$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			data: data,$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			data: params,$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		data = jQuery.makeArray(data);$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		data = jQuery.trim( data );$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		data: null,$/;"	P
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	data: function( elem, name, data ) {$/;"	M
data	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	data: function( key, value ){$/;"	M
dataType	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			dataType: "html",$/;"	P
dataType	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			dataType: "script"$/;"	P
dataType	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			dataType: type$/;"	P
dd	nvim/autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
debug	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def debug(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
debug	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def debug(vim, expr):$/;"	f
debug	nvim/plugged/vimproc.vim/src/proc.c	/^const int debug = 0;$/;"	v	typeref:typename:const int
debug	nvim/plugged/vimproc.vim/src/proc_w32.c	/^const int debug = 0;$/;"	v	typeref:typename:const int
deep	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		deep = target;$/;"	P
def	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^ 		def: 400$/;"	P
defaultScope	nvim/plugged/vim-go/test/parse.go	/^	defaultScope scope = iota$/;"	c	package:html
defaultScopeStopTags	nvim/plugged/vim-go/test/parse.go	/^	defaultScopeStopTags = map[string][]a.Atom{$/;"	v	package:html
defaultView	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	defaultView = document.defaultView || {};$/;"	P
default_grep	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let default_grep = 'grep'$/;"	v
defs4	nvim/plugged/vim-go/assets/vim-go.svg	/^     id="defs4">$/;"	i
deoplete	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^    augroup deoplete$/;"	a
deoplete	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^  augroup deoplete$/;"	a
deoplete	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  augroup deoplete$/;"	a
deoplete#cancel_popup	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#cancel_popup() abort$/;"	f
deoplete#close_popup	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#close_popup() abort$/;"	f
deoplete#complete_common_string	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#complete_common_string() abort$/;"	f
deoplete#custom#_get	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get() abort$/;"	f
deoplete#custom#_get_buffer	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_buffer() abort$/;"	f
deoplete#custom#_get_filetype_option	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_filetype_option(name, filetype, default) abort$/;"	f
deoplete#custom#_get_option	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_option(name) abort$/;"	f
deoplete#custom#_get_source	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_source(source_name) abort$/;"	f
deoplete#custom#_get_source_vars	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_source_vars(name) abort$/;"	f
deoplete#custom#_init	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_init() abort$/;"	f
deoplete#custom#_init_buffer	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_init_buffer() abort$/;"	f
deoplete#custom#buffer_option	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#buffer_option(name_or_dict, ...) abort$/;"	f
deoplete#custom#buffer_var	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#buffer_var(source_name, var_name, value) abort$/;"	f
deoplete#custom#option	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#option(name_or_dict, ...) abort$/;"	f
deoplete#custom#source	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#source(source_name, option_name, value) abort$/;"	f
deoplete#custom#var	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#var(source_name, var_name, value) abort$/;"	f
deoplete#disable	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#disable() abort$/;"	f
deoplete#enable	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable() abort$/;"	f
deoplete#enable_logging	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable_logging(level, logfile) abort$/;"	f
deoplete#handler#_async_timer_start	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_async_timer_start() abort$/;"	f
deoplete#handler#_async_timer_stop	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_async_timer_stop() abort$/;"	f
deoplete#handler#_check_omnifunc	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_check_omnifunc(context) abort$/;"	f
deoplete#handler#_do_complete	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_do_complete() abort$/;"	f
deoplete#handler#_init	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_init() abort$/;"	f
deoplete#handler#_skip_next_completion	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_skip_next_completion() abort$/;"	f
deoplete#init#_channel	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_channel() abort$/;"	f
deoplete#init#_channel_initialized	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_channel_initialized() abort$/;"	f
deoplete#init#_custom_variables	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_custom_variables() abort$/;"	f
deoplete#init#_disable_handler	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_disable_handler() abort$/;"	f
deoplete#init#_enable_handler	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_enable_handler() abort$/;"	f
deoplete#init#_initialize	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_initialize() abort$/;"	f
deoplete#init#_is_handler_enabled	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_is_handler_enabled() abort$/;"	f
deoplete#init#_option	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_option() abort$/;"	f
deoplete#init#_prev_completion	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_prev_completion() abort$/;"	f
deoplete#init#_python_version_check	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_python_version_check() abort$/;"	f
deoplete#initialize	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#initialize() abort$/;"	f
deoplete#is_enabled	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#is_enabled() abort$/;"	f
deoplete#manual_complete	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#manual_complete(...) abort$/;"	f
deoplete#mapping#_complete	nvim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_complete() abort$/;"	f
deoplete#mapping#_complete_common_string	nvim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_complete_common_string() abort$/;"	f
deoplete#mapping#_completefunc	nvim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_completefunc(findstart, base) abort$/;"	f
deoplete#mapping#_dummy_complete	nvim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_dummy_complete() abort$/;"	f
deoplete#mapping#_init	nvim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_init() abort$/;"	f
deoplete#mapping#_restore_completeopt	nvim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_restore_completeopt() abort$/;"	f
deoplete#mapping#_rpcrequest_wrapper	nvim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_rpcrequest_wrapper(sources) abort$/;"	f
deoplete#mapping#_set_completeopt	nvim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_set_completeopt() abort$/;"	f
deoplete#mapping#_undo_completion	nvim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_undo_completion() abort$/;"	f
deoplete#mappings#cancel_popup	nvim/plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#cancel_popup() abort$/;"	f
deoplete#mappings#close_popup	nvim/plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#close_popup() abort$/;"	f
deoplete#mappings#manual_complete	nvim/plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#manual_complete(...) abort$/;"	f
deoplete#mappings#refresh	nvim/plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#refresh() abort$/;"	f
deoplete#mappings#smart_close_popup	nvim/plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#smart_close_popup() abort$/;"	f
deoplete#mappings#undo_completion	nvim/plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#undo_completion() abort$/;"	f
deoplete#refresh	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#refresh() abort$/;"	f
deoplete#send_event	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#send_event(event, ...) abort$/;"	f
deoplete#smart_close_popup	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#smart_close_popup() abort$/;"	f
deoplete#toggle	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#toggle() abort$/;"	f
deoplete#undo_completion	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#undo_completion() abort$/;"	f
deoplete#util#convert2list	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#convert2list(expr) abort$/;"	f
deoplete#util#get_context_filetype	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_context_filetype(input, event) abort$/;"	f
deoplete#util#get_input	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_input(event) abort$/;"	f
deoplete#util#get_keyword_pattern	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_keyword_pattern(filetype) abort$/;"	f
deoplete#util#get_next_input	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_next_input(event) abort$/;"	f
deoplete#util#get_syn_names	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_syn_names() abort$/;"	f
deoplete#util#has_yarp	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#has_yarp() abort$/;"	f
deoplete#util#neovim_version	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#neovim_version() abort$/;"	f
deoplete#util#print_debug	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_debug(string) abort$/;"	f
deoplete#util#print_error	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_error(string, ...) abort$/;"	f
deoplete#util#print_warning	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_warning(string) abort$/;"	f
deoplete#util#rpcnotify	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#rpcnotify(event, context) abort$/;"	f
deoplete#util#split	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#split(string) abort$/;"	f
deoplete#util#string	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#string(expr) abort$/;"	f
deoplete#util#uniq	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#uniq(list) abort$/;"	f
deoplete#util#versioncmp	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#versioncmp(a, b) abort$/;"	f
deoplete#util#vimoption2python	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python(option) abort$/;"	f
deoplete#util#vimoption2python_not	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python_not(option) abort$/;"	f
deoplete_auto_completion_begin	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_auto_completion_begin(context):$/;"	f
deoplete_enable_logging	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_enable_logging(context):$/;"	f
deoplete_init	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_init():$/;"	f
deoplete_manual_completion_begin	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_manual_completion_begin(context):$/;"	f
deoplete_on_event	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_on_event(context):$/;"	f
description	nvim/plugged/vim-go/addon-info.json	/^  "description": "Full featured Go (golang) support for Vim.",$/;"	s
detain_winsock	nvim/plugged/vimproc.vim/src/proc_w32.c	/^detain_winsock()$/;"	f	typeref:typename:int	file:
devhelp	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^devhelp:$/;"	t
did_javascript_syn_inits	nvim/plugged/vim-javascript/extras/flow.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	nvim/plugged/vim-javascript/extras/jsdoc.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	nvim/plugged/vim-javascript/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_typescript_syn_inits	nvim/plugged/typescript-vim/syntax/typescript.vim	/^    let did_typescript_syn_inits = 1$/;"	v
die	nvim/plugged/vim-localvimrc/support/build_vim-tools.sh	/^die()$/;"	f
dir	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	dir: function( elem, dir ){$/;"	M
dirhtml	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^dirhtml:$/;"	t
disabled	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			disabled: function(a){return a.disabled;},$/;"	M
disabled	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			disabled: function(a){return a.disabled;},$/;"	P
div	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					div = div.lastChild;$/;"	P
doc	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    doc          = elem.ownerDocument,$/;"	P
doc	nvim/plugged/vim-go/test/parse.go	/^	doc *Node$/;"	m	struct:html.parser
doc	nvim/plugged/vim-localvimrc/Makefile	/^doc: doc\/localvimrc.txt$/;"	t
doc/localvimrc.txt	nvim/plugged/vim-localvimrc/Makefile	/^doc\/localvimrc.txt: README.md $(html2vimdoc)$/;"	t
docker	nvim/plugged/vim-go/Makefile	/^docker:$/;"	t
docker-body	nvim/plugged/vim-go/assets/vim-go.svg	/^       osb:paint="solid">$/;"	i
docker-eye	nvim/plugged/vim-go/assets/vim-go.svg	/^       osb:paint="solid">$/;"	i
docker-iris	nvim/plugged/vim-go/assets/vim-go.svg	/^       osb:paint="solid">$/;"	i
docker-jaw	nvim/plugged/vim-go/assets/vim-go.svg	/^       osb:paint="solid">$/;"	i
docker-line	nvim/plugged/vim-go/assets/vim-go.svg	/^       osb:paint="solid">$/;"	i
doctest	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^doctest:$/;"	t
domManip	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	domManip: function( args, table, reverse, callback ) {$/;"	M
done	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						done = true;$/;"	P
done	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					done = false;$/;"	P
done	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					done = jQuery.merge( done, ret );$/;"	P
done	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		done = jQuery.merge( done, ret );$/;"	P
dp_main	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^dp_main = os.path.join(os.path.dirname(__file__), 'dp_main.py')$/;"	v
duration	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			duration: speed,$/;"	P
e	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				var e = new jQuery.fx( self, opt, name );$/;"	V
each	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	each: function( callback, args ) {$/;"	M
each	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	each: function( object, callback, args ) {$/;"	M
easing	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			easing: fn && easing || easing && easing.constructor != Function && easing$/;"	P
ec_UseConfigFiles	nvim/plugged/editorconfig-vim/plugin/editorconfig.py	/^    def ec_UseConfigFiles():$/;"	f
ec_data	nvim/plugged/editorconfig-vim/plugin/editorconfig.py	/^    ec_data = {}$/;"	v
editorconfig	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^augroup editorconfig$/;"	a
editorconfig#AddNewHook	nvim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^function! editorconfig#AddNewHook(func) " {{{1$/;"	f
editorconfig#ApplyHooks	nvim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^function! editorconfig#ApplyHooks(config) abort " {{{1$/;"	f
editorconfig_except	nvim/plugged/editorconfig-vim/plugin/editorconfig.py	/^        import editorconfig.exceptions as editorconfig_except$/;"	I
editorconfig_trim_trailing_whitespace	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    augroup editorconfig_trim_trailing_whitespace$/;"	a
elapsed	nvim/plugged/vim-gitgutter/unplace.vim	/^let elapsed = reltime(start)$/;"	v
elem	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						elem = elem.firstChild;$/;"	P
elem	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				elem = jQuery.makeArray( div.childNodes );$/;"	P
elem	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			elem = window;$/;"	P
elem	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		elem = elem == window ?$/;"	P
elem	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		elem = null;$/;"	P
elem	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.elem = elem;$/;"	P
elementInScope	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) elementInScope(s scope, matchTags ...a.Atom) bool {$/;"	f	unknown:html.parser
elems	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				elems = jQuery.clean( args, this.ownerDocument );$/;"	P
ellipse4190	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="sssssssssss" \/>$/;"	i
ellipse4523	nvim/plugged/vim-go/assets/vim-go.svg	/^         style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visib/;"	i
ellipse4590	nvim/plugged/vim-go/assets/vim-go.svg	/^         style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visib/;"	i
ellipse4650	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="sssssssssssssssss" \/>$/;"	i
ellipse4652	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="sssssssssssssssss" \/>$/;"	i
ellipse4814	nvim/plugged/vim-go/assets/vim-go.svg	/^         style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visib/;"	i
emmet#anchorizeURL	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#anchorizeURL(flag) abort$/;"	f
emmet#balanceTag	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#balanceTag(flag) range abort$/;"	f
emmet#codePretty	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#codePretty() range abort$/;"	f
emmet#completeTag	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#completeTag(findstart, base) abort$/;"	f
emmet#encodeImage	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#encodeImage() abort$/;"	f
emmet#expandAbbr	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range abort$/;"	f
emmet#expandAbbrIntelligent	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbrIntelligent(feedkey) abort$/;"	f
emmet#expandCursorExpr	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandCursorExpr(expand, mode) abort$/;"	f
emmet#expandDollarExpr	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandDollarExpr(expand) abort$/;"	f
emmet#expandWord	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandWord(abbr, type, orig) abort$/;"	f
emmet#getBaseType	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getBaseType(type) abort$/;"	f
emmet#getDollarExprs	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarExprs(expand) abort$/;"	f
emmet#getDollarValueByKey	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarValueByKey(key) abort$/;"	f
emmet#getExpandos	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getExpandos(type, key) abort$/;"	f
emmet#getFileType	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFileType(...) abort$/;"	f
emmet#getFilters	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFilters(type) abort$/;"	f
emmet#getIndentation	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getIndentation(...) abort$/;"	f
emmet#getResource	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getResource(type, name, default) abort$/;"	f
emmet#getSettings	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSettings() abort$/;"	f
emmet#getSnippets	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSnippets(type) abort$/;"	f
emmet#imageSize	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#imageSize() abort$/;"	f
emmet#isExpandable	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExpandable() abort$/;"	f
emmet#isExtends	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExtends(type, extend) abort$/;"	f
emmet#lang#css#balanceTag	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#balanceTag(flag) range abort$/;"	f
emmet#lang#css#encodeImage	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#encodeImage() abort$/;"	f
emmet#lang#css#findTokens	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#findTokens(str) abort$/;"	f
emmet#lang#css#imageSize	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageSize() abort$/;"	f
emmet#lang#css#moveNextPrev	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrev(flag) abort$/;"	f
emmet#lang#css#moveNextPrevItem	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#css#parseIntoTree	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#css#parseTag	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseTag(tag) abort$/;"	f
emmet#lang#css#removeTag	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#removeTag() abort$/;"	f
emmet#lang#css#splitJoinTag	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#splitJoinTag() abort$/;"	f
emmet#lang#css#toString	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent) abor/;"	f
emmet#lang#css#toggleComment	nvim/plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toggleComment() abort$/;"	f
emmet#lang#elm#findTokens	nvim/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#findTokens(str) abort$/;"	f
emmet#lang#elm#parseIntoTree	nvim/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#elm#renderNode	nvim/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderNode(node)$/;"	f
emmet#lang#elm#renderParam	nvim/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderParam(param)$/;"	f
emmet#lang#elm#toString	nvim/plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#toString(settings, current, type, inline, filters, itemno, indent) abor/;"	f
emmet#lang#exists	nvim/plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#exists(type) abort$/;"	f
emmet#lang#haml#balanceTag	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range abort$/;"	f
emmet#lang#haml#encodeImage	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#encodeImage() abort$/;"	f
emmet#lang#haml#findTokens	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#findTokens(str) abort$/;"	f
emmet#lang#haml#imageSize	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageSize() abort$/;"	f
emmet#lang#haml#moveNextPrev	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag) abort$/;"	f
emmet#lang#haml#moveNextPrevItem	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#haml#parseIntoTree	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#haml#parseTag	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseTag(tag) abort$/;"	f
emmet#lang#haml#removeTag	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#removeTag() abort$/;"	f
emmet#lang#haml#splitJoinTag	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#splitJoinTag() abort$/;"	f
emmet#lang#haml#toString	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#haml#toggleComment	nvim/plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toggleComment() abort$/;"	f
emmet#lang#html#balanceTag	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#balanceTag(flag) range abort$/;"	f
emmet#lang#html#encodeImage	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#encodeImage() abort$/;"	f
emmet#lang#html#findTokens	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#findTokens(str) abort$/;"	f
emmet#lang#html#imageSize	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageSize() abort$/;"	f
emmet#lang#html#moveNextPrev	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrev(flag) abort$/;"	f
emmet#lang#html#moveNextPrevItem	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#html#parseIntoTree	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#html#parseTag	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseTag(tag) abort$/;"	f
emmet#lang#html#removeTag	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#removeTag() abort$/;"	f
emmet#lang#html#splitJoinTag	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#splitJoinTag() abort$/;"	f
emmet#lang#html#toString	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#html#toggleComment	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toggleComment() abort$/;"	f
emmet#lang#jade#balanceTag	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#balanceTag(flag) range abort$/;"	f
emmet#lang#jade#encodeImage	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#encodeImage() abort$/;"	f
emmet#lang#jade#findTokens	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#findTokens(str) abort$/;"	f
emmet#lang#jade#imageSize	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageSize() abort$/;"	f
emmet#lang#jade#moveNextPrev	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrev(flag) abort$/;"	f
emmet#lang#jade#moveNextPrevItem	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#jade#parseIntoTree	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#jade#parseTag	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseTag(tag) abort$/;"	f
emmet#lang#jade#removeTag	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#removeTag() abort$/;"	f
emmet#lang#jade#splitJoinTag	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#splitJoinTag() abort$/;"	f
emmet#lang#jade#toString	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#jade#toggleComment	nvim/plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toggleComment() abort$/;"	f
emmet#lang#less#balanceTag	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#balanceTag(flag) range abort$/;"	f
emmet#lang#less#encodeImage	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#encodeImage() abort$/;"	f
emmet#lang#less#findTokens	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#findTokens(str) abort$/;"	f
emmet#lang#less#imageSize	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageSize() abort$/;"	f
emmet#lang#less#moveNextPrev	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrev(flag) abort$/;"	f
emmet#lang#less#moveNextPrevItem	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#less#parseIntoTree	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#less#parseTag	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseTag(tag) abort$/;"	f
emmet#lang#less#removeTag	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#removeTag() abort$/;"	f
emmet#lang#less#splitJoinTag	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#splitJoinTag() abort$/;"	f
emmet#lang#less#toString	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#less#toggleComment	nvim/plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toggleComment() abort$/;"	f
emmet#lang#sass#balanceTag	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range abort$/;"	f
emmet#lang#sass#encodeImage	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#encodeImage() abort$/;"	f
emmet#lang#sass#findTokens	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#findTokens(str) abort$/;"	f
emmet#lang#sass#imageSize	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageSize() abort$/;"	f
emmet#lang#sass#moveNextPrev	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag) abort$/;"	f
emmet#lang#sass#moveNextPrevItem	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#sass#parseIntoTree	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#sass#parseTag	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseTag(tag) abort$/;"	f
emmet#lang#sass#removeTag	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#removeTag() abort$/;"	f
emmet#lang#sass#splitJoinTag	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#splitJoinTag() abort$/;"	f
emmet#lang#sass#toString	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#sass#toggleComment	nvim/plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toggleComment() abort$/;"	f
emmet#lang#scss#balanceTag	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range abort$/;"	f
emmet#lang#scss#encodeImage	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#encodeImage() abort$/;"	f
emmet#lang#scss#findTokens	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#findTokens(str) abort$/;"	f
emmet#lang#scss#imageSize	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageSize() abort$/;"	f
emmet#lang#scss#moveNextPrev	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag) abort$/;"	f
emmet#lang#scss#moveNextPrevItem	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#scss#parseIntoTree	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#scss#parseTag	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseTag(tag) abort$/;"	f
emmet#lang#scss#removeTag	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#removeTag() abort$/;"	f
emmet#lang#scss#splitJoinTag	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#splitJoinTag() abort$/;"	f
emmet#lang#scss#toString	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#scss#toggleComment	nvim/plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toggleComment() abort$/;"	f
emmet#lang#slim#balanceTag	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range abort$/;"	f
emmet#lang#slim#encodeImage	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#encodeImage() abort$/;"	f
emmet#lang#slim#findTokens	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#findTokens(str) abort$/;"	f
emmet#lang#slim#imageSize	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageSize() abort$/;"	f
emmet#lang#slim#moveNextPrev	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag) abort$/;"	f
emmet#lang#slim#moveNextPrevItem	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#slim#parseIntoTree	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#slim#parseTag	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseTag(tag) abort$/;"	f
emmet#lang#slim#removeTag	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#removeTag() abort$/;"	f
emmet#lang#slim#splitJoinTag	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#splitJoinTag() abort$/;"	f
emmet#lang#slim#toString	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent) abo/;"	f
emmet#lang#slim#toggleComment	nvim/plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toggleComment() abort$/;"	f
emmet#lang#type	nvim/plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#type(type) abort$/;"	f
emmet#lorem#en#expand	nvim/plugged/emmet-vim/autoload/emmet/lorem/en.vim	/^function! emmet#lorem#en#expand(command) abort$/;"	f
emmet#lorem#ja#expand	nvim/plugged/emmet-vim/autoload/emmet/lorem/ja.vim	/^function! emmet#lorem#ja#expand(command) abort$/;"	f
emmet#mergeConfig	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeConfig(lhs, rhs) abort$/;"	f
emmet#mergeLines	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() range abort$/;"	f
emmet#moveNextPrev	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrev(flag) abort$/;"	f
emmet#moveNextPrevItem	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrevItem(flag) abort$/;"	f
emmet#newNode	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#newNode() abort$/;"	f
emmet#parseIntoTree	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#parseIntoTree(abbr, type) abort$/;"	f
emmet#reExpandDollarExpr	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times) abort$/;"	f
emmet#removeTag	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#removeTag() abort$/;"	f
emmet#splitFilterArg	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitFilterArg(filters) abort$/;"	f
emmet#splitJoinTag	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitJoinTag() abort$/;"	f
emmet#toString	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toString(...) abort$/;"	f
emmet#toggleComment	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toggleComment() abort$/;"	f
emmet#unescapeDollarExpr	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#unescapeDollarExpr(expand) abort$/;"	f
emmet#updateTag	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#updateTag() abort$/;"	f
emmet#useFilter	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#useFilter(filters, filter) abort$/;"	f
emmet#util#cache	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cache(name, ...) abort$/;"	f
emmet#util#closePopup	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#closePopup() abort$/;"	f
emmet#util#cursorInRegion	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cursorInRegion(region) abort$/;"	f
emmet#util#deleteContent	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#deleteContent(region) abort$/;"	f
emmet#util#getContent	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContent(region) abort$/;"	f
emmet#util#getContentFromURL	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContentFromURL(url) abort$/;"	f
emmet#util#getImageSize	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getImageSize(fn) abort$/;"	f
emmet#util#getTextFromHTML	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getTextFromHTML(buf) abort$/;"	f
emmet#util#getVisualBlock	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getVisualBlock() abort$/;"	f
emmet#util#getcurpos	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getcurpos() abort$/;"	f
emmet#util#imageSizeWithImageMagick	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn) abort$/;"	f
emmet#util#isImageMagickInstalled	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#isImageMagickInstalled() abort$/;"	f
emmet#util#pointInRegion	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#pointInRegion(point, region) abort$/;"	f
emmet#util#rand	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#rand() abort$/;"	f
emmet#util#regionInRegion	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionInRegion(outer, inner) abort$/;"	f
emmet#util#regionIsValid	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionIsValid(region) abort$/;"	f
emmet#util#searchRegion	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#searchRegion(start, end) abort$/;"	f
emmet#util#selectRegion	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#selectRegion(region) abort$/;"	f
emmet#util#setContent	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#setContent(region, content) abort$/;"	f
emmet#util#srand	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#srand(seed) abort$/;"	f
emmet#util#unique	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#unique(arr) abort$/;"	f
emmet-vim.zip	nvim/plugged/emmet-vim/Makefile	/^emmet-vim.zip: remove-zip$/;"	t
empty	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			empty: function(a){return !a.firstChild;},$/;"	M
empty	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			empty: function(a){return !a.firstChild;},$/;"	P
empty	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	empty: function() {$/;"	M
enable_logging	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def enable_logging(self, context):$/;"	m	class:DeopleteHandlers
enable_logging	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def enable_logging(self):$/;"	m	class:Deoplete
enable_logging	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def enable_logging(self):$/;"	m	class:_Parent
enabled	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			enabled: function(a){return !a.disabled;},$/;"	M
enabled	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			enabled: function(a){return !a.disabled;},$/;"	P
end	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^:end$/;"	l
end	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							end = ((parts[1] == "-=" ? -1 : 1) * end) + start;$/;"	P
end	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.end = to;$/;"	P
end	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	end: function() {$/;"	M
epub	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^epub:$/;"	t
eq	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			eq: function(a,i,m){return m[3]-0==i;},$/;"	M
eq	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			eq: function(a,i,m){return m[3]-0==i;},$/;"	P
eq	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	eq: function( i ) {$/;"	M
erlangmk_file	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_file(Dir) -> filename:join(Dir, "erlang.mk").$/;"	f
erlangmk_format_erl_libs	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erl_libs(ErlLibsLine) ->$/;"	f
erlangmk_format_erlc_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(ErlcOptsLines, BaseDir) ->$/;"	f
erlangmk_format_erlc_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["+" ++ Option | Rest], Opts, BaseDir) ->$/;"	f
erlangmk_format_erlc_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-D" ++ Opt | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-D", [C | _] = Val0 | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-I" ++ Opt | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-I", [C | _] = Dir | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-W" ++ Warn | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-W", Warn | Rest], Opts, BaseDir) ->$/;"	f
erlangmk_format_erlc_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts([PathFlag, [_ | _] = Dir | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts([], Opts, _) ->$/;"	f
erlangmk_format_erlc_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts([_ | Rest], Opts, BaseDir) ->$/;"	f
erlangmk_format_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_opts(Stdout, BaseDir) ->$/;"	f
erlangmk_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_opts(BaseDir, Profile) ->$/;"	f
erlangmk_port_receive_loop	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_port_receive_loop(Port, Stdout, BaseDir) ->$/;"	f
error	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def error(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
error	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error(vim, expr):$/;"	f
error_tb	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_tb(vim, msg):$/;"	f
error_vim	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_vim(vim, msg):$/;"	f
escape	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def escape(expr):$/;"	f
even	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			even: function(a,i){return i%2==0;},$/;"	M
even	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			even: function(a,i){return i%2==0;},$/;"	P
event	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				event = !data[0] || !data[0].preventDefault;$/;"	P
event	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		event = arguments[0] = jQuery.event.fix( event || window.event );$/;"	P
event	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		event = { originalEvent: originalEvent };$/;"	P
events	nvim/plugged/vimproc.vim/src/fakepoll.h	/^    short events;                   \/* events of interest on fd *\/$/;"	m	struct:pollfd	typeref:typename:short
exception	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def exception(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
exclude	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	exclude = \/z-?index|font-?weight|opacity|zoom|line-?height\/i,$/;"	P
exclude_patterns	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^exclude_patterns = ['_build']$/;"	v
expand	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def expand(path):$/;"	f
expando	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var expando = "jQuery" + now(), uuid = 0, windowData = {},$/;"	V
expr	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			expr = f.t.replace(\/^\\s*,\\s*\/, "" );$/;"	P
extensions	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^extensions = ['sphinx.ext.autodoc']$/;"	v
f	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map f <Plug>(easymotion-f)$/;"	m
f	nvim/plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap f <Plug>(easymotion-f)$/;"	m
f/	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map f\/ <Plug>(easymotion-fn)$/;"	m
fadeIn	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fadeIn: function(speed, callback){$/;"	M
fadeOut	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fadeOut: function(speed, callback){$/;"	M
fadeTo	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fadeTo: function(speed,to,callback){$/;"	M
fallback_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^fallback_opts() ->$/;"	f
fast	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^ 		fast: 200,$/;"	P
fatal	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    fatal = critical$/;"	v	class:LoggingMixin
fd	nvim/plugged/vimproc.vim/src/fakepoll.h	/^    int fd;                         \/* file desc to poll *\/$/;"	m	struct:pollfd	typeref:typename:int
fd_set_nonblock	nvim/plugged/vimproc.vim/src/proc.c	/^fd_set_nonblock(int fd)$/;"	f	typeref:typename:int	file:
file	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			file: function(a){return "file"==a.type;},$/;"	M
file	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			file: function(a){return "file"==a.type;},$/;"	P
filetypedetect	nvim/autoload/plug.vim	/^        augroup filetypedetect$/;"	a
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def filter(self, context):$/;"	m	class:Base
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def filter(self, record):$/;"	m	class:DeopleteLogFilter
filter	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	filter: function( selector ) {$/;"	M
filter	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	filter: function(t,r,not) {$/;"	M
find	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	find: function( selector ) {$/;"	M
find	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	find: function( t, context ) {$/;"	M
first	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					first = (test[1] + (test[2] || 1)) - 0, last = test[3] - 0;$/;"	P
first	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			first: function(a,i){return i==0;},$/;"	M
first	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			first: function(a,i){return i==0;},$/;"	P
fix	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fix: function(event) {$/;"	M
fixed	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					fixed = true;$/;"	P
fixed	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    fixed        = css(elem, "position") == "fixed";$/;"	P
fn	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					fn = eval("false||function(a,i){return " + fn + ";}");$/;"	P
fn	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					fn = fn[ m[2] ];$/;"	P
fn	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			fn = type;$/;"	P
fnmatch	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^def fnmatch(name, pat):$/;"	f
fnmatchcase	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^def fnmatchcase(name, pat):$/;"	f
foo	nvim/plugged/vim-go/autoload/go/test-fixtures/lint/src/foo/foo.go	/^package foo$/;"	p
force_unicode	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/compat.py	/^def force_unicode(string):$/;"	f
forkpty	nvim/plugged/vimproc.vim/src/ptytty.c	/^forkpty(int *amaster, char *name,$/;"	f	typeref:typename:int
form	nvim/plugged/vim-go/test/parse.go	/^	head, form *Node$/;"	m	struct:html.parser
fosterParent	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) fosterParent(n *Node) {$/;"	f	unknown:html.parser
fosterParenting	nvim/plugged/vim-go/test/parse.go	/^	fosterParenting bool$/;"	m	struct:html.parser
foundToken	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					foundToken = true;$/;"	P
foundToken	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				foundToken = true;$/;"	P
fragment	nvim/plugged/vim-go/test/parse.go	/^	fragment bool$/;"	m	struct:html.parser
framesetOK	nvim/plugged/vim-go/test/parse.go	/^	scripting, framesetOK bool$/;"	m	struct:html.parser
friendly_name	nvim/plugged/vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
fs	nvim/plugged/syntastic/syntax_checkers/less/less-lint.js	/^  fs = require('fs');$/;"	P
function,functions	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*[(]function[ \\t]*\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t(]\/\\1\/f,functi/;"	k
function,functions	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*const[ \\t]\\{1,\\}\\([a-z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*(/;"	k
function,functions	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*const[ \\t]\\{1,\\}\\([a-z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*f/;"	k
function,functions	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*function[ \\t]*\\([A-Za-z0-9_$]\\{1,\\}\\)[ \\t(]\/\\1\/f,function,/;"	k
function,functions	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*let[ \\t]\\{1,\\}\\([a-z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*([^/;"	k
function,functions	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*let[ \\t]\\{1,\\}\\([a-z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*fun/;"	k
function,functions	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*var[ \\t]\\{1,\\}\\([a-z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*([^/;"	k
function,functions	ctags/javascript.ctags	/^--regex-javascript=\/^[ \\t]*var[ \\t]\\{1,\\}\\([a-z][A-Za-z0-9_$]\\{1,\\}\\)[ \\t]*=[ \\t]*fun/;"	k
fuzzy_escape	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def fuzzy_escape(string, camelcase):$/;"	f
fx	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	fx: function( elem, options, prop ){$/;"	M
fzf#complete	nvim/plugged/fzf.vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#decls#cmd	nvim/plugged/vim-go/autoload/fzf/decls.vim	/^function! fzf#decls#cmd(...) abort$/;"	f
fzf#vim#_lines	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#_uniq	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...)$/;"	f
fzf#vim#buffer_lines	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#colors	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...)$/;"	f
fzf#vim#complete	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, with_column, ...)$/;"	f
fzf#vim#helptags	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#lines	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#locate	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
fzf#vim#search_history	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf_buffers	nvim/plugged/fzf.vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
g4198	nvim/plugged/vim-go/assets/vim-go.svg	/^       transform="matrix(0.69027452,0,0,0.73815345,642.18876,259.65104)">$/;"	i
g4330	nvim/plugged/vim-go/assets/vim-go.svg	/^       id="g4330">$/;"	i
g4376	nvim/plugged/vim-go/assets/vim-go.svg	/^       style="opacity:1">$/;"	i
g4404	nvim/plugged/vim-go/assets/vim-go.svg	/^       id="g4404">$/;"	i
g4533	nvim/plugged/vim-go/assets/vim-go.svg	/^       transform="matrix(-0.28489616,-0.34500545,-0.42832103,0.44649678,715.99765,474.46827)">$/;"	i
g4533-2	nvim/plugged/vim-go/assets/vim-go.svg	/^       transform="matrix(-0.60102903,0.32221978,0.53870829,0.77401445,526.12645,47.501077)" \/>$/;"	i
g4537	nvim/plugged/vim-go/assets/vim-go.svg	/^       id="g4537">$/;"	i
g4594	nvim/plugged/vim-go/assets/vim-go.svg	/^       transform="matrix(-0.13664232,-0.29657059,-0.88136995,0.09664282,727.56031,790.52022)">$/;"	i
g4634	nvim/plugged/vim-go/assets/vim-go.svg	/^       style="display:inline;opacity:1">$/;"	i
g4640	nvim/plugged/vim-go/assets/vim-go.svg	/^       style="display:inline;opacity:1">$/;"	i
g4818	nvim/plugged/vim-go/assets/vim-go.svg	/^       transform="matrix(-0.65610141,0,0,0.65610141,655.70091,210.42145)">$/;"	i
g4822	nvim/plugged/vim-go/assets/vim-go.svg	/^       id="g4822">$/;"	i
g:	nvim/plugged/emmet-vim/unittest.vim	/^            let g:[opt] = oldoptions[opt]$/;"	v
g:	nvim/plugged/emmet-vim/unittest.vim	/^          let g:[opt] = options[opt]$/;"	v
g:	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:[newname] = g:[key]$/;"	v
g:EasyMotion_add_search_history	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_add_search_history = get(g: , 'EasyMotion_add_search_history' , 1)$/;"	v
g:EasyMotion_command_line_key_mappings	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_command_line_key_mappings =$/;"	v
g:EasyMotion_cursor_highlight	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_cursor_highlight   = get(g: , 'EasyMotion_cursor_highlight'   , 1)$/;"	v
g:EasyMotion_disable_two_key_combo	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_disable_two_key_combo     =$/;"	v
g:EasyMotion_do_mapping	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_mapping         = get(g: , 'EasyMotion_do_mapping'         , 1)$/;"	v
g:EasyMotion_do_shade	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_shade           = get(g: , 'EasyMotion_do_shade'           , 1)$/;"	v
g:EasyMotion_enter_jump_first	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_enter_jump_first   = get(g: , 'EasyMotion_enter_jump_first'   , 0)$/;"	v
g:EasyMotion_force_csapprox	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_force_csapprox     = get(g: , 'EasyMotion_force_csapprox'     , 0)$/;"	v
g:EasyMotion_grouping	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_grouping           = get(g: , 'EasyMotion_grouping'           , 1)$/;"	v
g:EasyMotion_hl2_first_group_target	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_first_group_target  = get(g:,$/;"	v
g:EasyMotion_hl2_second_group_target	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_second_group_target = get(g:,$/;"	v
g:EasyMotion_hl_group_shade	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_shade          = get(g:,$/;"	v
g:EasyMotion_hl_group_target	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_target         = get(g:,$/;"	v
g:EasyMotion_hl_inc_cursor	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_cursor     = get(g:,$/;"	v
g:EasyMotion_hl_inc_search	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_search     = get(g:,$/;"	v
g:EasyMotion_hl_move	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_move           = get(g:,$/;"	v
g:EasyMotion_ignore_exception	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^    let g:EasyMotion_ignore_exception = 0$/;"	v
g:EasyMotion_inc_highlight	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_inc_highlight      = get(g: , 'EasyMotion_inc_highlight'      , 1)$/;"	v
g:EasyMotion_keys	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_keys               = get(g:,$/;"	v
g:EasyMotion_keys	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	nvim/plugged/vim-easymotion/t/operator_pending_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_keys	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_landing_highlight	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_landing_highlight  = get(g: , 'EasyMotion_landing_highlight'  , 0)$/;"	v
g:EasyMotion_loaded	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_loaded = 1$/;"	v
g:EasyMotion_maximal_jumpmarks	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^        let g:EasyMotion_maximal_jumpmarks  = 2 " Error for value 1 unanalyzed. $/;"	v
g:EasyMotion_move_highlight	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_move_highlight     = get(g: , 'EasyMotion_move_highlight'     , 1)$/;"	v
g:EasyMotion_off_screen_search	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_off_screen_search  = get(g: , 'EasyMotion_off_screen_search'  , 1)$/;"	v
g:EasyMotion_off_screen_search	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 0$/;"	v
g:EasyMotion_off_screen_search	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 1$/;"	v
g:EasyMotion_prompt	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_prompt             =$/;"	v
g:EasyMotion_re_anywhere	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^    let g:EasyMotion_re_anywhere = get(g:, 'EasyMotion_re_anywhere', re)$/;"	v
g:EasyMotion_re_line_anywhere	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^    let g:EasyMotion_re_line_anywhere = get(g:, 'EasyMotion_re_line_anywhere', re)$/;"	v
g:EasyMotion_show_prompt	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_show_prompt        = get(g: , 'EasyMotion_show_prompt'        , 1)$/;"	v
g:EasyMotion_skipfoldedline	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_skipfoldedline     = get(g: , 'EasyMotion_skipfoldedline'     , 1)$/;"	v
g:EasyMotion_smartcase	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_smartcase          = get(g: , 'EasyMotion_smartcase'          , 0)$/;"	v
g:EasyMotion_smartcase	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 0$/;"	v
g:EasyMotion_smartcase	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 1$/;"	v
g:EasyMotion_space_jump_first	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_space_jump_first   = get(g: , 'EasyMotion_space_jump_first'   , 0)$/;"	v
g:EasyMotion_startofline	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_startofline        = get(g: , 'EasyMotion_startofline'        , 1)$/;"	v
g:EasyMotion_use_migemo	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^        let g:EasyMotion_use_migemo = 0$/;"	v
g:EasyMotion_use_migemo	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_migemo         = get(g: , 'EasyMotion_use_migemo'         , 0)$/;"	v
g:EasyMotion_use_migemo	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_migemo = 1$/;"	v
g:EasyMotion_use_regexp	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_regexp         = get(g: , 'EasyMotion_use_regexp'         , 1)$/;"	v
g:EasyMotion_use_regexp	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 0$/;"	v
g:EasyMotion_use_regexp	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 1$/;"	v
g:EasyMotion_use_smartsign_jp	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_jp = 1$/;"	v
g:EasyMotion_use_smartsign_us	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 0$/;"	v
g:EasyMotion_use_smartsign_us	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_smartsign_us	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_upper	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_upper          = get(g: , 'EasyMotion_use_upper'          , 0)$/;"	v
g:EasyMotion_verbose	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_verbose            = get(g: , 'EasyMotion_verbose'            , 1)$/;"	v
g:EasyMotion_verbose	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_verbose = 0$/;"	v
g:EasyMotion_verbose	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_verbose = 1$/;"	v
g:EditorConfig_disable_rules	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_disable_rules = []$/;"	v
g:EditorConfig_exclude_patterns	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exclude_patterns = []$/;"	v
g:EditorConfig_exec_path	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exec_path = ''$/;"	v
g:EditorConfig_max_line_indicator	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_max_line_indicator = 'line'$/;"	v
g:EditorConfig_preserve_formatoptions	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_preserve_formatoptions = 0$/;"	v
g:EditorConfig_python_files_dir	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_python_files_dir = 'plugin\/editorconfig-core-py'$/;"	v
g:EditorConfig_verbose	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_verbose = 0$/;"	v
g:NERDTree	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarks	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeBookmarks = []$/;"	v
g:NERDTreeCreator	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	nvim/plugged/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	nvim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeInvalidBookmarks	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeInvalidBookmarks = []$/;"	v
g:NERDTreeKeyMap	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	nvim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMouseMode	nvim/settings/NERDTree.vim	/^let g:NERDTreeMouseMode=3$/;"	v
g:NERDTreeMouseMode	vim/settings/NERDTree.vim	/^let g:NERDTreeMouseMode=3$/;"	v
g:NERDTreeOldSortOrder	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^    let g:NERDTreeOldSortOrder = g:NERDTreeSortOrder$/;"	v
g:NERDTreeOldSortOrder	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^                let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^        let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	nvim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeSortOrder	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeWinSize	nvim/settings/NERDTree.vim	/^let g:NERDTreeWinSize = 30$/;"	v
g:NERDTreeWinSize	vim/settings/NERDTree.vim	/^let g:NERDTreeWinSize = 30$/;"	v
g:SyntasticAutoloclistNotifier	nvim/plugged/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	nvim/plugged/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	nvim/plugged/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	nvim/plugged/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticModeMap	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	nvim/plugged/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:UltiSnipsSnippetDirectories	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^    let g:UltiSnipsSnippetDirectories += ["gosnippets\/UltiSnips"]$/;"	v
g:UltiSnipsSnippetDirectories	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^    let g:UltiSnipsSnippetDirectories = ["gosnippets\/UltiSnips"]$/;"	v
g:_SYNTASTIC_DEBUG_AUTOCOMMANDS	nvim/plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_AUTOCOMMANDS  = 8$/;"	v
g:_SYNTASTIC_DEBUG_CHECKERS	nvim/plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_CHECKERS      = 32$/;"	v
g:_SYNTASTIC_DEBUG_LOCLIST	nvim/plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_LOCLIST       = 2$/;"	v
g:_SYNTASTIC_DEBUG_NOTIFICATIONS	nvim/plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_NOTIFICATIONS = 4$/;"	v
g:_SYNTASTIC_DEBUG_TRACE	nvim/plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_TRACE         = 1$/;"	v
g:_SYNTASTIC_DEBUG_VARIABLES	nvim/plugged/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_VARIABLES     = 16$/;"	v
g:_SYNTASTIC_DEFAULTS	nvim/plugged/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_DEFAULTS = {$/;"	v
g:_SYNTASTIC_SHELL_OPTIONS	nvim/plugged/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_SHELL_OPTIONS = [$/;"	v
g:_SYNTASTIC_START	nvim/plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_START = reltime()$/;"	v
g:_SYNTASTIC_UNAME	nvim/plugged/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	nvim/plugged/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = split(syntastic#util#system('uname'), "\\n")[0]$/;"	v
g:_SYNTASTIC_UNAME	nvim/plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	nvim/plugged/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Windows'$/;"	v
g:_SYNTASTIC_VERSION	nvim/plugged/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_VERSION = '3.9.0-23'$/;"	v
g:__fzf_command	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let g:__fzf_command = "normal ".prefix.item."\\<cr>"$/;"	v
g:_plug_bang	nvim/autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:acp_enableAtStartup	nvim/settings/neocomplete.vim	/^let g:acp_enableAtStartup = 0$/;"	v
g:acp_enableAtStartup	vim/settings/neocomplete.vim	/^let g:acp_enableAtStartup = 0$/;"	v
g:clever_f_use_migemo	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:clever_f_use_migemo = 0$/;"	v
g:colors_name	nvim/colors/thea.vim	/^let g:colors_name='thea'$/;"	v
g:colors_name	nvim/plugged/palenight.vim/colors/palenight.vim	/^let g:colors_name="palenight"$/;"	v
g:colors_name	vim/settings/thea.vim	/^let g:colors_name='thea'$/;"	v
g:ctrlp_ext_vars	nvim/plugged/vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = [s:go_decls_var]$/;"	v
g:ctrlp_ext_vars	nvim/plugged/vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:go_decls_var)$/;"	v
g:current_compiler	nvim/plugged/vim-go/compiler/go.vim	/^let g:current_compiler = "go"$/;"	v
g:deoplete#_context	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^      let g:deoplete#_context.event = 'Refresh'$/;"	v
g:deoplete#_context	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^        let g:deoplete#_context.candidates = []$/;"	v
g:deoplete#_context	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^    let g:deoplete#_context.candidates = []$/;"	v
g:deoplete#_context	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^    let g:deoplete#_context.input = input$/;"	v
g:deoplete#_context	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^  let g:deoplete#_context = {}$/;"	v
g:deoplete#_context	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let g:deoplete#_context = {}$/;"	v
g:deoplete#_initialized	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let g:deoplete#_initialized = v:false$/;"	v
g:deoplete#_logging	nvim/plugged/deoplete.nvim/autoload/deoplete.vim	/^  let g:deoplete#_logging = {'level': a:level, 'logfile': a:logfile}$/;"	v
g:deoplete#_logging	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^    let g:deoplete#_logging = {}$/;"	v
g:deoplete#_prev_completion	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let g:deoplete#_prev_completion = {$/;"	v
g:deoplete#_saved_completeopt	nvim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^  let g:deoplete#_saved_completeopt = &completeopt$/;"	v
g:deoplete#_serveraddr	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^      let g:deoplete#_serveraddr = $NVIM_LISTEN_ADDRESS$/;"	v
g:deoplete#_serveraddr	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^    let g:deoplete#_serveraddr =$/;"	v
g:deoplete#_yarp	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^  let g:deoplete#_yarp.job_is_dead = 1$/;"	v
g:deoplete#_yarp	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^      let g:deoplete#_yarp = yarp#py3('deoplete')$/;"	v
g:deoplete#disable_auto_complete	nvim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^  let g:deoplete#disable_auto_complete = 1$/;"	v
g:deoplete#enable_at_startup	nvim/settings/deoplete.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_at_startup	vim/settings/deoplete.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#keyword_patterns	nvim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^  let g:deoplete#keyword_patterns = {}$/;"	v
g:deoplete#keyword_patterns	nvim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^  let g:deoplete#keyword_patterns.tex = '[^\\w|\\s][a-zA-Z_]\\w*'$/;"	v
g:emmet_curl_command	nvim/plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	nvim/plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:emmet_docroot	nvim/plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_docroot = {}$/;"	v
g:emmet_html5	nvim/plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_html5 = 1$/;"	v
g:fzf#vim#buffers	nvim/plugged/fzf.vim/plugin/fzf.vim	/^  let g:fzf#vim#buffers = {}$/;"	v
g:gitgutter_async	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^    let g:gitgutter_async = async$/;"	v
g:gitgutter_enabled	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 0$/;"	v
g:gitgutter_enabled	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 1$/;"	v
g:gitgutter_grep	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^      let g:gitgutter_grep .= ' --color=never'$/;"	v
g:gitgutter_grep	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^    let g:gitgutter_grep = ''$/;"	v
g:gitgutter_highlight_lines	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_lines = 0$/;"	v
g:gitgutter_highlight_lines	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_lines = 1$/;"	v
g:gitgutter_hook_context	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^    let g:gitgutter_hook_context = {'bufnr': a:bufnr}$/;"	v
g:gitgutter_sign_column_always	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_column_always = 0$/;"	v
g:gitgutter_signs	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^  let g:gitgutter_signs = 0$/;"	v
g:gitgutter_signs	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^  let g:gitgutter_signs = 1$/;"	v
g:go_asmfmt_autosave	nvim/plugged/vim-go/autoload/go/config.vim	/^  let g:go_asmfmt_autosave = a:value$/;"	v
g:go_auto_sameids	nvim/plugged/vim-go/autoload/go/config.vim	/^  let g:go_auto_sameids = a:value$/;"	v
g:go_auto_type_info	nvim/plugged/vim-go/autoload/go/config.vim	/^  let g:go_auto_type_info = a:value$/;"	v
g:go_autodetect_gopath	nvim/plugged/vim-go/test/gopath_test.vim	/^    let g:go_autodetect_gopath = 0$/;"	v
g:go_autodetect_gopath	nvim/plugged/vim-go/test/gopath_test.vim	/^    let g:go_autodetect_gopath = 1$/;"	v
g:go_build_tags	nvim/plugged/vim-go/autoload/go/config.vim	/^  let g:go_build_tags = a:value$/;"	v
g:go_debug_commands	nvim/plugged/vim-go/autoload/go/config.vim	/^  let g:go_debug_commands = get(g:, 'go_debug_commands', [])$/;"	v
g:go_debug_commands	nvim/plugged/vim-go/autoload/go/debug.vim	/^      let g:go_debug_commands = add(go#config#DebugCommands(), {$/;"	v
g:go_debug_diag	nvim/plugged/vim-go/autoload/go/config.vim	/^  let g:go_debug_diag = a:value$/;"	v
g:go_echo_command_info	nvim/plugged/vim-go/scripts/runtest.vim	/^let g:go_echo_command_info = 0$/;"	v
g:go_fmt_autosave	nvim/plugged/vim-go/autoload/go/config.vim	/^  let g:go_fmt_autosave = a:value$/;"	v
g:go_gotags_bin	nvim/plugged/vim-go/ftplugin/go/tagbar.vim	/^  let g:go_gotags_bin = "gotags"$/;"	v
g:go_guru_scope	nvim/plugged/vim-go/autoload/go/config.vim	/^    let g:go_guru_scope = a:scope$/;"	v
g:go_highlight_build_constraints	vim/settings/vim-go.vim	/^let g:go_highlight_build_constraints = 1$/;"	v
g:go_highlight_functions	vim/settings/vim-go.vim	/^let g:go_highlight_functions = 1$/;"	v
g:go_highlight_interfaces	vim/settings/vim-go.vim	/^let g:go_highlight_interfaces = 1$/;"	v
g:go_highlight_methods	vim/settings/vim-go.vim	/^let g:go_highlight_methods = 1$/;"	v
g:go_highlight_operators	vim/settings/vim-go.vim	/^let g:go_highlight_operators = 1$/;"	v
g:go_highlight_structs	vim/settings/vim-go.vim	/^let g:go_highlight_structs = 1$/;"	v
g:go_info_mode	nvim/plugged/vim-go/autoload/go/complete_test.vim	/^    let g:go_info_mode = 'gocode'$/;"	v
g:go_info_mode	nvim/plugged/vim-go/autoload/go/complete_test.vim	/^    let g:go_info_mode = 'guru'$/;"	v
g:go_jump_to_error	nvim/plugged/vim-go/ftplugin/go/mappings.vim	/^  let g:go_jump_to_error = 1$/;"	v
g:go_loaded_gosnippets	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^let g:go_loaded_gosnippets = 1$/;"	v
g:go_loaded_install	nvim/plugged/vim-go/plugin/go.vim	/^let g:go_loaded_install = 1$/;"	v
g:go_metalinter_autosave	nvim/plugged/vim-go/autoload/go/config.vim	/^  let g:go_metalinter_autosave = a:value$/;"	v
g:go_metalinter_autosave_enabled	nvim/plugged/vim-go/autoload/go/lint_test.vim	/^  let g:go_metalinter_autosave_enabled = ['golint']$/;"	v
g:go_metalinter_disabled	nvim/plugged/vim-go/autoload/go/lint_test.vim	/^  let g:go_metalinter_disabled = ['vet']$/;"	v
g:go_metalinter_enabled	nvim/plugged/vim-go/autoload/go/lint_test.vim	/^  let g:go_metalinter_enabled = ['golint']$/;"	v
g:go_mod_fmt_autosave	nvim/plugged/vim-go/autoload/go/config.vim	/^  let g:go_mod_fmt_autosave = a:value$/;"	v
g:go_template_autocreate	nvim/plugged/vim-go/autoload/go/config.vim	/^  let g:go_template_autocreate = a:value$/;"	v
g:go_term_enabled	nvim/plugged/vim-go/autoload/go/config.vim	/^  let g:go_term_enabled = a:value$/;"	v
g:go_test_show_name	nvim/plugged/vim-go/autoload/go/test_test.vim	/^  let g:go_test_show_name=1$/;"	v
g:go_test_timeout	nvim/plugged/vim-go/autoload/go/test_test.vim	/^  let g:go_test_timeout="500ms"$/;"	v
g:goyo_height	nvim/settings/goyo.vim	/^let g:goyo_height = "100%"$/;"	v
g:goyo_height	vim/settings/goyo.vim	/^let g:goyo_height = "100%"$/;"	v
g:goyo_linenr	nvim/settings/goyo.vim	/^let g:goyo_linenr = 1$/;"	v
g:goyo_linenr	vim/settings/goyo.vim	/^let g:goyo_linenr = 1$/;"	v
g:goyo_width	nvim/settings/goyo.vim	/^let g:goyo_width = 120$/;"	v
g:goyo_width	vim/settings/goyo.vim	/^let g:goyo_width = 120$/;"	v
g:gutentags_add_default_project_roots	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	nvim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	nvim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_executable	nvim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:gutentags_enabled = 0$/;"	v
g:gutentags_enabled	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_filetypes	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_filetypes = get(g:, 'gutentags_exclude_filetypes', [])$/;"	v
g:gutentags_exclude_project_root	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'/;"	v
g:gutentags_fake	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_fake = a:1$/;"	v
g:gutentags_fake	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_fake = !g:gutentags_fake$/;"	v
g:gutentags_fake	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	nvim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	nvim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	nvim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	nvim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslc/;"	v
g:gutentags_project_root	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	nvim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^            let g:gutentags_trace = l:prev_trace$/;"	v
g:gutentags_trace	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = 1$/;"	v
g:gutentags_trace	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = a:1$/;"	v
g:gutentags_trace	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = l:trace_backup$/;"	v
g:gutentags_trace	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_trace = !g:gutentags_trace$/;"	v
g:gutentags_trace	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:hoge	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^		  let g:hoge = current$/;"	v
g:indentLine_bufNameExclude	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_bufNameExclude = get(g:, 'indentLine_bufNameExclude', [])$/;"	v
g:indentLine_bufTypeExclude	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_bufTypeExclude = get(g:, 'indentLine_bufTypeExclude', [])$/;"	v
g:indentLine_char	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_char = get(g:, 'indentLine_char', (&encoding ==# "utf-8" && &term isnot# "linux/;"	v
g:indentLine_defaultGroup	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_defaultGroup = get(g:, 'indentLine_defaultGroup', "")$/;"	v
g:indentLine_enabled	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_enabled = get(g:, 'indentLine_enabled', 1)$/;"	v
g:indentLine_faster	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_faster = get(g:, 'indentLine_faster', 0)$/;"	v
g:indentLine_fileType	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_fileType = get(g:, 'indentLine_fileType', [])$/;"	v
g:indentLine_fileTypeExclude	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_fileTypeExclude = get(g:, 'indentLine_fileTypeExclude', [])$/;"	v
g:indentLine_first_char	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_first_char = get(g:, 'indentLine_first_char', (&encoding ==# "utf-8" && &term i/;"	v
g:indentLine_indentLevel	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_indentLevel = get(g:, 'indentLine_indentLevel', 20)$/;"	v
g:indentLine_leadingSpaceChar	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceChar = get(g:, 'indentLine_leadingSpaceChar', (&encoding ==# "utf-8/;"	v
g:indentLine_leadingSpaceEnabled	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceEnabled = get(g:, 'indentLine_leadingSpaceEnabled', 0)$/;"	v
g:indentLine_loaded	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_loaded = 1$/;"	v
g:indentLine_maxLines	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_maxLines = get(g:, 'indentLine_maxLines', 3000)$/;"	v
g:indentLine_mysyntaxfile	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_mysyntaxfile = fnamemodify(expand("<sfile>"), ":p:h:h")."\/syntax\/indentLine.v/;"	v
g:indentLine_newVersion	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_newVersion = get(g:,'indentLine_newVersion',v:version > 704 || v:version == 704/;"	v
g:indentLine_setColors	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_setColors = get(g:, 'indentLine_setColors', 1)$/;"	v
g:indentLine_setConceal	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_setConceal = get(g:, 'indentLine_setConceal', 1)$/;"	v
g:indentLine_showFirstIndentLevel	nvim/plugged/indentline/after/plugin/indentLine.vim	/^let g:indentLine_showFirstIndentLevel = get(g:, 'indentLine_showFirstIndentLevel', 0)$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/concatenate.vim	/^  let g:lightline = { 'subseparator': { 'left': '>', 'right': '<' } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': /;"	v
g:lightline	nvim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom', 'modified': 'Modified' } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'NotFound' } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'NotFound' }, 'component_type': { 'custom'/;"	v
g:lightline	nvim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'g:lightline.Custom' } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = {}$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = { 'component_type': { 'error': 'error', 'warning': 'warning' } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = {$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = {}$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/link.vim	/^  let g:lightline = { 'component_type': { 'error': 'error', 'warning': 'warning' } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/link.vim	/^  let g:lightline = {$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/link.vim	/^  let g:lightline = {}$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/mode.vim	/^  let g:lightline = { 'mode_map': { 'n': 'N' } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/mode.vim	/^  let g:lightline = {}$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component': { 'custom': 'custom' }/;"	v
g:lightline	nvim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component_function': { 'custom': '/;"	v
g:lightline	nvim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom', 'filename' ], 'inactive': [ 'custom', 'cust/;"	v
g:lightline	nvim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'custom' ], 'inactive': [ 'tabnum', 'custom/;"	v
g:lightline	nvim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'custom', 'filename' ], 'inactive': [ 'tabn/;"	v
g:lightline	nvim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'filename' ], 'inactive': [ 'filename' ] } /;"	v
g:lightline	nvim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = {}$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component': { 'custom1': 'custom1', 'custom2': 'custom2', 'custom3': 'cus/;"	v
g:lightline	nvim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1' }, 'component_function': { 'cus/;"	v
g:lightline	nvim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'compo/;"	v
g:lightline	nvim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3/;"	v
g:lightline	nvim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1' } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'com/;"	v
g:lightline	nvim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custo/;"	v
g:lightline	nvim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom2': 'Custom2' } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = { 'enable': { 'tabline': 0 } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = { 'enable': { 'tabline': 1 } }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = {}$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/tabs.vim	/^  let g:lightline = { 'winwidth': 180 }$/;"	v
g:lightline	nvim/plugged/lightline.vim/test/toggle.vim	/^  let g:lightline = {}$/;"	v
g:lightline	nvim/settings/lightline.vim	/^let g:lightline = {$/;"	v
g:lightline	vim/settings/lightline.vim	/^let g:lightline = {$/;"	v
g:lightline	vim/settings/vim-colorschemes.vim	/^let g:lightline.colorscheme = 'palenight'$/;"	v
g:lightline#colorscheme#16color#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let g:lightline#colorscheme#16color#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#OldHope#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let g:lightline#colorscheme#OldHope#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#PaperColor#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_dark#palet/;"	v
g:lightline#colorscheme#PaperColor#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_light#pale/;"	v
g:lightline#colorscheme#PaperColor_dark#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let g:lightline#colorscheme#PaperColor_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#PaperColor_light#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let g:lightline#colorscheme#PaperColor_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let g:lightline#colorscheme#Tomorrow#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let g:lightline#colorscheme#Tomorrow_Night#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Blue#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Blue#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Bright#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Bright#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Eighties#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Eighties#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#darcula#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let g:lightline#colorscheme#darcula#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#default#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/default.vim	/^let g:lightline#colorscheme#default#palette = g:lightline#colorscheme#powerline#palette$/;"	v
g:lightline#colorscheme#deus#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let g:lightline#colorscheme#deus#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#jellybeans#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let g:lightline#colorscheme#jellybeans#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#landscape#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let g:lightline#colorscheme#landscape#palette = s:p$/;"	v
g:lightline#colorscheme#materia#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let g:lightline#colorscheme#materia#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#material#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let g:lightline#colorscheme#material#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#molokai#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let g:lightline#colorscheme#molokai#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#nord#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let g:lightline#colorscheme#nord#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#one#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let g:lightline#colorscheme#one#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#palenight#palette	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let g:lightline#colorscheme#palenight#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#powerline#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let g:lightline#colorscheme#powerline#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#seoul256#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let g:lightline#colorscheme#seoul256#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#solarized#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let g:lightline#colorscheme#solarized#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#srcery_drk#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let g:lightline#colorscheme#srcery_drk#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#wombat#palette	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let g:lightline#colorscheme#wombat#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:loaded_EditorConfig	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let g:loaded_EditorConfig = 1$/;"	v
g:loaded_deoplete	nvim/plugged/deoplete.nvim/plugin/deoplete.vim	/^let g:loaded_deoplete = 1$/;"	v
g:loaded_emmet_vim	nvim/plugged/emmet-vim/plugin/emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_gitgutter	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_gutentags	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_lightline	nvim/plugged/lightline.vim/plugin/lightline.vim	/^let g:loaded_lightline = 1$/;"	v
g:loaded_localvimrc	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let g:loaded_localvimrc = 1$/;"	v
g:loaded_move	nvim/plugged/vim-move/plugin/move.vim	/^let g:loaded_move = 1$/;"	v
g:loaded_nerdtree_autoload	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	nvim/plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_pencil	nvim/plugged/vim-pencil/plugin/pencil.vim	/^let g:loaded_pencil = 1$/;"	v
g:loaded_plug	nvim/autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_syntastic_actionscript_mxmlc_checker	nvim/plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let g:loaded_syntastic_actionscript_mxmlc_checker = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	nvim/plugged/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_ansible_ansible_lint_checker	nvim/plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let g:loaded_syntastic_ansible_ansible_lint_checker = 1$/;"	v
g:loaded_syntastic_apiblueprint_drafter_checker	nvim/plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let g:loaded_syntastic_apiblueprint_drafter_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	nvim/plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	nvim/plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_proselint_checker	nvim/plugged/syntastic/syntax_checkers/asciidoc/proselint.vim	/^let g:loaded_syntastic_asciidoc_proselint_checker = 1$/;"	v
g:loaded_syntastic_asl_iasl_checker	nvim/plugged/syntastic/syntax_checkers/asl/iasl.vim	/^let g:loaded_syntastic_asl_iasl_checker = 1$/;"	v
g:loaded_syntastic_asm_gcc_checker	nvim/plugged/syntastic/syntax_checkers/asm/gcc.vim	/^let g:loaded_syntastic_asm_gcc_checker = 1$/;"	v
g:loaded_syntastic_bemhtml_bemhtmllint_checker	nvim/plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let g:loaded_syntastic_bemhtml_bemhtmllint_checker = 1$/;"	v
g:loaded_syntastic_bro_bro_checker	nvim/plugged/syntastic/syntax_checkers/bro/bro.vim	/^let g:loaded_syntastic_bro_bro_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_avrgcc_checker	nvim/plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^let g:loaded_syntastic_c_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	nvim/plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_clang_check_checker	nvim/plugged/syntastic/syntax_checkers/c/clang_check.vim	/^let g:loaded_syntastic_c_clang_check_checker = 1$/;"	v
g:loaded_syntastic_c_clang_tidy_checker	nvim/plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^let g:loaded_syntastic_c_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_c_cppcheck_checker	nvim/plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^let g:loaded_syntastic_c_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_c_cppclean_checker	nvim/plugged/syntastic/syntax_checkers/c/cppclean.vim	/^let g:loaded_syntastic_c_cppclean_checker = 1$/;"	v
g:loaded_syntastic_c_flawfinder_checker	nvim/plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^let g:loaded_syntastic_c_flawfinder_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	nvim/plugged/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	nvim/plugged/syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	nvim/plugged/syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_pc_lint_checker	nvim/plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^let g:loaded_syntastic_c_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	nvim/plugged/syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	nvim/plugged/syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_cabal_cabal_checker	nvim/plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^let g:loaded_syntastic_cabal_cabal_checker = 1$/;"	v
g:loaded_syntastic_checker	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_chef_foodcritic_checker	nvim/plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^let g:loaded_syntastic_chef_foodcritic_checker = 1$/;"	v
g:loaded_syntastic_cmake_cmakelint_checker	nvim/plugged/syntastic/syntax_checkers/cmake/cmakelint.vim	/^let g:loaded_syntastic_cmake_cmakelint_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	nvim/plugged/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker = 1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	nvim/plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	nvim/plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_jshint_checker	nvim/plugged/syntastic/syntax_checkers/coffee/coffee_jshint.vim	/^let g:loaded_syntastic_coffee_coffee_jshint_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	nvim/plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker = 1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	nvim/plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker = 1$/;"	v
g:loaded_syntastic_cpp_avrgcc_checker	nvim/plugged/syntastic/syntax_checkers/cpp/avrgcc.vim	/^let g:loaded_syntastic_cpp_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_check_checker	nvim/plugged/syntastic/syntax_checkers/cpp/clang_check.vim	/^let g:loaded_syntastic_cpp_clang_check_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_tidy_checker	nvim/plugged/syntastic/syntax_checkers/cpp/clang_tidy.vim	/^let g:loaded_syntastic_cpp_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppcheck_checker	nvim/plugged/syntastic/syntax_checkers/cpp/cppcheck.vim	/^let g:loaded_syntastic_cpp_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppclean_checker	nvim/plugged/syntastic/syntax_checkers/cpp/cppclean.vim	/^let g:loaded_syntastic_cpp_cppclean_checker = 1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	nvim/plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_flawfinder_checker	nvim/plugged/syntastic/syntax_checkers/cpp/flawfinder.vim	/^let g:loaded_syntastic_cpp_flawfinder_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	nvim/plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	nvim/plugged/syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_pc_lint_checker	nvim/plugged/syntastic/syntax_checkers/cpp/pc_lint.vim	/^let g:loaded_syntastic_cpp_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_cpp_verapp_checker	nvim/plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^let g:loaded_syntastic_cpp_verapp_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	nvim/plugged/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker = 1$/;"	v
g:loaded_syntastic_css_csslint_checker	nvim/plugged/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker = 1$/;"	v
g:loaded_syntastic_css_mixedindentlint_checker	nvim/plugged/syntastic/syntax_checkers/css/mixedindentlint.vim	/^let g:loaded_syntastic_css_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_css_phpcs_checker	nvim/plugged/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker = 1$/;"	v
g:loaded_syntastic_css_prettycss_checker	nvim/plugged/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker = 1$/;"	v
g:loaded_syntastic_css_recess_checker	nvim/plugged/syntastic/syntax_checkers/css/recess.vim	/^let g:loaded_syntastic_css_recess_checker = 1$/;"	v
g:loaded_syntastic_css_stylelint_checker	nvim/plugged/syntastic/syntax_checkers/css/stylelint.vim	/^let g:loaded_syntastic_css_stylelint_checker = 1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	nvim/plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker = 1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	nvim/plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker = 1$/;"	v
g:loaded_syntastic_d_dmd_checker	nvim/plugged/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_d_dscanner_checker	nvim/plugged/syntastic/syntax_checkers/d/dscanner.vim	/^let g:loaded_syntastic_d_dscanner_checker = 1$/;"	v
g:loaded_syntastic_dart_dartanalyzer_checker	nvim/plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let g:loaded_syntastic_dart_dartanalyzer_checker = 1$/;"	v
g:loaded_syntastic_docbk_igor_checker	nvim/plugged/syntastic/syntax_checkers/docbk/igor.vim	/^let g:loaded_syntastic_docbk_igor_checker = 1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	nvim/plugged/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker = 1$/;"	v
g:loaded_syntastic_dockerfile_dockerfile_lint_checker	nvim/plugged/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^let g:loaded_syntastic_dockerfile_dockerfile_lint_checker = 1$/;"	v
g:loaded_syntastic_dockerfile_hadolint_checker	nvim/plugged/syntastic/syntax_checkers/dockerfile/hadolint.vim	/^let g:loaded_syntastic_dockerfile_hadolint_checker = 1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	nvim/plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	nvim/plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker = 1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	nvim/plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let g:loaded_syntastic_erlang_erlang_checker = 1$/;"	v
g:loaded_syntastic_erlang_syntaxerl_checker	nvim/plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let g:loaded_syntastic_erlang_syntaxerl_checker = 1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	nvim/plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker = 1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	nvim/plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker = 1$/;"	v
g:loaded_syntastic_glsl_cgc_checker	nvim/plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let g:loaded_syntastic_glsl_cgc_checker = 1$/;"	v
g:loaded_syntastic_go_go_checker	nvim/plugged/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker = 1$/;"	v
g:loaded_syntastic_go_gofmt_checker	nvim/plugged/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker = 1$/;"	v
g:loaded_syntastic_go_golangci_lint_checker	nvim/plugged/syntastic/syntax_checkers/go/golangci_lint.vim	/^let g:loaded_syntastic_go_golangci_lint_checker = 1$/;"	v
g:loaded_syntastic_go_golint_checker	nvim/plugged/syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker = 1$/;"	v
g:loaded_syntastic_go_gometalinter_checker	nvim/plugged/syntastic/syntax_checkers/go/gometalinter.vim	/^let g:loaded_syntastic_go_gometalinter_checker = 1$/;"	v
g:loaded_syntastic_go_gotype_checker	nvim/plugged/syntastic/syntax_checkers/go/gotype.vim	/^let g:loaded_syntastic_go_gotype_checker = 1$/;"	v
g:loaded_syntastic_go_govet_checker	nvim/plugged/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_checker	nvim/plugged/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_lint_checker	nvim/plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^let g:loaded_syntastic_haml_haml_lint_checker = 1$/;"	v
g:loaded_syntastic_handlebars_handlebars_checker	nvim/plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let g:loaded_syntastic_handlebars_handlebars_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	nvim/plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker = 1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	nvim/plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haskell_scan_checker	nvim/plugged/syntastic/syntax_checkers/haskell/scan.vim	/^let g:loaded_syntastic_haskell_scan_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	nvim/plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker = 1$/;"	v
g:loaded_syntastic_help_proselint_checker	nvim/plugged/syntastic/syntax_checkers/help/proselint.vim	/^let g:loaded_syntastic_help_proselint_checker = 1$/;"	v
g:loaded_syntastic_hss_hss_checker	nvim/plugged/syntastic/syntax_checkers/hss/hss.vim	/^let g:loaded_syntastic_hss_hss_checker = 1$/;"	v
g:loaded_syntastic_html_eslint_checker	nvim/plugged/syntastic/syntax_checkers/html/eslint.vim	/^let g:loaded_syntastic_html_eslint_checker = 1$/;"	v
g:loaded_syntastic_html_gjslint_checker	nvim/plugged/syntastic/syntax_checkers/html/gjslint.vim	/^let g:loaded_syntastic_html_gjslint_checker = 1$/;"	v
g:loaded_syntastic_html_htmlhint_checker	nvim/plugged/syntastic/syntax_checkers/html/htmlhint.vim	/^let g:loaded_syntastic_html_htmlhint_checker = 1$/;"	v
g:loaded_syntastic_html_jshint_checker	nvim/plugged/syntastic/syntax_checkers/html/jshint.vim	/^let g:loaded_syntastic_html_jshint_checker = 1$/;"	v
g:loaded_syntastic_html_proselint_checker	nvim/plugged/syntastic/syntax_checkers/html/proselint.vim	/^let g:loaded_syntastic_html_proselint_checker = 1$/;"	v
g:loaded_syntastic_html_stylelint_checker	nvim/plugged/syntastic/syntax_checkers/html/stylelint.vim	/^let g:loaded_syntastic_html_stylelint_checker = 1$/;"	v
g:loaded_syntastic_html_textlint_checker	nvim/plugged/syntastic/syntax_checkers/html/textlint.vim	/^let g:loaded_syntastic_html_textlint_checker = 1$/;"	v
g:loaded_syntastic_html_tidy_checker	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	nvim/plugged/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	nvim/plugged/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_jade_jade_lint_checker	nvim/plugged/syntastic/syntax_checkers/jade/jade_lint.vim	/^let g:loaded_syntastic_jade_jade_lint_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	nvim/plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker = 1$/;"	v
g:loaded_syntastic_java_javac_checker	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker = 1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	nvim/plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker = 1$/;"	v
g:loaded_syntastic_javascript_eslint_checker	nvim/plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^let g:loaded_syntastic_javascript_eslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_flow_checker	nvim/plugged/syntastic/syntax_checkers/javascript/flow.vim	/^let g:loaded_syntastic_javascript_flow_checker = 1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	nvim/plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jscs_checker	nvim/plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^let g:loaded_syntastic_javascript_jscs_checker = 1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	nvim/plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	nvim/plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker = 1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	nvim/plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsxhint_checker	nvim/plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let g:loaded_syntastic_javascript_jsxhint_checker = 1$/;"	v
g:loaded_syntastic_javascript_lynt_checker	nvim/plugged/syntastic/syntax_checkers/javascript/lynt.vim	/^let g:loaded_syntastic_javascript_lynt_checker = 1$/;"	v
g:loaded_syntastic_javascript_mixedindentlint_checker	nvim/plugged/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^let g:loaded_syntastic_javascript_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_javascript_standard_checker	nvim/plugged/syntastic/syntax_checkers/javascript/standard.vim	/^let g:loaded_syntastic_javascript_standard_checker = 1$/;"	v
g:loaded_syntastic_javascript_tern_lint_checker	nvim/plugged/syntastic/syntax_checkers/javascript/tern_lint.vim	/^let g:loaded_syntastic_javascript_tern_lint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	nvim/plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonval_checker	nvim/plugged/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker = 1$/;"	v
g:loaded_syntastic_julia_lint_checker	nvim/plugged/syntastic/syntax_checkers/julia/lint.vim	/^let g:loaded_syntastic_julia_lint_checker = 1$/;"	v
g:loaded_syntastic_less_lessc_checker	nvim/plugged/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker = 1$/;"	v
g:loaded_syntastic_less_recess_checker	nvim/plugged/syntastic/syntax_checkers/less/recess.vim	/^let g:loaded_syntastic_less_recess_checker = 1$/;"	v
g:loaded_syntastic_less_stylelint_checker	nvim/plugged/syntastic/syntax_checkers/less/stylelint.vim	/^let g:loaded_syntastic_less_stylelint_checker = 1$/;"	v
g:loaded_syntastic_lex_flex_checker	nvim/plugged/syntastic/syntax_checkers/lex/flex.vim	/^let g:loaded_syntastic_lex_flex_checker = 1$/;"	v
g:loaded_syntastic_limbo_limbo_checker	nvim/plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^let g:loaded_syntastic_limbo_limbo_checker = 1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	nvim/plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker = 1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	nvim/plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker = 1$/;"	v
g:loaded_syntastic_loclist	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_log_autoload	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^let g:loaded_syntastic_log_autoload = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	nvim/plugged/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker = 1$/;"	v
g:loaded_syntastic_lua_luacheck_checker	nvim/plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^let g:loaded_syntastic_lua_luacheck_checker = 1$/;"	v
g:loaded_syntastic_markdown_mdl_checker	nvim/plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^let g:loaded_syntastic_markdown_mdl_checker = 1$/;"	v
g:loaded_syntastic_markdown_proselint_checker	nvim/plugged/syntastic/syntax_checkers/markdown/proselint.vim	/^let g:loaded_syntastic_markdown_proselint_checker = 1$/;"	v
g:loaded_syntastic_markdown_remark_lint_checker	nvim/plugged/syntastic/syntax_checkers/markdown/remark_lint.vim	/^let g:loaded_syntastic_markdown_remark_lint_checker = 1$/;"	v
g:loaded_syntastic_markdown_textlint_checker	nvim/plugged/syntastic/syntax_checkers/markdown/textlint.vim	/^let g:loaded_syntastic_markdown_textlint_checker = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	nvim/plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker = 1$/;"	v
g:loaded_syntastic_mercury_mmc_checker	nvim/plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^let g:loaded_syntastic_mercury_mmc_checker = 1$/;"	v
g:loaded_syntastic_modemap	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	nvim/plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker = 1$/;"	v
g:loaded_syntastic_nix_nix_checker	nvim/plugged/syntastic/syntax_checkers/nix/nix.vim	/^let g:loaded_syntastic_nix_nix_checker = 1$/;"	v
g:loaded_syntastic_notifier_autoloclist	nvim/plugged/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	nvim/plugged/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	nvim/plugged/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	nvim/plugged/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	nvim/plugged/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_igor_checker	nvim/plugged/syntastic/syntax_checkers/nroff/igor.vim	/^let g:loaded_syntastic_nroff_igor_checker = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	nvim/plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker = 1$/;"	v
g:loaded_syntastic_nroff_proselint_checker	nvim/plugged/syntastic/syntax_checkers/nroff/proselint.vim	/^let g:loaded_syntastic_nroff_proselint_checker = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	nvim/plugged/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	nvim/plugged/syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	nvim/plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	nvim/plugged/syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker = 1$/;"	v
g:loaded_syntastic_perl6_perl6_checker	nvim/plugged/syntastic/syntax_checkers/perl6/perl6.vim	/^let g:loaded_syntastic_perl6_perl6_checker = 1$/;"	v
g:loaded_syntastic_perl_perl_checker	nvim/plugged/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker = 1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	nvim/plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker = 1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	nvim/plugged/syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker = 1$/;"	v
g:loaded_syntastic_php_php_checker	nvim/plugged/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker = 1$/;"	v
g:loaded_syntastic_php_phpcs_checker	nvim/plugged/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker = 1$/;"	v
g:loaded_syntastic_php_phplint_checker	nvim/plugged/syntastic/syntax_checkers/php/phplint.vim	/^let g:loaded_syntastic_php_phplint_checker = 1$/;"	v
g:loaded_syntastic_php_phpmd_checker	nvim/plugged/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker = 1$/;"	v
g:loaded_syntastic_php_phpstan_checker	nvim/plugged/syntastic/syntax_checkers/php/phpstan.vim	/^let g:loaded_syntastic_php_phpstan_checker = 1$/;"	v
g:loaded_syntastic_plugin	nvim/plugged/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_po_dennis_checker	nvim/plugged/syntastic/syntax_checkers/po/dennis.vim	/^let g:loaded_syntastic_po_dennis_checker = 1$/;"	v
g:loaded_syntastic_po_msgfmt_checker	nvim/plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^let g:loaded_syntastic_po_msgfmt_checker = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	nvim/plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker = 1$/;"	v
g:loaded_syntastic_pod_proselint_checker	nvim/plugged/syntastic/syntax_checkers/pod/proselint.vim	/^let g:loaded_syntastic_pod_proselint_checker = 1$/;"	v
g:loaded_syntastic_postprocess_autoload	nvim/plugged/syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_preprocess_autoload	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^let g:loaded_syntastic_preprocess_autoload = 1$/;"	v
g:loaded_syntastic_pug_pug_lint_checker	nvim/plugged/syntastic/syntax_checkers/pug/pug_lint.vim	/^let g:loaded_syntastic_pug_pug_lint_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	nvim/plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	nvim/plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker = 1$/;"	v
g:loaded_syntastic_python_bandit_checker	nvim/plugged/syntastic/syntax_checkers/python/bandit.vim	/^let g:loaded_syntastic_python_bandit_checker = 1$/;"	v
g:loaded_syntastic_python_flake8_checker	nvim/plugged/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker = 1$/;"	v
g:loaded_syntastic_python_frosted_checker	nvim/plugged/syntastic/syntax_checkers/python/frosted.vim	/^let g:loaded_syntastic_python_frosted_checker = 1$/;"	v
g:loaded_syntastic_python_mypy_checker	nvim/plugged/syntastic/syntax_checkers/python/mypy.vim	/^let g:loaded_syntastic_python_mypy_checker = 1$/;"	v
g:loaded_syntastic_python_pep257_checker	nvim/plugged/syntastic/syntax_checkers/python/pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	nvim/plugged/syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker = 1$/;"	v
g:loaded_syntastic_python_prospector_checker	nvim/plugged/syntastic/syntax_checkers/python/prospector.vim	/^let g:loaded_syntastic_python_prospector_checker = 1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	nvim/plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker = 1$/;"	v
g:loaded_syntastic_python_pycodestyle_checker	nvim/plugged/syntastic/syntax_checkers/python/pycodestyle.vim	/^let g:loaded_syntastic_python_pycodestyle_checker = 1$/;"	v
g:loaded_syntastic_python_pydocstyle_checker	nvim/plugged/syntastic/syntax_checkers/python/pydocstyle.vim	/^let g:loaded_syntastic_python_pydocstyle_checker = 1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	nvim/plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker = 1$/;"	v
g:loaded_syntastic_python_pylama_checker	nvim/plugged/syntastic/syntax_checkers/python/pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	nvim/plugged/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	nvim/plugged/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker = 1$/;"	v
g:loaded_syntastic_qml_qmllint_checker	nvim/plugged/syntastic/syntax_checkers/qml/qmllint.vim	/^let g:loaded_syntastic_qml_qmllint_checker = 1$/;"	v
g:loaded_syntastic_r_lint_checker	nvim/plugged/syntastic/syntax_checkers/r/lint.vim	/^let g:loaded_syntastic_r_lint_checker = 1$/;"	v
g:loaded_syntastic_r_lintr_checker	nvim/plugged/syntastic/syntax_checkers/r/lintr.vim	/^let g:loaded_syntastic_r_lintr_checker = 1$/;"	v
g:loaded_syntastic_r_svtools_checker	nvim/plugged/syntastic/syntax_checkers/r/svtools.vim	/^let g:loaded_syntastic_r_svtools_checker = 1$/;"	v
g:loaded_syntastic_racket_code_ayatollah_checker	nvim/plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let g:loaded_syntastic_racket_code_ayatollah_checker = 1$/;"	v
g:loaded_syntastic_racket_racket_checker	nvim/plugged/syntastic/syntax_checkers/racket/racket.vim	/^let g:loaded_syntastic_racket_racket_checker=1$/;"	v
g:loaded_syntastic_registry	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rmd_lintr_checker	nvim/plugged/syntastic/syntax_checkers/rmd/lintr.vim	/^let g:loaded_syntastic_rmd_lintr_checker = 1$/;"	v
g:loaded_syntastic_rnc_rnv_checker	nvim/plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^let g:loaded_syntastic_rnc_rnv_checker = 1$/;"	v
g:loaded_syntastic_rst_proselint_checker	nvim/plugged/syntastic/syntax_checkers/rst/proselint.vim	/^let g:loaded_syntastic_rst_proselint_checker = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	nvim/plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker = 1$/;"	v
g:loaded_syntastic_rst_rstcheck_checker	nvim/plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^let g:loaded_syntastic_rst_rstcheck_checker = 1$/;"	v
g:loaded_syntastic_rst_sphinx_checker	nvim/plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^let g:loaded_syntastic_rst_sphinx_checker = 1$/;"	v
g:loaded_syntastic_ruby_flog_checker	nvim/plugged/syntastic/syntax_checkers/ruby/flog.vim	/^let g:loaded_syntastic_ruby_flog_checker = 1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	nvim/plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	nvim/plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_mri_checker	nvim/plugged/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker = 1$/;"	v
g:loaded_syntastic_ruby_reek_checker	nvim/plugged/syntastic/syntax_checkers/ruby/reek.vim	/^let g:loaded_syntastic_ruby_reek_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	nvim/plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubylint_checker	nvim/plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^let g:loaded_syntastic_ruby_rubylint_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_checker	nvim/plugged/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_lint_checker	nvim/plugged/syntastic/syntax_checkers/sass/sass_lint.vim	/^let g:loaded_syntastic_sass_sass_lint_checker = 1$/;"	v
g:loaded_syntastic_sass_sassc_checker	nvim/plugged/syntastic/syntax_checkers/sass/sassc.vim	/^let g:loaded_syntastic_sass_sassc_checker = 1$/;"	v
g:loaded_syntastic_scala_fsc_checker	nvim/plugged/syntastic/syntax_checkers/scala/fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	nvim/plugged/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker = 1$/;"	v
g:loaded_syntastic_scala_scalastyle_checker	nvim/plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^let g:loaded_syntastic_scala_scalastyle_checker = 1$/;"	v
g:loaded_syntastic_scss_mixedindentlint_checker	nvim/plugged/syntastic/syntax_checkers/scss/mixedindentlint.vim	/^let g:loaded_syntastic_scss_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_checker	nvim/plugged/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_lint_checker	nvim/plugged/syntastic/syntax_checkers/scss/sass_lint.vim	/^let g:loaded_syntastic_scss_sass_lint_checker = 1$/;"	v
g:loaded_syntastic_scss_sassc_checker	nvim/plugged/syntastic/syntax_checkers/scss/sassc.vim	/^let g:loaded_syntastic_scss_sassc_checker = 1$/;"	v
g:loaded_syntastic_scss_scss_lint_checker	nvim/plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^let g:loaded_syntastic_scss_scss_lint_checker = 1$/;"	v
g:loaded_syntastic_scss_stylelint_checker	nvim/plugged/syntastic/syntax_checkers/scss/stylelint.vim	/^let g:loaded_syntastic_scss_stylelint_checker = 1$/;"	v
g:loaded_syntastic_sh_bashate_checker	nvim/plugged/syntastic/syntax_checkers/sh/bashate.vim	/^let g:loaded_syntastic_sh_bashate_checker = 1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	nvim/plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker = 1$/;"	v
g:loaded_syntastic_sh_sh_checker	nvim/plugged/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker = 1$/;"	v
g:loaded_syntastic_sh_shellcheck_checker	nvim/plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^let g:loaded_syntastic_sh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_slim_slim_lint_checker	nvim/plugged/syntastic/syntax_checkers/slim/slim_lint.vim	/^let g:loaded_syntastic_slim_slim_lint_checker = 1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	nvim/plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker = 1$/;"	v
g:loaded_syntastic_sml_smlnj_checker	nvim/plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^let g:loaded_syntastic_sml_smlnj_checker = 1$/;"	v
g:loaded_syntastic_solidity_solc_checker	nvim/plugged/syntastic/syntax_checkers/solidity/solc.vim	/^let g:loaded_syntastic_solidity_solc_checker = 1$/;"	v
g:loaded_syntastic_solidity_solhint_checker	nvim/plugged/syntastic/syntax_checkers/solidity/solhint.vim	/^let g:loaded_syntastic_solidity_solhint_checker = 1$/;"	v
g:loaded_syntastic_solidity_solium_checker	nvim/plugged/syntastic/syntax_checkers/solidity/solium.vim	/^let g:loaded_syntastic_solidity_solium_checker = 1$/;"	v
g:loaded_syntastic_spec_rpmlint_checker	nvim/plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^let g:loaded_syntastic_spec_rpmlint_checker = 1$/;"	v
g:loaded_syntastic_sql_sqlint_checker	nvim/plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^let g:loaded_syntastic_sql_sqlint_checker = 1$/;"	v
g:loaded_syntastic_sql_tsqllint_checker	nvim/plugged/syntastic/syntax_checkers/sql/tsqllint.vim	/^let g:loaded_syntastic_sql_tsqllint_checker = 1$/;"	v
g:loaded_syntastic_stylus_stylint_checker	nvim/plugged/syntastic/syntax_checkers/stylus/stylint.vim	/^let g:loaded_syntastic_stylus_stylint_checker = 1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	nvim/plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker = 1$/;"	v
g:loaded_syntastic_tex_chktex_checker	nvim/plugged/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	nvim/plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker = 1$/;"	v
g:loaded_syntastic_tex_proselint_checker	nvim/plugged/syntastic/syntax_checkers/tex/proselint.vim	/^let g:loaded_syntastic_tex_proselint_checker = 1$/;"	v
g:loaded_syntastic_texinfo_makeinfo_checker	nvim/plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let g:loaded_syntastic_texinfo_makeinfo_checker = 1$/;"	v
g:loaded_syntastic_texinfo_proselint_checker	nvim/plugged/syntastic/syntax_checkers/texinfo/proselint.vim	/^let g:loaded_syntastic_texinfo_proselint_checker = 1$/;"	v
g:loaded_syntastic_text_atdtool_checker	nvim/plugged/syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_text_igor_checker	nvim/plugged/syntastic/syntax_checkers/text/igor.vim	/^let g:loaded_syntastic_text_igor_checker = 1$/;"	v
g:loaded_syntastic_text_language_check_checker	nvim/plugged/syntastic/syntax_checkers/text/language_check.vim	/^let g:loaded_syntastic_text_language_check_checker = 1$/;"	v
g:loaded_syntastic_text_proselint_checker	nvim/plugged/syntastic/syntax_checkers/text/proselint.vim	/^let g:loaded_syntastic_text_proselint_checker = 1$/;"	v
g:loaded_syntastic_text_textlint_checker	nvim/plugged/syntastic/syntax_checkers/text/textlint.vim	/^let g:loaded_syntastic_text_textlint_checker = 1$/;"	v
g:loaded_syntastic_trig_rapper_checker	nvim/plugged/syntastic/syntax_checkers/trig/rapper.vim	/^let g:loaded_syntastic_trig_rapper_checker = 1$/;"	v
g:loaded_syntastic_turtle_rapper_checker	nvim/plugged/syntastic/syntax_checkers/turtle/rapper.vim	/^let g:loaded_syntastic_turtle_rapper_checker = 1$/;"	v
g:loaded_syntastic_turtle_ttl_checker	nvim/plugged/syntastic/syntax_checkers/turtle/ttl.vim	/^let g:loaded_syntastic_turtle_ttl_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	nvim/plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker = 1$/;"	v
g:loaded_syntastic_typescript_eslint_checker	nvim/plugged/syntastic/syntax_checkers/typescript/eslint.vim	/^let g:loaded_syntastic_typescript_eslint_checker = 1$/;"	v
g:loaded_syntastic_typescript_lynt_checker	nvim/plugged/syntastic/syntax_checkers/typescript/lynt.vim	/^let g:loaded_syntastic_typescript_lynt_checker = 1$/;"	v
g:loaded_syntastic_typescript_tslint_checker	nvim/plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^let g:loaded_syntastic_typescript_tslint_checker = 1$/;"	v
g:loaded_syntastic_util_autoload	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	nvim/plugged/syntastic/syntax_checkers/vala/valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_verilog_iverilog_checker	nvim/plugged/syntastic/syntax_checkers/verilog/iverilog.vim	/^let g:loaded_syntastic_verilog_iverilog_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	nvim/plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	nvim/plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_vhdl_vcom_checker	nvim/plugged/syntastic/syntax_checkers/vhdl/vcom.vim	/^let g:loaded_syntastic_vhdl_vcom_checker = 1$/;"	v
g:loaded_syntastic_vim_vimlint_checker	nvim/plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^let g:loaded_syntastic_vim_vimlint_checker = 1$/;"	v
g:loaded_syntastic_vim_vint_checker	nvim/plugged/syntastic/syntax_checkers/vim/vint.vim	/^let g:loaded_syntastic_vim_vint_checker = 1$/;"	v
g:loaded_syntastic_vue_eslint_checker	nvim/plugged/syntastic/syntax_checkers/vue/eslint.vim	/^let g:loaded_syntastic_vue_eslint_checker = 1$/;"	v
g:loaded_syntastic_vue_pug_lint_vue_checker	nvim/plugged/syntastic/syntax_checkers/vue/pug_lint_vue.vim	/^let g:loaded_syntastic_vue_pug_lint_vue_checker = 1$/;"	v
g:loaded_syntastic_xhtml_jshint_checker	nvim/plugged/syntastic/syntax_checkers/xhtml/jshint.vim	/^let g:loaded_syntastic_xhtml_jshint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_proselint_checker	nvim/plugged/syntastic/syntax_checkers/xhtml/proselint.vim	/^let g:loaded_syntastic_xhtml_proselint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	nvim/plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker = 1$/;"	v
g:loaded_syntastic_xml_plutil_checker	nvim/plugged/syntastic/syntax_checkers/xml/plutil.vim	/^let g:loaded_syntastic_xml_plutil_checker = 1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	nvim/plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker = 1$/;"	v
g:loaded_syntastic_xquery_basex_checker	nvim/plugged/syntastic/syntax_checkers/xquery/basex.vim	/^let g:loaded_syntastic_xquery_basex_checker = 1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	nvim/plugged/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker = 1$/;"	v
g:loaded_syntastic_yacc_bison_checker	nvim/plugged/syntastic/syntax_checkers/yacc/bison.vim	/^let g:loaded_syntastic_yacc_bison_checker = 1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	nvim/plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamllint_checker	nvim/plugged/syntastic/syntax_checkers/yaml/yamllint.vim	/^let g:loaded_syntastic_yaml_yamllint_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamlxs_checker	nvim/plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let g:loaded_syntastic_yaml_yamlxs_checker = 1$/;"	v
g:loaded_syntastic_yang_pyang_checker	nvim/plugged/syntastic/syntax_checkers/yang/pyang.vim	/^let g:loaded_syntastic_yang_pyang_checker = 1$/;"	v
g:loaded_syntastic_yara_yarac_checker	nvim/plugged/syntastic/syntax_checkers/yara/yara.vim	/^let g:loaded_syntastic_yara_yarac_checker = 1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	nvim/plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker = 1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	nvim/plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker = 1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	nvim/plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker = 1$/;"	v
g:loaded_vimproc	nvim/plugged/vimproc.vim/plugin/vimproc.vim	/^let g:loaded_vimproc = 1$/;"	v
g:localvimrc_ask	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_ask                 = 0$/;"	v
g:localvimrc_autocmd	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_autocmd             = 1$/;"	v
g:localvimrc_blacklist	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_blacklist           = []$/;"	v
g:localvimrc_count	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_count               = -1$/;"	v
g:localvimrc_debug	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let g:localvimrc_debug = 0$/;"	v
g:localvimrc_debug	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_debug               = 0$/;"	v
g:localvimrc_enable	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_enable              = 1$/;"	v
g:localvimrc_event	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_event               = [ "BufWinEnter" ]$/;"	v
g:localvimrc_file	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^        let g:localvimrc_file = resolve(expand("<afile>:p"))$/;"	v
g:localvimrc_file_dir	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^        let g:localvimrc_file_dir = fnamemodify(g:localvimrc_file, ":h")$/;"	v
g:localvimrc_file_directory_only	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_file_directory_only = 0$/;"	v
g:localvimrc_name	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_name                = [ ".lvimrc" ]$/;"	v
g:localvimrc_persistence_file	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_persistence_file    = expand("$HOME\/.localvimrc_persistent")$/;"	v
g:localvimrc_persistent	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_persistent          = 1$/;"	v
g:localvimrc_reverse	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_reverse             = 0$/;"	v
g:localvimrc_sandbox	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_sandbox             = 1$/;"	v
g:localvimrc_script	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^        let g:localvimrc_script = l:rcfile$/;"	v
g:localvimrc_script_dir	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^        let g:localvimrc_script_dir = fnamemodify(g:localvimrc_script, ":h")$/;"	v
g:localvimrc_script_dir_unresolved	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^        let g:localvimrc_script_dir_unresolved = fnamemodify(g:localvimrc_script_unresolved, ":h/;"	v
g:localvimrc_script_unresolved	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^        let g:localvimrc_script_unresolved = l:rcfile_unresolved$/;"	v
g:localvimrc_sourced_once	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^          let g:localvimrc_sourced_once = 1$/;"	v
g:localvimrc_sourced_once	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^        let g:localvimrc_sourced_once = 0$/;"	v
g:localvimrc_sourced_once_for_file	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^            let g:localvimrc_sourced_once_for_file = 1$/;"	v
g:localvimrc_sourced_once_for_file	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^        let g:localvimrc_sourced_once_for_file = 0$/;"	v
g:localvimrc_whitelist	nvim/plugged/vim-localvimrc/test/default.vim	/^let g:localvimrc_whitelist           = []$/;"	v
g:main_syntax	nvim/plugged/vim-go/syntax/gohtmltmpl.vim	/^  let g:main_syntax = 'html'$/;"	v
g:markdown_fenced_languages	nvim/plugged/vim-markdown/syntax/markdown.vim	/^  let g:markdown_fenced_languages = []$/;"	v
g:markdown_fenced_languages	nvim/settings/vim-markdown.vim	/^let g:markdown_fenced_languages = ['html', 'css', 'sass', 'scss', 'less', 'javascript', 'js=java/;"	v
g:markdown_fenced_languages	vim/settings/vim-markdown.vim	/^let g:markdown_fenced_languages = ['html', 'css', 'sass', 'scss', 'less', 'javascript', 'js=java/;"	v
g:markdown_minlines	nvim/plugged/vim-markdown/syntax/markdown.vim	/^  let g:markdown_minlines = 50$/;"	v
g:minisnip_dir	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^    let g:minisnip_dir .= go#util#PathListSep() . globpath(&rtp, 'gosnippets\/minisnip')$/;"	v
g:minisnip_dir	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^    let g:minisnip_dir = globpath(&rtp, 'gosnippets\/minisnip')$/;"	v
g:move_auto_indent	nvim/plugged/vim-move/plugin/move.vim	/^    let g:move_auto_indent = 1$/;"	v
g:move_key_modifier	nvim/plugged/vim-move/plugin/move.vim	/^    let g:move_key_modifier = 'A'$/;"	v
g:move_key_modifier	nvim/settings/vim-move.vim	/^let g:move_key_modifier = 'C'$/;"	v
g:move_key_modifier	vim/settings/vim-move.vim	/^let g:move_key_modifier = 'C'$/;"	v
g:move_map_keys	nvim/plugged/vim-move/plugin/move.vim	/^    let g:move_map_keys = 1$/;"	v
g:move_past_end_of_line	nvim/plugged/vim-move/plugin/move.vim	/^    let g:move_past_end_of_line = 1$/;"	v
g:mysyntaxfile	nvim/plugged/indentline/after/plugin/indentLine.vim	/^    let g:mysyntaxfile = g:indentLine_mysyntaxfile$/;"	v
g:neocomplete#auto_completion_start_length	nvim/settings/neocomplete.vim	/^let g:neocomplete#auto_completion_start_length = 3$/;"	v
g:neocomplete#auto_completion_start_length	vim/settings/neocomplete.vim	/^let g:neocomplete#auto_completion_start_length = 3$/;"	v
g:neocomplete#enable_at_startup	nvim/settings/neocomplete.vim	/^let g:neocomplete#enable_at_startup = 1$/;"	v
g:neocomplete#enable_at_startup	vim/settings/neocomplete.vim	/^let g:neocomplete#enable_at_startup = 1$/;"	v
g:neocomplete#enable_camel_case	nvim/settings/neocomplete.vim	/^let g:neocomplete#enable_camel_case = 1$/;"	v
g:neocomplete#enable_camel_case	vim/settings/neocomplete.vim	/^let g:neocomplete#enable_camel_case = 1$/;"	v
g:neocomplete#enable_smart_case	nvim/settings/neocomplete.vim	/^let g:neocomplete#enable_smart_case = 1$/;"	v
g:neocomplete#enable_smart_case	vim/settings/neocomplete.vim	/^let g:neocomplete#enable_smart_case = 1$/;"	v
g:neocomplete#force_overwrite_completefunc	nvim/settings/neocomplete.vim	/^let g:neocomplete#force_overwrite_completefunc = 1$/;"	v
g:neocomplete#force_overwrite_completefunc	vim/settings/neocomplete.vim	/^let g:neocomplete#force_overwrite_completefunc = 1$/;"	v
g:neocomplete#keyword_patterns	nvim/settings/neocomplete.vim	/^  let g:neocomplete#keyword_patterns = {}$/;"	v
g:neocomplete#keyword_patterns	nvim/settings/neocomplete.vim	/^let g:neocomplete#keyword_patterns['default'] = '\\h\\w*'$/;"	v
g:neocomplete#keyword_patterns	vim/settings/neocomplete.vim	/^  let g:neocomplete#keyword_patterns = {}$/;"	v
g:neocomplete#keyword_patterns	vim/settings/neocomplete.vim	/^let g:neocomplete#keyword_patterns['default'] = '\\h\\w*'$/;"	v
g:neocomplete#max_list	nvim/settings/neocomplete.vim	/^let g:neocomplete#max_list = 5$/;"	v
g:neocomplete#max_list	vim/settings/neocomplete.vim	/^let g:neocomplete#max_list = 5$/;"	v
g:neosnippet#enable_snipmate_compatibility	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^  let g:neosnippet#enable_snipmate_compatibility = 1$/;"	v
g:neosnippet#snippets_directory	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^      let g:neosnippet#snippets_directory = g:neosnippet#snippets_directory . "," . l:gosnippets/;"	v
g:neosnippet#snippets_directory	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^      let g:neosnippet#snippets_directory = l:gosnippets_dir$/;"	v
g:neosnippet#snippets_directory	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^    let g:neosnippet#snippets_directory += [l:gosnippets_dir]$/;"	v
g:palenight_termcolors	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:palenight_termcolors = 256$/;"	v
g:palenight_terminal_italics	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:palenight_terminal_italics = 0$/;"	v
g:pencil#autoformat	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#autoformat = 1$/;"	v
g:pencil#autoformat_aliases	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#autoformat_aliases = {$/;"	v
g:pencil#autoformat_config	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#autoformat_config = {$/;"	v
g:pencil#concealcursor	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#concealcursor = 'c'$/;"	v
g:pencil#conceallevel	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#conceallevel = 3$/;"	v
g:pencil#cursorwrap	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#cursorwrap = 1$/;"	v
g:pencil#joinspaces	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#joinspaces = 0$/;"	v
g:pencil#legacyCommands	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#legacyCommands = 0$/;"	v
g:pencil#mode_indicators	nvim/plugged/vim-pencil/plugin/pencil.vim	/^    let g:pencil#mode_indicators = {'hard': 'H', 'auto': 'A', 'soft': 'S', 'off': '',}$/;"	v
g:pencil#mode_indicators	nvim/plugged/vim-pencil/plugin/pencil.vim	/^    let g:pencil#mode_indicators = {'hard': '␍', 'auto': 'ª', 'soft': '⤸', 'off': '',}$/;"	v
g:pencil#softDetectSample	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#softDetectSample = 20$/;"	v
g:pencil#softDetectThreshold	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#softDetectThreshold = 130$/;"	v
g:pencil#textwidth	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#textwidth = 74$/;"	v
g:pencil#textwidth	nvim/settings/vim-pencil.vim	/^let g:pencil#textwidth = 100$/;"	v
g:pencil#textwidth	vim/settings/vim-pencil.vim	/^let g:pencil#textwidth = 100$/;"	v
g:pencil#wrapModeDefault	nvim/plugged/vim-pencil/plugin/pencil.vim	/^  let g:pencil#wrapModeDefault = 'hard'$/;"	v
g:pencil#wrapModeDefault	nvim/settings/vim-pencil.vim	/^let g:pencil#wrapModeDefault = 'soft'   " default is 'hard'$/;"	v
g:pencil#wrapModeDefault	vim/settings/vim-pencil.vim	/^let g:pencil#wrapModeDefault = 'soft'   " default is 'hard'$/;"	v
g:plug_home	nvim/autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plug_timeout	nvim/plugs.vim	/^let g:plug_timeout = 6000$/;"	v
g:plug_timeout	vim/plugs.vim	/^let g:plug_timeout = 6000$/;"	v
g:plugs	nvim/autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	nvim/autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	nvim/autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	nvim/autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:pug_self_closing_tags	nvim/plugged/vim-pug/indent/pug.vim	/^  let g:pug_self_closing_tags = 'meta|link|img|hr|br|input'$/;"	v
g:repeat_tick	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^                    let g:repeat_tick = b:changedtick$/;"	v
g:syntastic_	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^                let g:syntastic_{a:new} = NEW_VAR$/;"	v
g:syntastic_	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^            let g:syntastic_{a:new} = g:syntastic_{a:old}$/;"	v
g:syntastic_	nvim/plugged/syntastic/plugin/syntastic.vim	/^        let g:syntastic_{s:key} = copy(g:_SYNTASTIC_DEFAULTS[s:key])$/;"	v
g:syntastic_	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^            let g:syntastic_{newObj._filetype}_{newObj._name}_sort = g:syntastic_{filetype}_{nam/;"	v
g:syntastic_	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^        let g:syntastic_{self._filetype}_{self._name}_sort = a:val$/;"	v
g:syntastic_	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^        let g:syntastic_{a:filetype}_checkers = [g:syntastic_{a:filetype}_checker]$/;"	v
g:syntastic_ada_compiler	nvim/plugged/syntastic/syntax_checkers/ada/gcc.vim	/^        let g:syntastic_ada_compiler = self.getExec()$/;"	v
g:syntastic_ada_compiler_options	nvim/plugged/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_always_populate_loc_list	nvim/settings/syntastic.vim	/^let g:syntastic_always_populate_loc_list = 1$/;"	v
g:syntastic_always_populate_loc_list	vim/settings/syntastic.vim	/^let g:syntastic_always_populate_loc_list = 1$/;"	v
g:syntastic_apiblueprint_drafter_sort	nvim/plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^    let g:syntastic_apiblueprint_drafter_sort = 1$/;"	v
g:syntastic_asm_compiler	nvim/plugged/syntastic/syntax_checkers/asm/gcc.vim	/^        let g:syntastic_asm_compiler = self.getExec()$/;"	v
g:syntastic_asm_compiler_options	nvim/plugged/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_compiler_options = ''$/;"	v
g:syntastic_asm_generic	nvim/plugged/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_generic = 0$/;"	v
g:syntastic_auto_loc_list	nvim/settings/syntastic.vim	/^let g:syntastic_auto_loc_list = 1$/;"	v
g:syntastic_auto_loc_list	vim/settings/syntastic.vim	/^let g:syntastic_auto_loc_list = 1$/;"	v
g:syntastic_c_checkpatch_exec	nvim/plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^            let g:syntastic_c_checkpatch_exec = 'checkpatch'$/;"	v
g:syntastic_c_checkpatch_exec	nvim/plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^            let g:syntastic_c_checkpatch_exec = fnamemodify('.\/scripts\/checkpatch', ':p')$/;"	v
g:syntastic_c_checkpatch_exec	nvim/plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^            let g:syntastic_c_checkpatch_exec = fnamemodify('.\/scripts\/checkpatch.pl', ':p')$/;"	v
g:syntastic_c_clang_check_sort	nvim/plugged/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_c_clang_check_sort = 1$/;"	v
g:syntastic_c_clang_tidy_sort	nvim/plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_c_clang_tidy_sort = 1$/;"	v
g:syntastic_c_compiler	nvim/plugged/syntastic/syntax_checkers/c/gcc.vim	/^        let g:syntastic_c_compiler = executable(self.getExec()) ? self.getExec() : 'clang'$/;"	v
g:syntastic_c_compiler_options	nvim/plugged/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_flawfinder_sort	nvim/plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^    let g:syntastic_c_flawfinder_sort = 1$/;"	v
g:syntastic_c_flawfinder_thres	nvim/plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^    let g:syntastic_c_flawfinder_thres = 3$/;"	v
g:syntastic_c_oclint_sort	nvim/plugged/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_c_oclint_sort = 1$/;"	v
g:syntastic_check_on_open	nvim/settings/syntastic.vim	/^let g:syntastic_check_on_open = 1$/;"	v
g:syntastic_check_on_open	vim/settings/syntastic.vim	/^let g:syntastic_check_on_open = 1$/;"	v
g:syntastic_check_on_wq	nvim/settings/syntastic.vim	/^let g:syntastic_check_on_wq = 0$/;"	v
g:syntastic_check_on_wq	vim/settings/syntastic.vim	/^let g:syntastic_check_on_wq = 0$/;"	v
g:syntastic_cobol_compiler	nvim/plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^        let g:syntastic_cobol_compiler = self.getExec()$/;"	v
g:syntastic_cobol_compiler_options	nvim/plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler	nvim/plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^        let g:syntastic_cpp_compiler = executable(self.getExec()) ? self.getExec() : 'clang++'$/;"	v
g:syntastic_cpp_compiler_options	nvim/plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_cpplint_thres	nvim/plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_cpp_flawfinder_thres	nvim/plugged/syntastic/syntax_checkers/cpp/flawfinder.vim	/^    let g:syntastic_cpp_flawfinder_thres = 3$/;"	v
g:syntastic_css_prettycss_sort	nvim/plugged/syntastic/syntax_checkers/css/prettycss.vim	/^    let g:syntastic_css_prettycss_sort = 1$/;"	v
g:syntastic_d_compiler	nvim/plugged/syntastic/syntax_checkers/d/dmd.vim	/^        let g:syntastic_d_compiler = self.getExec()$/;"	v
g:syntastic_d_compiler_options	nvim/plugged/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_d_dub_exec	nvim/plugged/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_dub_exec = 'dub'$/;"	v
g:syntastic_d_include_dirs	nvim/plugged/syntastic/syntax_checkers/d/dmd.vim	/^        let g:syntastic_d_include_dirs = s:GetIncludes(self, fnamemodify(bufname(buf), ':p:h'))$/;"	v
g:syntastic_d_use_dub	nvim/plugged/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_use_dub = 1$/;"	v
g:syntastic_enable_balloons	nvim/plugged/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_erlc_include_path	nvim/plugged/syntastic/syntax_checkers/erlang/escript.vim	/^    let g:syntastic_erlc_include_path = ''$/;"	v
g:syntastic_eruby_ruby_exec	nvim/plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^        let g:syntastic_eruby_ruby_exec = g:syntastic_ruby_exec$/;"	v
g:syntastic_fortran_compiler	nvim/plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^        let g:syntastic_fortran_compiler = self.getExec()$/;"	v
g:syntastic_fortran_compiler_options	nvim/plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_fortran_gfortran_sort	nvim/plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^            let g:syntastic_fortran_gfortran_sort = 0$/;"	v
g:syntastic_fortran_gfortran_sort	nvim/plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^            let g:syntastic_fortran_gfortran_sort = 1$/;"	v
g:syntastic_haskell_hdevtools_args	nvim/plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^        let g:syntastic_haskell_hdevtools_args = g:hdevtools_options$/;"	v
g:syntastic_haskell_scan_sort	nvim/plugged/syntastic/syntax_checkers/haskell/scan.vim	/^    let g:syntastic_haskell_scan_sort = 1$/;"	v
g:syntastic_html_tidy_blocklevel_tags	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_empty_tags	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_inline_tags	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_html_validator_api	nvim/plugged/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_api = 'https:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	nvim/plugged/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	nvim/plugged/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	nvim/plugged/syntastic/syntax_checkers/html/w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_java_checkstyle_classpath	nvim/plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-6.10.1-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	nvim/plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_classpath	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = path$/;"	v
g:syntastic_java_javac_config_file	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_custom_classpath_command	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_custom_classpath_command = ''$/;"	v
g:syntastic_java_javac_delete_output	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^            let g:syntastic_java_javac_maven_pom_classpath[pom] = mvn_classpath$/;"	v
g:syntastic_java_javac_maven_pom_classpath	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^            let g:syntastic_java_javac_maven_pom_ftime[pom] = getftime(pom)$/;"	v
g:syntastic_java_javac_maven_pom_ftime	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^            let g:syntastic_java_javac_maven_pom_properties[pom] = mvn_properties$/;"	v
g:syntastic_java_javac_maven_pom_properties	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:syntastic_java_javac_options	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_maven_executable	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_java_maven_options	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_options = ''$/;"	v
g:syntastic_javascript_checkers	nvim/init.vim	/^let g:syntastic_javascript_checkers = ['eslint']$/;"	v
g:syntastic_javascript_checkers	vim/.vimrc	/^let g:syntastic_javascript_checkers = ['eslint']$/;"	v
g:syntastic_javascript_eslint_generic	nvim/plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_generic = 0$/;"	v
g:syntastic_javascript_eslint_sort	nvim/plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_sort = 1$/;"	v
g:syntastic_javascript_flow_sort	nvim/plugged/syntastic/syntax_checkers/javascript/flow.vim	/^    let g:syntastic_javascript_flow_sort = 1$/;"	v
g:syntastic_javascript_jscs_sort	nvim/plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^    let g:syntastic_javascript_jscs_sort = 1$/;"	v
g:syntastic_javascript_jshint_sort	nvim/plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_sort = 1$/;"	v
g:syntastic_javascript_standard_generic	nvim/plugged/syntastic/syntax_checkers/javascript/standard.vim	/^    let g:syntastic_javascript_standard_generic = 0$/;"	v
g:syntastic_less_use_less_lint	nvim/plugged/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_markdown_mdl_sort	nvim/plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^    let g:syntastic_markdown_mdl_sort = 1$/;"	v
g:syntastic_mode_map	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^        let g:syntastic_mode_map = {}$/;"	v
g:syntastic_mode_map	nvim/plugged/syntastic/plugin/syntastic/modemap.vim	/^    let g:syntastic_mode_map['mode'] = self._mode$/;"	v
g:syntastic_objc_compiler	nvim/plugged/syntastic/syntax_checkers/objc/gcc.vim	/^        let g:syntastic_objc_compiler = executable(self.getExec()) ? self.getExec() : 'clang'$/;"	v
g:syntastic_objc_compiler_options	nvim/plugged/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_compiler	nvim/plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^        let g:syntastic_objcpp_compiler = executable(self.getExec()) ? self.getExec() : 'clang'$/;"	v
g:syntastic_objcpp_compiler_options	nvim/plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_janestreet_core_dir	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_janestreet_core_dir = '.'$/;"	v
g:syntastic_ocaml_use_janestreet_core	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_janestreet_core = 0$/;"	v
g:syntastic_ocaml_use_ocamlbuild	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_perl6_lib_path	nvim/plugged/syntastic/syntax_checkers/perl6/perl6.vim	/^    let g:syntastic_perl6_lib_path = []$/;"	v
g:syntastic_perl6_perl6_sort	nvim/plugged/syntastic/syntax_checkers/perl6/perl6.vim	/^    let g:syntastic_perl6_perl6_sort = 1$/;"	v
g:syntastic_perl_lib_path	nvim/plugged/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_lib_path	nvim/plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perl_exec	nvim/plugged/syntastic/syntax_checkers/perl/perl.vim	/^        let g:syntastic_perl_perl_exec = g:syntastic_perl_interpreter$/;"	v
g:syntastic_perl_perlcritic_thres	nvim/plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_python_prospector_sort	nvim/plugged/syntastic/syntax_checkers/python/prospector.vim	/^    let g:syntastic_python_prospector_sort = 1$/;"	v
g:syntastic_python_pylama_sort	nvim/plugged/syntastic/syntax_checkers/python/pylama.vim	/^    let g:syntastic_python_pylama_sort = 1$/;"	v
g:syntastic_python_pylint_sort	nvim/plugged/syntastic/syntax_checkers/python/pylint.vim	/^    let g:syntastic_python_pylint_sort = 1$/;"	v
g:syntastic_python_python_use_codec	nvim/plugged/syntastic/syntax_checkers/python/python.vim	/^    let g:syntastic_python_python_use_codec = 0$/;"	v
g:syntastic_quiet_messages	nvim/plugged/syntastic/plugin/syntastic.vim	/^        let g:syntastic_quiet_messages['type'] = s:quiet_warnings$/;"	v
g:syntastic_r_lint_sort	nvim/plugged/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_sort = 1$/;"	v
g:syntastic_r_lint_styles	nvim/plugged/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_styles = 'lint.style'$/;"	v
g:syntastic_r_lintr_cache	nvim/plugged/syntastic/syntax_checkers/r/lintr.vim	/^    let g:syntastic_r_lintr_cache = 'FALSE'$/;"	v
g:syntastic_r_lintr_linters	nvim/plugged/syntastic/syntax_checkers/r/lintr.vim	/^    let g:syntastic_r_lintr_linters = 'default_linters'$/;"	v
g:syntastic_r_svtools_styles	nvim/plugged/syntastic/syntax_checkers/r/svtools.vim	/^    let g:syntastic_r_svtools_styles = 'lint.style'$/;"	v
g:syntastic_racket_code_ayatollah_script	nvim/plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_script = 'code-ayatollah.rkt'$/;"	v
g:syntastic_racket_code_ayatollah_sort	nvim/plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_sort = 1$/;"	v
g:syntastic_ruby_flog_sort	nvim/plugged/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_sort = 1$/;"	v
g:syntastic_ruby_flog_threshold_error	nvim/plugged/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_error = 90$/;"	v
g:syntastic_ruby_flog_threshold_warning	nvim/plugged/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_warning = 45$/;"	v
g:syntastic_ruby_mri_exec	nvim/plugged/syntastic/syntax_checkers/ruby/mri.vim	/^        let g:syntastic_ruby_mri_exec = g:syntastic_ruby_exec$/;"	v
g:syntastic_sass_check_partials	nvim/plugged/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_scalastyle_config_file	nvim/plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_config_file = 'scalastyle_config.xml'$/;"	v
g:syntastic_scala_scalastyle_jar	nvim/plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_jar = 'scalastyle-batch_2.10.jar'$/;"	v
g:syntastic_shell	nvim/plugged/syntastic/plugin/syntastic.vim	/^    let g:syntastic_shell = &shell$/;"	v
g:syntastic_sql_tsqllint_sort	nvim/plugged/syntastic/syntax_checkers/sql/tsqllint.vim	/^    let g:syntastic_sql_tsqllint_sort = 1$/;"	v
g:syntastic_tex_chktex_showmsgs	nvim/plugged/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_tex_chktex_sort	nvim/plugged/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_sort = 1$/;"	v
g:syntastic_text_atdtool_sort	nvim/plugged/syntastic/syntax_checkers/text/atdtool.vim	/^    let g:syntastic_text_atdtool_sort = 1$/;"	v
g:syntastic_text_proselint_sort	nvim/plugged/syntastic/syntax_checkers/text/proselint.vim	/^    let g:syntastic_text_proselint_sort = 1$/;"	v
g:syntastic_typescript_tslint_sort	nvim/plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^    let g:syntastic_typescript_tslint_sort = 1$/;"	v
g:syntastic_verilog_compiler	nvim/plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^        let g:syntastic_verilog_compiler = self.getExec()$/;"	v
g:syntastic_verilog_compiler_options	nvim/plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_version	nvim/plugged/syntastic/plugin/syntastic.vim	/^let g:syntastic_version =$/;"	v
g:syntastic_vim_vint_sort	nvim/plugged/syntastic/syntax_checkers/vim/vint.vim	/^    let g:syntastic_vim_vint_sort = 1$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	nvim/plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:syntastic_yaml_yamlxs_exec	nvim/plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^        let g:syntastic_yaml_yamlxs_exec = g:syntastic_perl_interpreter$/;"	v
g:tabular_default_format	nvim/plugged/tabular/autoload/tabular.vim	/^  let g:tabular_default_format = "l1"$/;"	v
g:tabular_loaded	nvim/plugged/tabular/plugin/Tabular.vim	/^let g:tabular_loaded = 1$/;"	v
g:tagbar_type_apiblueprint	nvim/plugged/apiblueprint.vim/plugin/apiblueprint.vim	/^let g:tagbar_type_apiblueprint = {$/;"	v
g:tagbar_type_go	nvim/plugged/vim-go/ftplugin/go/tagbar.vim	/^    let g:tagbar_type_go = {$/;"	v
g:terminal_color_0	nvim/colors/thea.vim	/^  let g:terminal_color_0 =  s:palette.black.gui$/;"	v
g:terminal_color_0	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_0 =  s:black.gui$/;"	v
g:terminal_color_0	vim/settings/thea.vim	/^  let g:terminal_color_0 =  s:palette.black.gui$/;"	v
g:terminal_color_1	nvim/colors/thea.vim	/^  let g:terminal_color_1 =  s:palette.red.gui$/;"	v
g:terminal_color_1	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_1 =  s:red.gui$/;"	v
g:terminal_color_1	vim/settings/thea.vim	/^  let g:terminal_color_1 =  s:palette.red.gui$/;"	v
g:terminal_color_10	nvim/colors/thea.vim	/^  let g:terminal_color_10 = s:palette.green.gui " No dark version$/;"	v
g:terminal_color_10	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_10 = s:green.gui " No dark version$/;"	v
g:terminal_color_10	vim/settings/thea.vim	/^  let g:terminal_color_10 = s:palette.green.gui " No dark version$/;"	v
g:terminal_color_11	nvim/colors/thea.vim	/^  let g:terminal_color_11 = s:palette.dark_yellow.gui$/;"	v
g:terminal_color_11	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_11 = s:dark_yellow.gui$/;"	v
g:terminal_color_11	vim/settings/thea.vim	/^  let g:terminal_color_11 = s:palette.dark_yellow.gui$/;"	v
g:terminal_color_12	nvim/colors/thea.vim	/^  let g:terminal_color_12 = s:palette.blue.gui " No dark version$/;"	v
g:terminal_color_12	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_12 = s:blue.gui " No dark version$/;"	v
g:terminal_color_12	vim/settings/thea.vim	/^  let g:terminal_color_12 = s:palette.blue.gui " No dark version$/;"	v
g:terminal_color_13	nvim/colors/thea.vim	/^  let g:terminal_color_13 = s:palette.purple.gui " No dark version$/;"	v
g:terminal_color_13	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_13 = s:purple.gui " No dark version$/;"	v
g:terminal_color_13	vim/settings/thea.vim	/^  let g:terminal_color_13 = s:palette.purple.gui " No dark version$/;"	v
g:terminal_color_14	nvim/colors/thea.vim	/^  let g:terminal_color_14 = s:palette.cyan.gui " No dark version$/;"	v
g:terminal_color_14	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_14 = s:cyan.gui " No dark version$/;"	v
g:terminal_color_14	vim/settings/thea.vim	/^  let g:terminal_color_14 = s:palette.cyan.gui " No dark version$/;"	v
g:terminal_color_15	nvim/colors/thea.vim	/^  let g:terminal_color_15 = s:palette.comment_grey.gui$/;"	v
g:terminal_color_15	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_15 = s:comment_grey.gui$/;"	v
g:terminal_color_15	vim/settings/thea.vim	/^  let g:terminal_color_15 = s:palette.comment_grey.gui$/;"	v
g:terminal_color_2	nvim/colors/thea.vim	/^  let g:terminal_color_2 =  s:palette.green.gui$/;"	v
g:terminal_color_2	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_2 =  s:green.gui$/;"	v
g:terminal_color_2	vim/settings/thea.vim	/^  let g:terminal_color_2 =  s:palette.green.gui$/;"	v
g:terminal_color_3	nvim/colors/thea.vim	/^  let g:terminal_color_3 =  s:palette.yellow.gui$/;"	v
g:terminal_color_3	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_3 =  s:yellow.gui$/;"	v
g:terminal_color_3	vim/settings/thea.vim	/^  let g:terminal_color_3 =  s:palette.yellow.gui$/;"	v
g:terminal_color_4	nvim/colors/thea.vim	/^  let g:terminal_color_4 =  s:palette.blue.gui$/;"	v
g:terminal_color_4	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_4 =  s:blue.gui$/;"	v
g:terminal_color_4	vim/settings/thea.vim	/^  let g:terminal_color_4 =  s:palette.blue.gui$/;"	v
g:terminal_color_5	nvim/colors/thea.vim	/^  let g:terminal_color_5 =  s:palette.purple.gui$/;"	v
g:terminal_color_5	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_5 =  s:purple.gui$/;"	v
g:terminal_color_5	vim/settings/thea.vim	/^  let g:terminal_color_5 =  s:palette.purple.gui$/;"	v
g:terminal_color_6	nvim/colors/thea.vim	/^  let g:terminal_color_6 =  s:palette.cyan.gui$/;"	v
g:terminal_color_6	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_6 =  s:cyan.gui$/;"	v
g:terminal_color_6	vim/settings/thea.vim	/^  let g:terminal_color_6 =  s:palette.cyan.gui$/;"	v
g:terminal_color_7	nvim/colors/thea.vim	/^  let g:terminal_color_7 =  s:palette.white.gui$/;"	v
g:terminal_color_7	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_7 =  s:white.gui$/;"	v
g:terminal_color_7	vim/settings/thea.vim	/^  let g:terminal_color_7 =  s:palette.white.gui$/;"	v
g:terminal_color_8	nvim/colors/thea.vim	/^  let g:terminal_color_8 =  s:palette.visual_grey.gui$/;"	v
g:terminal_color_8	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_8 =  s:visual_grey.gui$/;"	v
g:terminal_color_8	vim/settings/thea.vim	/^  let g:terminal_color_8 =  s:palette.visual_grey.gui$/;"	v
g:terminal_color_9	nvim/colors/thea.vim	/^  let g:terminal_color_9 =  s:palette.dark_red.gui$/;"	v
g:terminal_color_9	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_9 =  s:dark_red.gui$/;"	v
g:terminal_color_9	vim/settings/thea.vim	/^  let g:terminal_color_9 =  s:palette.dark_red.gui$/;"	v
g:terminal_color_background	nvim/colors/thea.vim	/^  let g:terminal_color_background = g:terminal_color_0$/;"	v
g:terminal_color_background	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_background = g:terminal_color_0$/;"	v
g:terminal_color_background	vim/settings/thea.vim	/^  let g:terminal_color_background = g:terminal_color_0$/;"	v
g:terminal_color_foreground	nvim/colors/thea.vim	/^  let g:terminal_color_foreground = g:terminal_color_7$/;"	v
g:terminal_color_foreground	nvim/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_foreground = g:terminal_color_7$/;"	v
g:terminal_color_foreground	vim/settings/thea.vim	/^  let g:terminal_color_foreground = g:terminal_color_7$/;"	v
g:test_verbose	nvim/plugged/vim-go/scripts/runtest.vim	/^  let g:test_verbose = 0$/;"	v
g:testname	nvim/plugged/vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:typescript_compiler_binary	nvim/plugged/typescript-vim/compiler/typescript.vim	/^  let g:typescript_compiler_binary = "tsc"$/;"	v
g:typescript_compiler_options	nvim/plugged/typescript-vim/compiler/typescript.vim	/^  let g:typescript_compiler_options = ""$/;"	v
g:user_emmet_install_global	nvim/plugged/emmet-vim/unittest.vim	/^      let g:user_emmet_install_global = s:old_user_emmet_install_global$/;"	v
g:user_emmet_leader_key	nvim/plugged/emmet-vim/plugin/emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
g:user_emmet_settings	nvim/plugged/emmet-vim/unittest.vim	/^      let g:user_emmet_settings = s:old_user_emmet_settings$/;"	v
g:user_emmet_settings	nvim/plugged/emmet-vim/unittest.vim	/^    let g:user_emmet_settings = {'variables': {'indentation': "\\t", 'use_selection': 1}}$/;"	v
g:vim_go_root	nvim/plugged/vim-go/scripts/runtest.vim	/^let g:vim_go_root = fnamemodify(getcwd(), ':p')$/;"	v
g:vimproc#	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^    let g:vimproc#{name} = nr$/;"	v
g:vimproc#dll_path	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let g:vimproc#dll_path =$/;"	v
g:vimproc#lexer#token_type	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let g:vimproc#lexer#token_type = {$/;"	v
g:vimproc_password_pattern	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let g:vimproc_password_pattern = g:vimproc#password_pattern$/;"	v
g:zoomwintab_hidetabbar	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^    let g:zoomwintab_hidetabbar = 1$/;"	v
g:zoomwintab_loaded	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^let g:zoomwintab_loaded = 1$/;"	v
g:zoomwintab_remap	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^    let g:zoomwintab_remap = 1$/;"	v
g<LeftMouse>	nvim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> g<LeftMouse> <LeftMouse>:GoDef<cr>$/;"	m
gather_candidates	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def gather_candidates(self, context):$/;"	m	class:Base
gather_candidates	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	nvim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gd	nvim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> gd :GoDef<cr>$/;"	m
generateImpliedEndTags	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) generateImpliedEndTags(exceptions ...string) {$/;"	f	unknown:html.parser
get	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^    def get(self, event):$/;"	m	class:Context
get	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	get: function( num ) {$/;"	M
get	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	get: function( url, data, callback, type ) {$/;"	M
getJSON	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	getJSON: function( url, data, callback ) {$/;"	M
getLogger	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def getLogger(name):$/;"	f
getScript	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	getScript: function( url, callback ) {$/;"	M
get_complete_position	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def get_complete_position(self, context):$/;"	m	class:Base
get_complete_position	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_configurations	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^    def get_configurations(self):$/;"	m	class:EditorConfigHandler
get_custom	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_custom(custom, source_name, key, default):$/;"	f
get_filenames	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^def get_filenames(path, filename):$/;"	f
get_filetype_var	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def get_filetype_var(self, filetype, var_name):$/;"	m	class:Base
get_input_pattern	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def get_input_pattern(self, filetype):$/;"	m	class:Base
get_properties	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/__init__.py	/^def get_properties(filename):$/;"	f
get_root	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src", _Appname, "apps" | Tail], _Path) ->$/;"	f
get_root	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_syn_names	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_syn_names(vim):$/;"	f
get_var	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def get_var(self, var_name):$/;"	m	class:Base
getlines	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def getlines(vim, start=1, end='$'):$/;"	f
gh_release_url	nvim/plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^gh_release_url = 'https:\/\/api.github.com\/repos\/' + repo_name + '\/releases\/latest'$/;"	v
gitgutter	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all(force) abort$/;"	f
gitgutter#async#available	nvim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	nvim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd, bufnr, handler) abort$/;"	f
gitgutter#debug#debug	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#log	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#diff#handler	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#handler(bufnr, diff) abort$/;"	f
gitgutter#diff#hunk_diff	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#hunk_diff(bufnr, full_diff, ...)$/;"	f
gitgutter#diff#parse_diff	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_hunks	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(bufnr, hunks) abort$/;"	f
gitgutter#diff#run_diff	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(bufnr, from, preserve_full_diff) abort$/;"	f
gitgutter#disable	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#highlight#define_highlights	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_column_highlight	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_column_highlight() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#line_disable	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_disable() abort$/;"	f
gitgutter#highlight#line_enable	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_enable() abort$/;"	f
gitgutter#highlight#line_toggle	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_toggle() abort$/;"	f
gitgutter#hunk#cursor_in_hunk	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#fix_file_references	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^  function! gitgutter#hunk#fix_file_references(filepath, hunk_diff)$/;"	f
gitgutter#hunk#hunks	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks(bufnr) abort$/;"	f
gitgutter#hunk#increment_lines_added	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(bufnr, count) abort$/;"	f
gitgutter#hunk#next_hunk	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#preview	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#preview() abort$/;"	f
gitgutter#hunk#reset	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset(bufnr) abort$/;"	f
gitgutter#hunk#set_hunks	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(bufnr, hunks) abort$/;"	f
gitgutter#hunk#stage	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#stage() abort$/;"	f
gitgutter#hunk#summary	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#hunk#undo	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#undo() abort$/;"	f
gitgutter#init_buffer	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#init_buffer(bufnr)$/;"	f
gitgutter#process_buffer	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, force) abort$/;"	f
gitgutter#sign#clear_signs	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs(bufnr) abort$/;"	f
gitgutter#sign#disable	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#disable() abort$/;"	f
gitgutter#sign#enable	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#enable() abort$/;"	f
gitgutter#sign#remove_dummy_sign	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_dummy_sign(bufnr, force) abort$/;"	f
gitgutter#sign#reset	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#toggle	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#toggle() abort$/;"	f
gitgutter#sign#update_signs	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(bufnr, modified_lines) abort$/;"	f
gitgutter#toggle	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#utility#cd_cmd	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#cd_cmd(bufnr, cmd) abort$/;"	f
gitgutter#utility#extension	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension(bufnr) abort$/;"	f
gitgutter#utility#file	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file(bufnr)$/;"	f
gitgutter#utility#getbufvar	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#is_active	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active(bufnr) abort$/;"	f
gitgutter#utility#repo_path	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#repo_path(bufnr, shellesc) abort$/;"	f
gitgutter#utility#set_repo_path	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_repo_path(bufnr) abort$/;"	f
gitgutter#utility#setbufvar	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shellescape	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#supports_overscore_sign	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#supports_overscore_sign()$/;"	f
gitgutter#utility#system	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#warn	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(bufnr, message, key) abort$/;"	f
gitgutter#utility#windows	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#windows()$/;"	f
global	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		global: true,$/;"	P
global	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	global: {},$/;"	P
globalEval	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	globalEval: function( data ) {$/;"	M
global_deoplete	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    global_deoplete = Deoplete(vim)$/;"	v
globruntime	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def globruntime(runtimepath, path):$/;"	f
globs	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    globs = m.__dict__.copy()$/;"	v
go#alternate#Switch	nvim/plugged/vim-go/autoload/go/alternate.vim	/^function! go#alternate#Switch(bang, cmd) abort$/;"	f
go#asmfmt#Format	nvim/plugged/vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#Format() abort$/;"	f
go#asmfmt#ToggleAsmFmtAutoSave	nvim/plugged/vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#ToggleAsmFmtAutoSave() abort$/;"	f
go#cmd#Build	nvim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Build(bang, ...) abort$/;"	f
go#cmd#BuildTags	nvim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#BuildTags(bang, ...) abort$/;"	f
go#cmd#Generate	nvim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Generate(bang, ...) abort$/;"	f
go#cmd#Install	nvim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Install(bang, ...) abort$/;"	f
go#cmd#Run	nvim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Run(bang, ...) abort$/;"	f
go#cmd#RunTerm	nvim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#RunTerm(bang, mode, files) abort$/;"	f
go#cmd#autowrite	nvim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#autowrite() abort$/;"	f
go#complete#Complete	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! go#complete#Complete(findstart, base) abort$/;"	f
go#complete#GetInfo	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! go#complete#GetInfo() abort$/;"	f
go#complete#Info	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! go#complete#Info(showstatus) abort$/;"	f
go#complete#ToggleAutoTypeInfo	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! go#complete#ToggleAutoTypeInfo() abort$/;"	f
go#config#AddtagsTransform	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AddtagsTransform() abort$/;"	f
go#config#AlternateMode	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AlternateMode() abort$/;"	f
go#config#AsmfmtAutosave	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AsmfmtAutosave() abort$/;"	f
go#config#AutoSameids	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AutoSameids() abort$/;"	f
go#config#AutoTypeInfo	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AutoTypeInfo() abort$/;"	f
go#config#AutodetectGopath	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AutodetectGopath() abort$/;"	f
go#config#BinPath	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#BinPath() abort$/;"	f
go#config#BuildTags	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#BuildTags() abort$/;"	f
go#config#Debug	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#Debug() abort$/;"	f
go#config#DebugAddress	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugAddress() abort$/;"	f
go#config#DebugCommands	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugCommands() abort$/;"	f
go#config#DebugWindows	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugWindows() abort$/;"	f
go#config#DeclsIncludes	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DeclsIncludes() abort$/;"	f
go#config#DeclsMode	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DeclsMode() abort$/;"	f
go#config#DefMode	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DefMode() abort$/;"	f
go#config#DefReuseBuffer	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DefReuseBuffer() abort$/;"	f
go#config#DocMaxHeight	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DocMaxHeight() abort$/;"	f
go#config#DocUrl	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DocUrl() abort$/;"	f
go#config#EchoCommandInfo	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#EchoCommandInfo() abort$/;"	f
go#config#ErrcheckBin	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ErrcheckBin() abort$/;"	f
go#config#FmtAutosave	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FmtAutosave() abort$/;"	f
go#config#FmtCommand	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FmtCommand() abort$/;"	f
go#config#FmtExperimental	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FmtExperimental() abort$/;"	f
go#config#FmtFailSilently	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FmtFailSilently() abort$/;"	f
go#config#FmtOptions	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FmtOptions() abort$/;"	f
go#config#FoldEnable	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FoldEnable(...) abort$/;"	f
go#config#GocodeProposeBuiltins	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GocodeProposeBuiltins() abort$/;"	f
go#config#GocodeProposeSource	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GocodeProposeSource() abort$/;"	f
go#config#GocodeSocketType	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GocodeSocketType() abort$/;"	f
go#config#GocodeUnimportedPackages	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GocodeUnimportedPackages() abort$/;"	f
go#config#GolintBin	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GolintBin() abort$/;"	f
go#config#GorenameBin	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GorenameBin() abort$/;"	f
go#config#GorenamePrefill	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GorenamePrefill() abort$/;"	f
go#config#GuruScope	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GuruScope() abort$/;"	f
go#config#HighlightArrayWhitespaceError	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightArrayWhitespaceError() abort$/;"	f
go#config#HighlightBuildConstraints	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightBuildConstraints() abort$/;"	f
go#config#HighlightChanWhitespaceError	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightChanWhitespaceError() abort$/;"	f
go#config#HighlightDebug	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightDebug() abort$/;"	f
go#config#HighlightExtraTypes	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightExtraTypes() abort$/;"	f
go#config#HighlightFields	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightFields() abort$/;"	f
go#config#HighlightFormatStrings	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightFormatStrings() abort$/;"	f
go#config#HighlightFunctionArguments	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightFunctionArguments() abort$/;"	f
go#config#HighlightFunctionCalls	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightFunctionCalls() abort$/;"	f
go#config#HighlightFunctions	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightFunctions() abort$/;"	f
go#config#HighlightGenerateTags	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightGenerateTags() abort$/;"	f
go#config#HighlightOperators	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightOperators() abort$/;"	f
go#config#HighlightSpaceTabError	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightSpaceTabError() abort$/;"	f
go#config#HighlightStringSpellcheck	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightStringSpellcheck() abort$/;"	f
go#config#HighlightTrailingWhitespaceError	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightTrailingWhitespaceError() abort$/;"	f
go#config#HighlightTypes	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightTypes() abort$/;"	f
go#config#HighlightVariableAssignments	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightVariableAssignments() abort$/;"	f
go#config#HighlightVariableDeclarations	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightVariableDeclarations() abort$/;"	f
go#config#InfoMode	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#InfoMode() abort$/;"	f
go#config#ListAutoclose	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ListAutoclose() abort$/;"	f
go#config#ListHeight	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ListHeight() abort$/;"	f
go#config#ListType	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ListType() abort$/;"	f
go#config#ListTypeCommands	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ListTypeCommands() abort$/;"	f
go#config#MetalinterAutosave	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#MetalinterAutosave() abort$/;"	f
go#config#MetalinterAutosaveEnabled	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#MetalinterAutosaveEnabled() abort$/;"	f
go#config#MetalinterCommand	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#MetalinterCommand() abort$/;"	f
go#config#MetalinterDeadline	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#MetalinterDeadline() abort$/;"	f
go#config#MetalinterDisabled	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#MetalinterDisabled() abort$/;"	f
go#config#MetalinterEnabled	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#MetalinterEnabled() abort$/;"	f
go#config#ModFmtAutosave	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ModFmtAutosave() abort$/;"	f
go#config#PlayBrowserCommand	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#PlayBrowserCommand() abort$/;"	f
go#config#PlayOpenBrowser	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#PlayOpenBrowser() abort$/;"	f
go#config#SearchBinPathFirst	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SearchBinPathFirst() abort$/;"	f
go#config#SetAsmfmtAutosave	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetAsmfmtAutosave(value) abort$/;"	f
go#config#SetAutoSameids	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetAutoSameids(value) abort$/;"	f
go#config#SetAutoTypeInfo	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetAutoTypeInfo(value) abort$/;"	f
go#config#SetBuildTags	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetBuildTags(value) abort$/;"	f
go#config#SetDebugDiag	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetDebugDiag(value) abort$/;"	f
go#config#SetFmtAutosave	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetFmtAutosave(value) abort$/;"	f
go#config#SetGuruScope	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetGuruScope(scope) abort$/;"	f
go#config#SetMetalinterAutosave	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetMetalinterAutosave(value) abort$/;"	f
go#config#SetModFmtAutosave	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetModFmtAutosave(value) abort$/;"	f
go#config#SetTemplateAutocreate	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetTemplateAutocreate(value) abort$/;"	f
go#config#SetTermEnabled	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetTermEnabled(value) abort$/;"	f
go#config#SnippetEngine	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SnippetEngine() abort$/;"	f
go#config#StatuslineDuration	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#StatuslineDuration() abort$/;"	f
go#config#TemplateAutocreate	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TemplateAutocreate() abort$/;"	f
go#config#TemplateFile	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TemplateFile() abort$/;"	f
go#config#TemplateTestFile	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TemplateTestFile() abort$/;"	f
go#config#TemplateUsePkg	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TemplateUsePkg() abort$/;"	f
go#config#TermEnabled	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TermEnabled() abort$/;"	f
go#config#TermHeight	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TermHeight() abort$/;"	f
go#config#TermMode	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TermMode() abort$/;"	f
go#config#TermWidth	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TermWidth() abort$/;"	f
go#config#TestShowName	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TestShowName() abort$/;"	f
go#config#TestTimeout	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TestTimeout() abort$/;"	f
go#config#TextobjIncludeFunctionDoc	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TextobjIncludeFunctionDoc() abort$/;"	f
go#config#TextobjIncludeVariable	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TextobjIncludeVariable() abort$/;"	f
go#config#VersionWarning	nvim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#VersionWarning() abort$/;"	f
go#coverage#Browser	nvim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#Browser(bang, ...) abort$/;"	f
go#coverage#Buffer	nvim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#Buffer(bang, ...) abort$/;"	f
go#coverage#BufferToggle	nvim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#BufferToggle(bang, ...) abort$/;"	f
go#coverage#Clear	nvim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#Clear() abort$/;"	f
go#coverage#genmatch	nvim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#genmatch(cov) abort$/;"	f
go#coverage#overlay	nvim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#overlay(file) abort$/;"	f
go#coverage#parsegocoverline	nvim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#parsegocoverline(line) abort$/;"	f
go#debug#BalloonExpr	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#BalloonExpr() abort$/;"	f
go#debug#Breakpoint	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Breakpoint(...) abort$/;"	f
go#debug#Print	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Print(arg) abort$/;"	f
go#debug#Restart	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Restart() abort$/;"	f
go#debug#Set	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Set(symbol, value) abort$/;"	f
go#debug#Stack	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Stack(name) abort$/;"	f
go#debug#Start	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Start(is_test, ...) abort$/;"	f
go#debug#Stop	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Stop() abort$/;"	f
go#decls#Decls	nvim/plugged/vim-go/autoload/go/decls.vim	/^function! go#decls#Decls(mode, ...) abort$/;"	f
go#def#Jump	nvim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#Jump(mode) abort$/;"	f
go#def#SelectStackEntry	nvim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#SelectStackEntry() abort$/;"	f
go#def#Stack	nvim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#Stack(...) abort$/;"	f
go#def#StackClear	nvim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#StackClear(...) abort$/;"	f
go#def#StackPop	nvim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#StackPop(...) abort$/;"	f
go#def#StackUI	nvim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#StackUI() abort$/;"	f
go#def#jump_to_declaration	nvim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#jump_to_declaration(out, mode, bin_name) abort$/;"	f
go#doc#Open	nvim/plugged/vim-go/autoload/go/doc.vim	/^function! go#doc#Open(newmode, mode, ...) abort$/;"	f
go#doc#OpenBrowser	nvim/plugged/vim-go/autoload/go/doc.vim	/^function! go#doc#OpenBrowser(...) abort$/;"	f
go#fillstruct#FillStruct	nvim/plugged/vim-go/autoload/go/fillstruct.vim	/^function! go#fillstruct#FillStruct() abort$/;"	f
go#fmt#Format	nvim/plugged/vim-go/autoload/go/fmt.vim	/^function! go#fmt#Format(withGoimport) abort$/;"	f
go#fmt#ToggleFmtAutoSave	nvim/plugged/vim-go/autoload/go/fmt.vim	/^function! go#fmt#ToggleFmtAutoSave() abort$/;"	f
go#fmt#run	nvim/plugged/vim-go/autoload/go/fmt.vim	/^function! go#fmt#run(bin_name, source, target)$/;"	f
go#fmt#update_file	nvim/plugged/vim-go/autoload/go/fmt.vim	/^function! go#fmt#update_file(source, target)$/;"	f
go#guru#AutoToogleSameIds	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#AutoToogleSameIds() abort$/;"	f
go#guru#Callees	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#Callees(selected) abort$/;"	f
go#guru#Callers	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#Callers(selected) abort$/;"	f
go#guru#Callstack	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#Callstack(selected) abort$/;"	f
go#guru#ChannelPeers	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#ChannelPeers(selected) abort$/;"	f
go#guru#ClearSameIds	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#ClearSameIds() abort$/;"	f
go#guru#Describe	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#Describe(selected) abort$/;"	f
go#guru#DescribeInfo	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#DescribeInfo(showstatus) abort$/;"	f
go#guru#Freevars	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#Freevars(selected) abort$/;"	f
go#guru#Implements	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#Implements(selected) abort$/;"	f
go#guru#PointsTo	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#PointsTo(selected) abort$/;"	f
go#guru#Referrers	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#Referrers(selected) abort$/;"	f
go#guru#SameIds	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#SameIds(showstatus) abort$/;"	f
go#guru#Scope	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#Scope(...) abort$/;"	f
go#guru#ToggleSameIds	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#ToggleSameIds() abort$/;"	f
go#guru#Whicherrs	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! go#guru#Whicherrs(selected) abort$/;"	f
go#iferr#Generate	nvim/plugged/vim-go/autoload/go/iferr.vim	/^function! go#iferr#Generate()$/;"	f
go#impl#Complete	nvim/plugged/vim-go/autoload/go/impl.vim	/^function! go#impl#Complete(arglead, cmdline, cursorpos) abort$/;"	f
go#impl#Impl	nvim/plugged/vim-go/autoload/go/impl.vim	/^function! go#impl#Impl(...) abort$/;"	f
go#import#SwitchImport	nvim/plugged/vim-go/autoload/go/import.vim	/^function! go#import#SwitchImport(enabled, localname, path, bang) abort$/;"	f
go#issue#New	nvim/plugged/vim-go/autoload/go/issue.vim	/^function! go#issue#New() abort$/;"	f
go#job#Options	nvim/plugged/vim-go/autoload/go/job.vim	/^function! go#job#Options(args)$/;"	f
go#job#Spawn	nvim/plugged/vim-go/autoload/go/job.vim	/^function! go#job#Spawn(cmd, args)$/;"	f
go#job#Start	nvim/plugged/vim-go/autoload/go/job.vim	/^function! go#job#Start(cmd, options)$/;"	f
go#job#Stop	nvim/plugged/vim-go/autoload/go/job.vim	/^function! go#job#Stop(job) abort$/;"	f
go#job#Wait	nvim/plugged/vim-go/autoload/go/job.vim	/^function! go#job#Wait(job) abort$/;"	f
go#keyify#Keyify	nvim/plugged/vim-go/autoload/go/keyify.vim	/^function! go#keyify#Keyify()$/;"	f
go#lint#Errcheck	nvim/plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#Errcheck(bang, ...) abort$/;"	f
go#lint#Golint	nvim/plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#Golint(bang, ...) abort$/;"	f
go#lint#Gometa	nvim/plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#Gometa(bang, autosave, ...) abort$/;"	f
go#lint#ToggleMetaLinterAutoSave	nvim/plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#ToggleMetaLinterAutoSave() abort$/;"	f
go#lint#Vet	nvim/plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#Vet(bang, ...) abort$/;"	f
go#list#Clean	nvim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Clean(listtype) abort$/;"	f
go#list#Close	nvim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Close(listtype) abort$/;"	f
go#list#Get	nvim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Get(listtype) abort$/;"	f
go#list#JumpToFirst	nvim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#JumpToFirst(listtype) abort$/;"	f
go#list#Parse	nvim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Parse(listtype, items, title) abort$/;"	f
go#list#ParseFormat	nvim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#ParseFormat(listtype, errformat, items, title) abort$/;"	f
go#list#Populate	nvim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Populate(listtype, items, title) abort$/;"	f
go#list#Type	nvim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Type(for) abort$/;"	f
go#list#Window	nvim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Window(listtype, ...) abort$/;"	f
go#mod#Format	nvim/plugged/vim-go/autoload/go/mod.vim	/^function! go#mod#Format() abort$/;"	f
go#mod#ToggleModFmtAutoSave	nvim/plugged/vim-go/autoload/go/mod.vim	/^function! go#mod#ToggleModFmtAutoSave() abort$/;"	f
go#mod#update_file	nvim/plugged/vim-go/autoload/go/mod.vim	/^function! go#mod#update_file(source, target)$/;"	f
go#package#Complete	nvim/plugged/vim-go/autoload/go/package.vim	/^function! go#package#Complete(ArgLead, CmdLine, CursorPos) abort$/;"	f
go#package#CompleteMembers	nvim/plugged/vim-go/autoload/go/package.vim	/^function! go#package#CompleteMembers(package, member) abort$/;"	f
go#package#FromPath	nvim/plugged/vim-go/autoload/go/package.vim	/^function! go#package#FromPath(arg) abort$/;"	f
go#package#ImportPath	nvim/plugged/vim-go/autoload/go/package.vim	/^function! go#package#ImportPath() abort$/;"	f
go#package#Paths	nvim/plugged/vim-go/autoload/go/package.vim	/^function! go#package#Paths() abort$/;"	f
go#path#BinPath	nvim/plugged/vim-go/autoload/go/path.vim	/^function! go#path#BinPath() abort$/;"	f
go#path#CheckBinPath	nvim/plugged/vim-go/autoload/go/path.vim	/^function! go#path#CheckBinPath(binpath) abort$/;"	f
go#path#Default	nvim/plugged/vim-go/autoload/go/path.vim	/^function! go#path#Default() abort$/;"	f
go#path#Detect	nvim/plugged/vim-go/autoload/go/path.vim	/^function! go#path#Detect() abort$/;"	f
go#path#GoPath	nvim/plugged/vim-go/autoload/go/path.vim	/^function! go#path#GoPath(...) abort$/;"	f
go#play#Share	nvim/plugged/vim-go/autoload/go/play.vim	/^function! go#play#Share(count, line1, line2) abort$/;"	f
go#rename#Complete	nvim/plugged/vim-go/autoload/go/rename.vim	/^function! go#rename#Complete(lead, cmdline, cursor)$/;"	f
go#rename#Rename	nvim/plugged/vim-go/autoload/go/rename.vim	/^function! go#rename#Rename(bang, ...) abort$/;"	f
go#statusline#Clear	nvim/plugged/vim-go/autoload/go/statusline.vim	/^function! go#statusline#Clear(timer_id) abort$/;"	f
go#statusline#Show	nvim/plugged/vim-go/autoload/go/statusline.vim	/^function! go#statusline#Show() abort$/;"	f
go#statusline#Update	nvim/plugged/vim-go/autoload/go/statusline.vim	/^function! go#statusline#Update(status_dir, status) abort$/;"	f
go#tags#Add	nvim/plugged/vim-go/autoload/go/tags.vim	/^function! go#tags#Add(start, end, count, ...) abort$/;"	f
go#tags#Remove	nvim/plugged/vim-go/autoload/go/tags.vim	/^function! go#tags#Remove(start, end, count, ...) abort$/;"	f
go#tags#run	nvim/plugged/vim-go/autoload/go/tags.vim	/^function! go#tags#run(start, end, offset, mode, fname, test_mode, ...) abort$/;"	f
go#template#ToggleAutoCreate	nvim/plugged/vim-go/autoload/go/template.vim	/^function! go#template#ToggleAutoCreate() abort$/;"	f
go#template#create	nvim/plugged/vim-go/autoload/go/template.vim	/^function! go#template#create() abort$/;"	f
go#term#new	nvim/plugged/vim-go/autoload/go/term.vim	/^function! go#term#new(bang, cmd) abort$/;"	f
go#term#newmode	nvim/plugged/vim-go/autoload/go/term.vim	/^function! go#term#newmode(bang, cmd, mode) abort$/;"	f
go#test#Func	nvim/plugged/vim-go/autoload/go/test.vim	/^function! go#test#Func(bang, ...) abort$/;"	f
go#test#Test	nvim/plugged/vim-go/autoload/go/test.vim	/^function! go#test#Test(bang, compile, ...) abort$/;"	f
go#textobj#Comment	nvim/plugged/vim-go/autoload/go/textobj.vim	/^function! go#textobj#Comment(mode) abort$/;"	f
go#textobj#Function	nvim/plugged/vim-go/autoload/go/textobj.vim	/^function! go#textobj#Function(mode) abort$/;"	f
go#textobj#FunctionJump	nvim/plugged/vim-go/autoload/go/textobj.vim	/^function! go#textobj#FunctionJump(mode, direction) abort$/;"	f
go#textobj#FunctionLocation	nvim/plugged/vim-go/autoload/go/textobj.vim	/^function! go#textobj#FunctionLocation(direction, cnt) abort$/;"	f
go#tool#Deps	nvim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Deps() abort$/;"	f
go#tool#ExecuteInDir	nvim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#ExecuteInDir(cmd) abort$/;"	f
go#tool#Exists	nvim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Exists(importpath) abort$/;"	f
go#tool#Files	nvim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Files(...) abort$/;"	f
go#tool#FilterValids	nvim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#FilterValids(items) abort$/;"	f
go#tool#Imports	nvim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Imports() abort$/;"	f
go#tool#Info	nvim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Info(showstatus) abort$/;"	f
go#tool#OpenBrowser	nvim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#OpenBrowser(url) abort$/;"	f
go#tool#PackageName	nvim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#PackageName() abort$/;"	f
go#tool#ParseErrors	nvim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#ParseErrors(lines) abort$/;"	f
go#tool#ValidFiles	nvim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#ValidFiles(...)$/;"	f
go#ui#CloseWindow	nvim/plugged/vim-go/autoload/go/ui.vim	/^function! go#ui#CloseWindow() abort$/;"	f
go#ui#GetReturnWindow	nvim/plugged/vim-go/autoload/go/ui.vim	/^function! go#ui#GetReturnWindow() abort$/;"	f
go#ui#OpenDefinition	nvim/plugged/vim-go/autoload/go/ui.vim	/^function! go#ui#OpenDefinition(filter) abort$/;"	f
go#ui#OpenWindow	nvim/plugged/vim-go/autoload/go/ui.vim	/^function! go#ui#OpenWindow(title, content, filetype) abort$/;"	f
go#util#EchoError	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#EchoError(msg)$/;"	f
go#util#EchoInfo	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#EchoInfo(msg)$/;"	f
go#util#EchoProgress	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#EchoProgress(msg)$/;"	f
go#util#EchoSuccess	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#EchoSuccess(msg)$/;"	f
go#util#EchoWarning	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#EchoWarning(msg)$/;"	f
go#util#Exec	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Exec(cmd, ...) abort$/;"	f
go#util#GetLines	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#GetLines()$/;"	f
go#util#HasDebug	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#HasDebug(flag)$/;"	f
go#util#IsMac	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#IsMac() abort$/;"	f
go#util#IsUsingCygwinShell	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#IsUsingCygwinShell()$/;"	f
go#util#IsWin	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#IsWin() abort$/;"	f
go#util#Join	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Join(...) abort$/;"	f
go#util#LineEnding	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#LineEnding() abort$/;"	f
go#util#Offset	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Offset(line, col) abort$/;"	f
go#util#OffsetCursor	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#OffsetCursor() abort$/;"	f
go#util#PathListSep	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#PathListSep() abort$/;"	f
go#util#PathSep	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#PathSep() abort$/;"	f
go#util#ShellError	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#ShellError() abort$/;"	f
go#util#Shellescape	nvim/plugged/vim-go/autoload/go/util.vim	/^fu! go#util#Shellescape(arg)$/;"	f
go#util#Shelljoin	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Shelljoin(arglist, ...) abort$/;"	f
go#util#Shelllist	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Shelllist(arglist, ...) abort$/;"	f
go#util#StripPathSep	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#StripPathSep(path) abort$/;"	f
go#util#StripTrailingSlash	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#StripTrailingSlash(paths) abort$/;"	f
go#util#System	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#System(str, ...) abort$/;"	f
go#util#Windo	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Windo(command) abort$/;"	f
go#util#archive	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#archive()$/;"	f
go#util#camelcase	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#camelcase(word) abort$/;"	f
go#util#env	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#env(key) abort$/;"	f
go#util#goarch	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#goarch() abort$/;"	f
go#util#gomod	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#gomod() abort$/;"	f
go#util#goos	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#goos() abort$/;"	f
go#util#gopath	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#gopath() abort$/;"	f
go#util#goroot	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#goroot() abort$/;"	f
go#util#has_job	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#has_job(...) abort$/;"	f
go#util#osarch	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#osarch() abort$/;"	f
go#util#pascalcase	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#pascalcase(word) abort$/;"	f
go#util#snakecase	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#snakecase(word) abort$/;"	f
go#util#snippetcase	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#snippetcase(word) abort$/;"	f
go#util#tempdir	nvim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#tempdir(prefix) abort$/;"	f
gopher-body	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(-0.18574987,-0.98259706,0.98259706,-0.18574987,-1213.2665,1828./;"	i
gopher-eye	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="translate(381.30424,802.02286)">$/;"	i
gopher-iris	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="translate(-9.2596241,38.869516)">$/;"	i
gopher-limbs	nvim/plugged/vim-go/assets/vim-go.svg	/^       osb:paint="solid">$/;"	i
gopher-lines	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(2.0620253,3.9293227,1.3839016,-0.24027903,2506.9621,8572.3972)"/;"	i
gopher-nose	nvim/plugged/vim-go/assets/vim-go.svg	/^       osb:paint="solid">$/;"	i
gotest#assert_buffer	nvim/plugged/vim-go/autoload/gotest.vim	/^fun! gotest#assert_buffer(skipHeader, want) abort$/;"	f
gotest#assert_fixture	nvim/plugged/vim-go/autoload/gotest.vim	/^fun! gotest#assert_fixture(path) abort$/;"	f
gotest#assert_quickfix	nvim/plugged/vim-go/autoload/gotest.vim	/^func! gotest#assert_quickfix(got, want) abort$/;"	f
gotest#load_fixture	nvim/plugged/vim-go/autoload/gotest.vim	/^fun! gotest#load_fixture(path) abort$/;"	f
gotest#write_file	nvim/plugged/vim-go/autoload/gotest.vim	/^fun! gotest#write_file(path, contents) abort$/;"	f
goyo	nvim/plugged/goyo.vim/autoload/goyo.vim	/^  augroup goyo$/;"	a
goyo#execute	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! goyo#execute(bang, dim)$/;"	f
goyop	nvim/plugged/goyo.vim/autoload/goyo.vim	/^  augroup goyop$/;"	a
grep	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	grep: function( elems, callback, inv ) {$/;"	M
grid4305	nvim/plugged/vim-go/assets/vim-go.svg	/^       originy="-274.01154" \/>$/;"	i
gt	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			gt: function(a,i,m){return i>m[3]-0;},$/;"	M
gt	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			gt: function(a,i,m){return i>m[3]-0;},$/;"	P
guid	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	guid: 1,$/;"	P
gutentags#add_job	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	nvim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	nvim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	nvim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_io_cb	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_io_cb(chan, msg) abort$/;"	f
gutentags#error	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	nvim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	nvim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	nvim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#remove_job	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	nvim/plugged/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
h1	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^h1 {$/;"	s
h3 a	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^li a, h3 a {$/;"	s
h3 a:hover	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^li a:hover, li a:active, h3 a:hover, li a:active {$/;"	s
handle	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	handle: function(event) {$/;"	M
handleError	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	handleError: function( s, xhr, status, e ) {$/;"	M
handler	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					handler = types.handler;$/;"	P
handler	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			handler: function(event) {$/;"	M
handlers	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				handlers = events[type] = {};$/;"	P
handlers	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		handlers = ( jQuery.data(this, "events") || {} )[event.type];$/;"	P
has	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			has: function(a,i,m){return jQuery.find(m[3],a).length;},$/;"	M
has	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			has: function(a,i,m){return jQuery.find(m[3],a).length;},$/;"	P
has	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		has: function( elem, className ) {$/;"	M
hasClass	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	hasClass: function( selector ) {$/;"	M
hasSelfClosingToken	nvim/plugged/vim-go/test/parse.go	/^	hasSelfClosingToken bool$/;"	m	struct:html.parser
head	nvim/plugged/vim-go/test/parse.go	/^	head, form *Node$/;"	m	struct:html.parser
header	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			header: function(a){return \/h\\d\/i.test(a.nodeName);},$/;"	M
header	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			header: function(a){return \/h\\d\/i.test(a.nodeName);},$/;"	P
health#deoplete#check	nvim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! health#deoplete#check() abort$/;"	f
height	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					height: "toggle", width: "toggle", opacity: "toggle"$/;"	P
height	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				height: "hide", width: "hide", opacity: "hide"$/;"	P
height	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				height: "show", width: "show", opacity: "show"$/;"	P
help	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^help:$/;"	t
helper	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func helper(t *testing.T) {$/;"	f	package:play
hidden	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				hidden = jQuery(this).is(":hidden"), self = this;$/;"	P
hidden	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			hidden: function(a){return "hidden"==a.type||jQuery.css(a,"display")=="none"||jQuery.css(a,"v/;"	M
hidden	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			hidden: function(a){return "hidden"==a.type||jQuery.css(a,"display")=="none"||jQuery.css(a,"v/;"	P
hide	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	hide: function(){$/;"	M
hide	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	hide: function(speed,callback){$/;"	M
highlight	nvim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^    def highlight(self):$/;"	m	class:Source
hover	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	hover: function(fnOver, fnOut) {$/;"	M
html	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^html:$/;"	t
html	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			html: "text\/html",$/;"	P
html	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	html: function( value ) {$/;"	M
html	nvim/plugged/vim-go/test/parse.go	/^package html$/;"	p
html2vimdoc	nvim/plugged/vim-localvimrc/Makefile	/^html2vimdoc = $(vim-tools)\/bin\/html2vimdoc$/;"	m
html_static_path	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^html_static_path = ['_static']$/;"	v
html_theme	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^html_theme = 'agogo'$/;"	v
htmlhelp	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^htmlhelp:$/;"	t
htmlhelp_basename	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^htmlhelp_basename = 'EditorConfigPythonCoredoc'$/;"	v
httpData	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	httpData: function( xhr, type, filter ) {$/;"	M
httpNotModified	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	httpNotModified: function( xhr, url ) {$/;"	M
httpSuccess	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	httpSuccess: function( xhr ) {$/;"	M
i	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		i = 2;$/;"	P
i	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var i = 0, elem, pos = first.length;$/;"	V
i	nvim/plugged/vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	nvim/plugged/vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
ic	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    omap <buffer> ic <Plug>GitGutterTextObjectInnerPending$/;"	m
ic	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    xmap <buffer> ic <Plug>GitGutterTextObjectInnerVisual$/;"	m
ic	nvim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> ic :<c-u>call go#textobj#Comment('i')<cr>$/;"	m
ic	nvim/plugged/vim-go/ftplugin/go.vim	/^  xnoremap <buffer> <silent> ic :<c-u>call go#textobj#Comment('i')<cr>$/;"	m
id	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			id = elem[ expando ] = ++uuid;$/;"	P
if	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		if( array != null ){$/;"	M
if	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		if( data != undefined ) {$/;"	M
if	nvim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> if :<c-u>call go#textobj#Function('i')<cr>$/;"	m
if	nvim/plugged/vim-go/ftplugin/go.vim	/^  xnoremap <buffer> <silent> if :<c-u>call go#textobj#Function('i')<cr>$/;"	m
im	nvim/plugged/vim-go/test/parse.go	/^	im insertionMode$/;"	m	struct:html.parser
image	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			image: function(a){return "image"==a.type;},$/;"	M
image	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			image: function(a){return "image"==a.type;},$/;"	P
img	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^img {$/;"	s
import_plugin	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def import_plugin(path, source, classname):$/;"	f
inArray	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	inArray: function( elem, array ) {$/;"	M
inBodyEndTagFormatting	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) inBodyEndTagFormatting(tagAtom a.Atom) {$/;"	f	unknown:html.parser
inBodyEndTagOther	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) inBodyEndTagOther(tagAtom a.Atom) {$/;"	f	unknown:html.parser
inBodyIM	nvim/plugged/vim-go/test/parse.go	/^func inBodyIM(p *parser) bool {$/;"	f	package:html
inCaptionIM	nvim/plugged/vim-go/test/parse.go	/^func inCaptionIM(p *parser) bool {$/;"	f	package:html
inCellIM	nvim/plugged/vim-go/test/parse.go	/^func inCellIM(p *parser) bool {$/;"	f	package:html
inColumnGroupIM	nvim/plugged/vim-go/test/parse.go	/^func inColumnGroupIM(p *parser) bool {$/;"	f	package:html
inForeignContent	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) inForeignContent() bool {$/;"	f	unknown:html.parser
inFramesetIM	nvim/plugged/vim-go/test/parse.go	/^func inFramesetIM(p *parser) bool {$/;"	f	package:html
inHeadIM	nvim/plugged/vim-go/test/parse.go	/^func inHeadIM(p *parser) bool {$/;"	f	package:html
inRowIM	nvim/plugged/vim-go/test/parse.go	/^func inRowIM(p *parser) bool {$/;"	f	package:html
inSelectIM	nvim/plugged/vim-go/test/parse.go	/^func inSelectIM(p *parser) bool {$/;"	f	package:html
inSelectInTableIM	nvim/plugged/vim-go/test/parse.go	/^func inSelectInTableIM(p *parser) bool {$/;"	f	package:html
inTableBodyIM	nvim/plugged/vim-go/test/parse.go	/^func inTableBodyIM(p *parser) bool {$/;"	f	package:html
inTableIM	nvim/plugged/vim-go/test/parse.go	/^func inTableIM(p *parser) bool {$/;"	f	package:html
indentLine	nvim/plugged/indentline/after/plugin/indentLine.vim	/^augroup indentLine$/;"	a
index	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def index(self, key):$/;"	m	class:OrderedDict
index	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	index: function( elem ) {$/;"	M
indexOfElementInScope	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) indexOfElementInScope(s scope, matchTags ...a.Atom) int {$/;"	f	unknown:html.parser
info	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def info(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
init	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^init = False$/;"	v
init	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	init: function( selector, context ) {$/;"	M
init_channel	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def init_channel(self, args):$/;"	m	class:DeopleteHandlers
init_context	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def init_context(self):$/;"	m	class:Deoplete
initialIM	nvim/plugged/vim-go/test/parse.go	/^func initialIM(p *parser) bool {$/;"	f	package:html
input	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			input: function(a){return \/input|select|textarea|button\/i.test(a.nodeName);},$/;"	M
input	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			input: function(a){return \/input|select|textarea|button\/i.test(a.nodeName);},$/;"	P
insert	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def insert(self, index, key, value):$/;"	m	class:OrderedDict
insertAfter	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	insertAfter: "after",$/;"	P
insertBefore	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	insertBefore: "before",$/;"	P
insertionMode	nvim/plugged/vim-go/test/parse.go	/^type insertionMode func(*parser) bool$/;"	t	package:html
install	nvim/plugged/deoplete.nvim/Makefile	/^install: vim-themis$/;"	t
install	nvim/plugged/vim-go/Makefile	/^install:$/;"	t
install_vim	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^:install_vim$/;"	l
is	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	is: function( selector ) {$/;"	M
isFunction	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	isFunction: function( fn ) {$/;"	M
isReady	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	isReady: false,$/;"	P
isSimple	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	isSimple = \/^.[^:#\\[\\.]*$\/,$/;"	P
isXMLDoc	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	isXMLDoc: function( elem ) {$/;"	M
is_debug_enabled	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    is_debug_enabled = False$/;"	v	class:LoggingMixin
items	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def items(self):$/;"	m	class:OrderedDict
iteritems	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def iteritems(self):$/;"	m	class:OrderedDict
iterkeys	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def iterkeys(self):$/;"	m	class:OrderedDict
itervalues	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def itervalues(self):$/;"	m	class:OrderedDict
ival	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					ival = null;$/;"	P
j	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    nn <buffer> <silent> j gj$/;"	m
j	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    vn <buffer> <silent> j gj$/;"	m
jQuery	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				jQuery( "option", this ).each(function(){$/;"	M
jQuery	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jQuery( "*", this ).add(this).each(function(){$/;"	M
jQuery	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery(window).bind("unload", function() {$/;"	M
javascript_syntax_detection	nvim/plugged/vim-javascript/ftdetect/javascript.vim	/^augroup javascript_syntax_detection$/;"	a
join_version	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/versiontools.py	/^def join_version(version_tuple):$/;"	f
jquery	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	jquery: "1.2.6",$/;"	P
json	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^json:$/;"	t
json	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			json: "application\/json, text\/javascript",$/;"	P
jsonp	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			jsonp = "jsonp" + jsc++;$/;"	P
k	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    nn <buffer> <silent> k gk$/;"	m
k	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    vn <buffer> <silent> k gk$/;"	m
keys	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def keys(self):$/;"	m	class:OrderedDict
l	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let l = line('.')$/;"	v
l	nvim/plugged/vim-easymotion/t/operator_pending_spec.vim	/^        let l = line('.')$/;"	v
l	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^        let l = line('.')$/;"	v
last	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			last = t;$/;"	P
last	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			last: function(a,i,m,r){return i==r.length-1;},$/;"	M
last	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			last: function(a,i,m,r){return i==r.length-1;},$/;"	P
lastModified	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	lastModified: {},$/;"	P
lastToggle	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.lastToggle = ( this.lastToggle || 0 ) % i;$/;"	P
last_find	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^def last_find(s, needles):$/;"	f
lasterror	nvim/plugged/vimproc.vim/src/proc_w32.c	/^lasterror()$/;"	f	typeref:typename:const char *	file:
latex	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^latex:$/;"	t
latex_documents	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^latex_documents = [$/;"	v
latexpdf	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^latexpdf:$/;"	t
layer1	nvim/plugged/vim-go/assets/vim-go.svg	/^     transform="translate(-15.732722,-256.54886)">$/;"	i
layer11	nvim/plugged/vim-go/assets/vim-go.svg	/^     transform="translate(-15.732722,-256.54886)">$/;"	i
layer12	nvim/plugged/vim-go/assets/vim-go.svg	/^     transform="translate(-15.732722,-256.54886)">$/;"	i
layer2	nvim/plugged/vim-go/assets/vim-go.svg	/^     transform="translate(-15.732722,-256.54886)">$/;"	i
layer3	nvim/plugged/vim-go/assets/vim-go.svg	/^     transform="translate(-15.732722,-256.54886)">$/;"	i
layer4	nvim/plugged/vim-go/assets/vim-go.svg	/^     transform="translate(-15.732722,-256.54886)">$/;"	i
layer5	nvim/plugged/vim-go/assets/vim-go.svg	/^     transform="translate(-15.732722,-256.54886)">$/;"	i
layer6	nvim/plugged/vim-go/assets/vim-go.svg	/^     transform="translate(-15.732722,-256.54886)">$/;"	i
layer7	nvim/plugged/vim-go/assets/vim-go.svg	/^     transform="translate(-15.732722,-256.54886)">$/;"	i
layer8	nvim/plugged/vim-go/assets/vim-go.svg	/^     transform="translate(-15.732722,-256.54886)">$/;"	i
layer9	nvim/plugged/vim-go/assets/vim-go.svg	/^     transform="translate(-15.732722,-256.54886)">$/;"	i
left	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				left: offset.left - parentOffset.left$/;"	P
left	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var left = 0, top = 0, results;$/;"	V
left	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var left = 0, top = 0, elem = this[0], results;$/;"	V
length	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.length = 1;$/;"	P
length	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.length = 0;$/;"	P
length	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	length: 0,$/;"	P
lengthof	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define lengthof(/;"	d	file:
less	nvim/plugged/syntastic/syntax_checkers/less/less-lint.js	/^  less = require('less');$/;"	P
li a	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^li a, h3 a {$/;"	s
li a:active	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^li a:hover, li a:active, h3 a:hover, li a:active {$/;"	s
li a:hover	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^li a:hover, li a:active, h3 a:hover, li a:active {$/;"	s
lightline	nvim/plugged/lightline.vim/autoload/lightline.vim	/^  augroup lightline$/;"	a
lightline	nvim/plugged/lightline.vim/autoload/lightline.vim	/^  augroup lightline-disable$/;"	a
lightline	nvim/plugged/lightline.vim/plugin/lightline.vim	/^augroup lightline$/;"	a
lightline#colorscheme	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#colorscheme() abort$/;"	f
lightline#colorscheme#background	nvim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^  function! lightline#colorscheme#background() abort$/;"	f
lightline#colorscheme#fill	nvim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#fill(p) abort$/;"	f
lightline#colorscheme#flatten	nvim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#flatten(p) abort$/;"	f
lightline#colortable#gui2cui	nvim/plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui(rgb, fallback) abort$/;"	f
lightline#colortable#name_to_rgb	nvim/plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#name_to_rgb(name) abort$/;"	f
lightline#concatenate	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#concatenate(xs, right) abort$/;"	f
lightline#disable	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#disable() abort$/;"	f
lightline#enable	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#enable() abort$/;"	f
lightline#error	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#error(msg) abort$/;"	f
lightline#highlight	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#highlight(...) abort$/;"	f
lightline#init	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#init() abort$/;"	f
lightline#link	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#link(...) abort$/;"	f
lightline#mode	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#mode() abort$/;"	f
lightline#onetab	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#onetab(n, active) abort$/;"	f
lightline#palette	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#palette() abort$/;"	f
lightline#statusline	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#statusline(inactive) abort$/;"	f
lightline#tab#filename	nvim/plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#filename(n) abort$/;"	f
lightline#tab#modified	nvim/plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#modified(n) abort$/;"	f
lightline#tab#readonly	nvim/plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#readonly(n) abort$/;"	f
lightline#tab#tabnum	nvim/plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#tabnum(n) abort$/;"	f
lightline#tabline	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#tabline() abort$/;"	f
lightline#tabs	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#tabs() abort$/;"	f
lightline#toggle	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#toggle() abort$/;"	f
lightline#update	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update() abort$/;"	f
lightline#update_disable	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update_disable() abort$/;"	f
lightline#update_once	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update_once() abort$/;"	f
lightline.Custom	nvim/plugged/lightline.vim/test/expand.vim	/^  function! g:lightline.Custom()$/;"	f
linear	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		linear: function( p, n, firstNum, diff ) {$/;"	M
linearGradient4168	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(0.92105265,0,0,0.92105265,79.548449,262.52483)" \/>$/;"	i
linearGradient4180	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(0.92105266,0,0,0.92105266,124.54841,215.30684)" \/>$/;"	i
linearGradient4182	nvim/plugged/vim-go/assets/vim-go.svg	/^       id="linearGradient4182">$/;"	i
linearGradient4253	nvim/plugged/vim-go/assets/vim-go.svg	/^       id="linearGradient4253">$/;"	i
linearGradient4265	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(0.65610141,0,0,0.65610141,185.97779,480.81383)" \/>$/;"	i
linearGradient4271	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(0.90381797,-0.29515654,-0.62039307,-0.90381797,-597.71307,820.3/;"	i
linearGradient4273	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(-0.54351115,-0.65417141,-1.0770811,0.54351115,655.01412,667.672/;"	i
linearGradient4275	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(-0.94401471,-0.3302474,-0.32955964,0.94401471,1151.0861,721.505/;"	i
linearGradient4279	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(0.89463991,0.4064691,0.49110603,-0.89463991,-749.6705,579.40921/;"	i
linearGradient4281	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(0.49170605,0.377674,2.0076181,-0.49170605,229.12024,357.65841)"/;"	i
linearGradient4319	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(-1,0,0,1,744.54563,401.01143)" \/>$/;"	i
linearGradient4321	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientUnits="userSpaceOnUse" \/>$/;"	i
linearGradient4336	nvim/plugged/vim-go/assets/vim-go.svg	/^       gradientTransform="matrix(-1,0,0,1,-681.83098,347.55492)" \/>$/;"	i
linkcheck	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^linkcheck:$/;"	t
lint	nvim/plugged/deoplete.nvim/Makefile	/^lint:$/;"	t
lint	nvim/plugged/vim-go/Makefile	/^lint:$/;"	t
lint	nvim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/lint.go	/^package lint$/;"	p
lint	nvim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/quux.go	/^package lint$/;"	p
listItemScope	nvim/plugged/vim-go/test/parse.go	/^	listItemScope$/;"	c	package:html
load	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	load: function( url, params, callback ) {$/;"	M
load_external_module	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def load_external_module(base, module):$/;"	f
loaded_nerd_tree	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_taglist	nvim/plugged/taglist.vim/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	nvim/plugged/taglist.vim/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
localvimrc	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  augroup localvimrc$/;"	a
log_format	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_format = '%(asctime)s %(levelname)-8s [%(process)d] (%(name)s) %(message)s'$/;"	v
log_message_cooldown	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_message_cooldown = 0.5$/;"	v
logging	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/imports/vendor/gh.com/gi/foo-logging/logger.go	/^package logging$/;"	p
logging	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/vendor/gh.com/gi/foo-logging/logger.go	/^package logging$/;"	p
login_tty	nvim/plugged/vimproc.vim/src/ptytty.c	/^login_tty(int fd)$/;"	f	typeref:typename:int
logmethod	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def logmethod(func):$/;"	f
lseek	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define lseek /;"	d	file:
lt	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			lt: function(a,i,m){return i<m[3]-0;},$/;"	M
lt	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			lt: function(a,i,m){return i<m[3]-0;},$/;"	P
m	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    m = sys.modules.get('__main__')$/;"	v
m	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						m = [ 0, m[2], m[3], m[1] ];$/;"	P
m	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						m = re2.exec(t);$/;"	P
m	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					m = m[1];$/;"	P
m	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				m = p[i].exec( t );$/;"	P
m	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				m = re.exec(t);$/;"	P
m	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		m = " " + m + " ";$/;"	P
main	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def main(self, name, args, queue_id):$/;"	m	class:Child
main	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^def main(serveraddr):$/;"	f
main	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/main.py	/^def main():$/;"	f
main	nvim/plugged/editorconfig-vim/tests/spec/plugin_tests/test_files/4_space.py	/^def main():$/;"	f
main	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([File]) ->$/;"	f
main	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main(_) ->$/;"	f
main	nvim/plugged/vim-go/autoload/go/test-fixtures/cmd/bad.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/cmd/bad.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/debugmain/debugmain.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/debugmain/debugmain.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/def/jump.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/def/jump.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/hello.go	/^  func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/hello.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/hello_golden.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/hello_golden.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/imports/goimports.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/imports/goimports.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/imports/goimports_golden.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/imports/goimports_golden.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/lint/src/vet/vet.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/lint/src/vet/vet.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/term/term.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/term/term.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/compilerror/compilerror.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/compilerror/compilerror.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/showname/showname_test.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/testcompilerror/testcompilerror_test.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/timeout/timeout_test.go	/^package main$/;"	p
main	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/veterror/veterror.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/veterror/veterror.go	/^package main$/;"	p
main	nvim/plugged/vim-go/templates/hello_world.go	/^func main() {$/;"	f	package:main
main	nvim/plugged/vim-go/templates/hello_world.go	/^package main$/;"	p
main	nvim/plugged/vim-go/templates/hello_world_test.go	/^package main$/;"	p
main_loop	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def main_loop(self, stdout):$/;"	m	class:Child
main_syntax	nvim/plugged/typescript-vim/syntax/typescript.vim	/^  let main_syntax = "typescript"$/;"	v
main_syntax	nvim/plugged/vim-javascript/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	nvim/plugged/vim-markdown/syntax/markdown.vim	/^  let main_syntax = 'markdown'$/;"	v
main_syntax	nvim/plugged/vim-pug/syntax/pug.vim	/^  let main_syntax = 'pug'$/;"	v
makeArray	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	makeArray: function( array ) {$/;"	M
make_candidates	nvim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^        def make_candidates(row):$/;"	f	member:Source.gather_candidates	file:
make_iter	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^        def make_iter(self=self):$/;"	f	member:OrderedDict.iteritems	file:
make_iter	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^        def make_iter(self=self):$/;"	f	member:OrderedDict.itervalues	file:
make_term	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^make_term(Str) ->$/;"	f
man	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^man:$/;"	t
man_pages	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^man_pages = [$/;"	v
manual_completion_begin	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def manual_completion_begin(self, context):$/;"	m	class:DeopleteHandlers
map	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	map: function( callback ) {$/;"	M
map	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	map: function( elems, callback ) {$/;"	M
mapleader	nvim/init.vim	/^let mapleader=","$/;"	v
mapleader	vim/.vimrc	/^let mapleader=","$/;"	v
master_doc	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^master_doc = 'index'$/;"	v
match	nvim/plugged/syntastic/syntax_checkers/less/less-lint.js	/^    match = arg.match(\/^--?([a-z][\\-0-9a-z]*)(?:=([^\\s]+))?$\/i);$/;"	P
match	nvim/plugged/syntastic/syntax_checkers/less/less-lint.js	/^    match = arg.match(\/^-I(.+)$\/);$/;"	P
match	nvim/plugged/syntastic/syntax_checkers/python/codec.py	/^        match = re.match(r"#\\s*coding\\s*:\\s*(?P<coding>\\w+)", text[0])$/;"	v
matched	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var matched = [],$/;"	A
matches_filename	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    def matches_filename(self, config_filename, glob):$/;"	m	class:EditorConfigParser
max	nvim/plugged/vimproc.vim/tools/leak_check.vim	/^let max = 2048$/;"	v
maxlength	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		maxlength: "maxLength",$/;"	P
merge	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					var merge = {};$/;"	O
merge	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				var merge = {}, tmp = [],$/;"	O
merge	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	merge: function( first, second ) {$/;"	M
merge_results	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def merge_results(self, context):$/;"	m	class:AsyncParent
merge_results	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def merge_results(self, context):$/;"	m	class:SyncParent
metadata7	nvim/plugged/vim-go/assets/vim-go.svg	/^     id="metadata7">$/;"	i
method	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	var method = 'scroll' + name;$/;"	V
mingw	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^:mingw$/;"	l
mingw_test	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^:mingw_test$/;"	l
mock	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/mock/controller.go	/^package mock$/;"	p
modRes	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						modRes = xhr.getResponseHeader("Last-Modified");$/;"	P
module.is_no_insert	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^	function! module.is_no_insert(char)$/;"	f
mozilla	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	mozilla: \/mozilla\/.test( userAgent ) && !\/(compatible|webkit)\/.test( userAgent )$/;"	P
msie	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			msie = jQuery.browser.msie;$/;"	P
msie	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	msie: \/msie\/.test( userAgent ) && !\/opera\/.test( userAgent ),$/;"	P
msvc	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^:msvc$/;"	l
msvc_test	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^:msvc_test$/;"	l
msys2	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^:msys2$/;"	l
msys2_test	nvim/plugged/vimproc.vim/tools/appveyor.bat	/^:msys2_test$/;"	l
multiFilter	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	multiFilter: function( expr, elems, not ) {$/;"	M
n	nvim/settings/vim-easymotion.vim	/^map  n <Plug>(easymotion-next)$/;"	m
n	vim/settings/vim-easymotion.vim	/^map  n <Plug>(easymotion-next)$/;"	m
name	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				name = "";$/;"	P
name	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				name = "float";$/;"	P
name	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			name = name.replace( \/([A-Z])\/g, "-$1" ).toLowerCase();$/;"	P
name	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			name = styleFloat;$/;"	P
name	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		name = notxml && jQuery.props[ name ] || name;$/;"	P
name	nvim/plugged/vim-go/addon-info.json	/^  "name": "vim-go",$/;"	s
name	nvim/plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^        name = args.filename$/;"	v
namespace	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		namespace = event.type.split(".");$/;"	P
namespace	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		namespace = namespace[1];$/;"	P
nerdtree#checkForBrowse	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareNodes	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#has_opt	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningCygwin	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin()$/;"	f
nerdtree#runningWindows	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#ui_glue#bookmarkNode	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState)$/;"	f
nerdtree#version	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
nested_app_ebins	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^nested_app_ebins() ->$/;"	f
next	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	next: function(elem){return jQuery.nth(elem,2,"nextSibling");},$/;"	M
next	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	next: function(elem){return jQuery.nth(elem,2,"nextSibling");},$/;"	P
nextAll	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	nextAll: function(elem){return jQuery.dir(elem,"nextSibling");},$/;"	M
nextAll	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	nextAll: function(elem){return jQuery.dir(elem,"nextSibling");},$/;"	P
noConflict	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	noConflict: function( deep ) {$/;"	M
nodeName	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					nodeName = m[2].toUpperCase();$/;"	P
nodeName	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				nodeName = m[1].toUpperCase();$/;"	P
nodeName	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	nodeName: function( elem, name ) {$/;"	M
not	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	not: function( selector ) {$/;"	M
now	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.now = this.end;$/;"	P
now	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.now = this.start + ((this.end - this.start) * this.pos);$/;"	P
now	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.now = this.start;$/;"	P
nth	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			nth: function(a,i,m){return m[3]-0==i;},$/;"	M
nth	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			nth: function(a,i,m){return m[3]-0==i;},$/;"	P
nth	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	nth: function(cur,result,dir,elem){$/;"	M
num	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var num = 0;$/;"	V
num	nvim/plugged/vim-gitgutter/unplace.vim	/^let num = 500$/;"	v
numStyles	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				numStyles = jQuery("style, link[rel=stylesheet]").length;$/;"	P
o	nvim/autoload/plug.vim	/^      nmap <buffer> o <plug>(plug-preview)$/;"	m
o	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> o$/;"	m
o	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> o$/;"	m
obj	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				obj = this.getElementsByTagName("tbody")[0] || this.appendChild( this.ownerDocument.createEl/;"	P
odd	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			odd: function(a,i){return i%2;},$/;"	M
odd	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			odd: function(a,i){return i%2;},$/;"	P
oe	nvim/plugged/vim-go/test/parse.go	/^	oe, afe nodeStack$/;"	m	struct:html.parser
offset	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			offset       = this.offset(),$/;"	P
offsetChild	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				offsetChild  = \/^body$\/i.test(offsetParent.tagName) ? offsetChild : offsetParent;$/;"	P
offsetChild	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    offsetChild  = elem,$/;"	P
offsetParent	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				offsetParent = offsetParent.offsetParent;$/;"	P
offsetParent	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			offsetParent = offsetParent.offsetParent;$/;"	P
offsetParent	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    offsetParent = elem.offsetParent,$/;"	P
offsetParent	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	offsetParent: function() {$/;"	M
oid	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							oid = jQuery('[@id="'+m[2]+'"]', elem)[0];$/;"	P
old	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			old = expr;$/;"	P
old	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var old = {};$/;"	O
oldblock	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				this.oldblock = this.oldblock || jQuery.css(this,"display");$/;"	P
on_event	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def on_event(self, context):$/;"	m	class:DeopleteHandlers
on_event	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def on_event(self, user_context):$/;"	m	class:Deoplete
on_event	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def on_event(self, context):$/;"	m	class:Base
on_event	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def on_event(self, context):$/;"	m	class:Filter
on_event	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def on_event(self, context):$/;"	m	class:_Parent
on_event	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def on_event(self, context):$/;"	m	class:Base
on_event	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def on_event(self, context):$/;"	m	class:Source
one	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						one = elem.type == "select-one";$/;"	P
one	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	one: function( type, data, fn ) {$/;"	M
opacity	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		opacity: function(fx){$/;"	M
open	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define open /;"	d	file:
openpty	nvim/plugged/vimproc.vim/src/ptytty.c	/^openpty(int *amaster, int *aslave, char *name,$/;"	f	typeref:typename:int
opera	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	opera: \/opera\/.test( userAgent ),$/;"	P
options	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						options = elem.options,$/;"	P
options	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				options = {};$/;"	P
options	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.options = options;$/;"	P
options	nvim/plugged/syntastic/syntax_checkers/less/less-lint.js	/^  options = {};$/;"	P
optionxform	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    def optionxform(self, optionstr):$/;"	m	class:EditorConfigParser
opts.sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! opts.sink(lines)$/;"	f
origin	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        let origin = CursorPos()$/;"	v
originalIM	nvim/plugged/vim-go/test/parse.go	/^	originalIM insertionMode$/;"	m	struct:html.parser
out	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^      let out = substitute( out, ' \\+xxx \\+', ' ', '' )$/;"	v
out	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^      let out = substitute( out, ' contains=\\zs', '@cssColors,', '' )$/;"	v
overlap_length	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^def overlap_length(left, right):$/;"	f
p	nvim/init.vim	/^nnoremap p p=`]<C-o>$/;"	m
p	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> p$/;"	m
p	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> p$/;"	m
p	vim/.vimrc	/^nnoremap p p=`]<C-o>$/;"	m
package	nvim/plugged/vim-localvimrc/Makefile	/^package:$/;"	t
padding	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				var padding = 0, border = 0;$/;"	V
palenight#GetColors	nvim/plugged/palenight.vim/autoload/palenight.vim	/^function! palenight#GetColors()$/;"	f
palenight#set_highlight	nvim/plugged/palenight.vim/colors/palenight.vim	/^function! palenight#set_highlight(group, style)$/;"	f
param	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	param: function( a ) {$/;"	M
params	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				params = jQuery.param( params );$/;"	P
params	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				params = null;$/;"	P
parent	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				parent = parent.parentNode;$/;"	P
parent	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			parent: function(a){return a.firstChild;},$/;"	M
parent	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			parent: function(a){return a.firstChild;},$/;"	P
parent	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	parent: function(elem){return elem.parentNode;},$/;"	M
parent	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	parent: function(elem){return elem.parentNode;},$/;"	P
parentOffset	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			parentOffset = \/^body|html$\/i.test(offsetParent[0].tagName) ? { top: 0, left: 0 } : offsetP/;"	P
parents	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	parents: function(elem){return jQuery.dir(elem,"parentNode");},$/;"	M
parents	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	parents: function(elem){return jQuery.dir(elem,"parentNode");},$/;"	P
parse	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	parse: [$/;"	P
parse	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) parse() error {$/;"	f	unknown:html.parser
parseCurrentToken	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) parseCurrentToken() {$/;"	f	unknown:html.parser
parseForeignContent	nvim/plugged/vim-go/test/parse.go	/^func parseForeignContent(p *parser) bool {$/;"	f	package:html
parseImpliedToken	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) parseImpliedToken(t TokenType, dataAtom a.Atom, data string) {$/;"	f	unknown:html.parser
parse_buffer_pattern	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_buffer_pattern(b, pattern):$/;"	f
parse_file_pattern	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_file_pattern(f, pattern):$/;"	f
parser	nvim/plugged/syntastic/syntax_checkers/less/less-lint.js	/^  parser = new less.Parser(options);$/;"	P
parser	nvim/plugged/vim-go/test/parse.go	/^type parser struct {$/;"	s	package:html
parser	nvim/plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^parser = argparse.ArgumentParser($/;"	v
password	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			password: function(a){return "password"==a.type;},$/;"	M
password	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			password: function(a){return "password"==a.type;},$/;"	P
password	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		password: null,$/;"	P
path4188	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="sssssssssss" \/>$/;"	i
path4248	nvim/plugged/vim-go/assets/vim-go.svg	/^       style="display:inline;fill:#019833;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-wi/;"	i
path4265	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="ccscsc" \/>$/;"	i
path4267	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="sssssssccssssssss" \/>$/;"	i
path4271	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="sssssssscssssssssssscsccsscscssssssscsssscscsssscccccccc" \/>$/;"	i
path4275	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="ccsssccc" \/>$/;"	i
path4280	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="cssscsssscccc" \/>$/;"	i
path4321	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="sssscsscs" \/>$/;"	i
path4324	nvim/plugged/vim-go/assets/vim-go.svg	/^           d="m 202.34975,1029.0537 -56.02157,-157.11507 -17.82505,-3.05571 0.25466,-14.0054 89./;"	i
path4340	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="csssssscccsssc" \/>$/;"	i
path4349	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="csssssssc" \/>$/;"	i
path4365-1	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="cssscsssc" \/>$/;"	i
path4365-1-2	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="cssscsssc" \/>$/;"	i
path4367-9	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="sssssssss" \/>$/;"	i
path4367-9-2	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="sssssssss" \/>$/;"	i
path4369	nvim/plugged/vim-go/assets/vim-go.svg	/^         transform="matrix(13.851095,0,0,13.851095,10133.213,-6001.611)" \/>$/;"	i
path4398	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="sssssssssssssssss" \/>$/;"	i
path4406	nvim/plugged/vim-go/assets/vim-go.svg	/^         style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visib/;"	i
path4408	nvim/plugged/vim-go/assets/vim-go.svg	/^         transform="matrix(13.851095,0,0,13.851095,10133.213,-6001.611)" \/>$/;"	i
path4521	nvim/plugged/vim-go/assets/vim-go.svg	/^         style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visib/;"	i
path4539	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="cssssssssssssssssc" \/>$/;"	i
path4541	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="csscsscssssssssssssssssssssccsssc" \/>$/;"	i
path4544	nvim/plugged/vim-go/assets/vim-go.svg	/^       transform="scale(-1,1)" \/>$/;"	i
path4588	nvim/plugged/vim-go/assets/vim-go.svg	/^         style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visib/;"	i
path4636	nvim/plugged/vim-go/assets/vim-go.svg	/^         style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visib/;"	i
path4638	nvim/plugged/vim-go/assets/vim-go.svg	/^         style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visib/;"	i
path4642	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="sssssssssssssssss" \/>$/;"	i
path4644	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="sssssssssssssssss" \/>$/;"	i
path4648	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="sssssssssssssssss" \/>$/;"	i
path4812	nvim/plugged/vim-go/assets/vim-go.svg	/^         style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visib/;"	i
path4824	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="sssssssssssssssss" \/>$/;"	i
path4826	nvim/plugged/vim-go/assets/vim-go.svg	/^         sodipodi:nodetypes="sssssssssssssssss" \/>$/;"	i
path4828	nvim/plugged/vim-go/assets/vim-go.svg	/^         r="30.809652" \/>$/;"	i
path4828-0	nvim/plugged/vim-go/assets/vim-go.svg	/^         transform="matrix(0.98640333,0.16434257,-0.16434257,0.98640333,0,0)" \/>$/;"	i
pencil	nvim/settings/vim-pencil.vim	/^augroup pencil$/;"	a
pencil	vim/settings/vim-pencil.vim	/^augroup pencil$/;"	a
pencil#init	nvim/plugged/vim-pencil/autoload/pencil.vim	/^fun! pencil#init(...) abort$/;"	f
pencil#setAutoFormat	nvim/plugged/vim-pencil/autoload/pencil.vim	/^fun! pencil#setAutoFormat(af) abort$/;"	f
pencil_autoformat	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    aug pencil_autoformat$/;"	a
pencil_cursorwrap	nvim/plugged/vim-pencil/autoload/pencil.vim	/^      aug pencil_cursorwrap$/;"	a
pencil_iskeyword	nvim/plugged/vim-pencil/autoload/pencil.vim	/^    aug pencil_iskeyword$/;"	a
pickle	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^pickle:$/;"	t
pid	nvim/plugged/vimproc.vim/tools/fork.py	/^pid = os.fork()$/;"	v
pipe_data_received	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def pipe_data_received(self, fd, data):$/;"	m	class:Process
play	nvim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^package play$/;"	p
plug#	nvim/autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	nvim/autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	nvim/autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	nvim/autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	nvim/autoload/plug.vim	/^function! plug#load(...)$/;"	f
plugin	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^    augroup plugin-easymotion-active$/;"	a
plugin	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^    augroup plugin-easymotion$/;"	a
plugin/editorconfig.vim	nvim/plugged/editorconfig-vim/tests/spec/editorconfig_spec.rb	/^describe 'plugin\/editorconfig.vim' do$/;"	d
plugsettings	nvim/plugs.vim	/^let plugsettings = s:vim_path.'\/settings'$/;"	v
plugsettings	vim/plugs.vim	/^let plugsettings = s:vim_path.'\/settings'$/;"	v
poll	nvim/plugged/vimproc.vim/src/fakepoll.h	/^int poll(struct pollfd *pollSet, int pollCount, int pollTimeout)$/;"	f	typeref:typename:int
pollfd	nvim/plugged/vimproc.vim/src/fakepoll.h	/^typedef struct pollfd {$/;"	s
pollfd_t	nvim/plugged/vimproc.vim/src/fakepoll.h	/^} pollfd_t;$/;"	t	typeref:struct:pollfd
pop	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def pop(self, key, *args):$/;"	m	class:OrderedDict
popUntil	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) popUntil(s scope, matchTags ...a.Atom) bool {$/;"	f	unknown:html.parser
popitem	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def popitem(self, i=-1):$/;"	m	class:OrderedDict
pos	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.pos = jQuery.easing[this.options.easing || (jQuery.easing.swing ? "swing" : "linear")](t/;"	P
pos	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.pos = this.state = 1;$/;"	P
pos	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.pos = this.state = 0;$/;"	P
position	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	position: function() {$/;"	M
post	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	post: function( url, data, callback, type ) {$/;"	M
pre.code	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^pre.code {$/;"	c
prepend	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prepend: function() {$/;"	M
prependTo	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prependTo: "prepend",$/;"	P
preprocess_values	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^    def preprocess_values(self):$/;"	m	class:EditorConfigHandler
prev	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prev: function(elem){return jQuery.nth(elem,2,"previousSibling");},$/;"	M
prev	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prev: function(elem){return jQuery.nth(elem,2,"previousSibling");},$/;"	P
prevAll	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prevAll: function(elem){return jQuery.dir(elem,"previousSibling");},$/;"	M
prevAll	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prevAll: function(elem){return jQuery.dir(elem,"previousSibling");},$/;"	P
preventDefault	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					preventDefault: function(){},$/;"	M
preventDefault	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					preventDefault: function(){},$/;"	P
print	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def print(self, expr):$/;"	m	class:Base
print_error	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def print_error(self, expr):$/;"	m	class:Base
process	nvim/plugged/vimproc.vim/tools/leak_check.vim	/^  let process = vimproc#pgroup_open('ls')$/;"	v
process	nvim/plugged/vimproc.vim/tools/leak_check2.vim	/^let process = vimproc#pgroup_open('ls && ls')$/;"	v
process	nvim/plugged/vimproc.vim/tools/leak_check2.vim	/^let process = vimproc#pgroup_open('python ' . pwd . '\/fork.py')$/;"	v
processData	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		processData: true,$/;"	P
process_exited	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def process_exited(self):$/;"	m	class:Process
project	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^project = u'EditorConfig Python Core'$/;"	v
prop	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.prop = prop;$/;"	P
prop	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	prop: function( elem, value, type, i, name ) {$/;"	M
props	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var props = "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctr/;"	V
proxy	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	proxy: function( fn, proxy ){$/;"	M
ptsname_compat	nvim/plugged/vimproc.vim/src/ptytty.c	/^ptsname_compat(int fd, char **buf)$/;"	f	typeref:typename:int	file:
pushStack	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	pushStack: function( elems ) {$/;"	M
pwd	nvim/plugged/vimproc.vim/tools/leak_check2.vim	/^let pwd = fnamemodify(expand('<sfile>'), ':p:h')$/;"	v
pygments_style	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^pygments_style = 'sphinx'$/;"	v
q	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q  :if b:plug_preview==1<bar>pc<bar>endif<bar>bd<cr>$/;"	m
q	nvim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
q	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			q = jQuery.data( elem, type + "queue", jQuery.makeArray(array) );$/;"	P
q	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> q    <C-o>:close<CR>$/;"	m
q	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> q :close<CR>$/;"	m
q	nvim/plugged/vim-go/autoload/go/debug.vim	/^    nmap <buffer> q <Plug>(go-debug-stop)$/;"	m
q	nvim/plugged/vim-go/autoload/go/def.vim	/^  noremap <buffer> <silent> q     :<C-U>call go#ui#CloseWindow()<CR>$/;"	m
qthelp	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^qthelp:$/;"	t
queue	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	queue: function(type, fn){$/;"	M
quickChild	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	quickChild = new RegExp("^>\\\\s*(" + chars + "+)"),$/;"	P
quickClass	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	quickClass = new RegExp("^([#.]?)(" + chars + "*)");$/;"	P
quickExpr	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^var quickExpr = \/^[^<]*(<(.|\\s)+>)[^>]*$|^#(\\w+)$\/,$/;"	V
quickID	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	quickID = new RegExp("^(" + chars + "+)(#)(" + chars + "+)"),$/;"	P
quirks	nvim/plugged/vim-go/test/parse.go	/^	quirks bool$/;"	m	struct:html.parser
r	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							r = jQuery.classFilter( r, m[2] );$/;"	P
r	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							r = jQuery.merge( r, ret[i].getElementsByTagName( tag ));$/;"	P
r	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							r = tmp;$/;"	P
r	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					r = [];$/;"	P
r	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					r = ret = [context];$/;"	P
r	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				r = isSimple.test( m[3] ) ?$/;"	P
r	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				r = jQuery.classFilter(r, m[2], not);$/;"	P
r	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				r = tmp;$/;"	P
r	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var r = [];$/;"	A
r	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var r = [];$/;"	A
radio	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			radio: function(a){return "radio"==a.type;},$/;"	M
radio	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			radio: function(a){return "radio"==a.type;},$/;"	P
re	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				re = \/^([>+~])\\s*(\\w*)\/i;$/;"	P
re	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				re = quickChild,$/;"	P
re2	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						re2 = quickClass;$/;"	P
read	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    def read(self, filename):$/;"	m	class:EditorConfigParser
read	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define read /;"	d	file:
readonly	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		readonly: "readOnly",$/;"	P
ready	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ready: function() {$/;"	M
ready	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	ready: function(fn) {$/;"	M
readyBound	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	readyBound = true;$/;"	P
readyList	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	readyList: [],$/;"	P
readyState	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							this.readyState == "loaded" || this.readyState == "complete") ) {$/;"	M
rebar_file	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_file(Dir, normal) -> filename:join(Dir, "rebar.config");$/;"	f
rebar_file	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_file(Dir, test)   -> filename:join(Dir, "rebar.test.config").$/;"	f
rebar_opts	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_opts(RebarFile) ->$/;"	f
reconstructActiveFormattingElements	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) reconstructActiveFormattingElements() {$/;"	f	unknown:html.parser
rect4162	nvim/plugged/vim-go/assets/vim-go.svg	/^       y="21.967466" \/>$/;"	i
rect4170	nvim/plugged/vim-go/assets/vim-go.svg	/^       style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible/;"	i
rect4208	nvim/plugged/vim-go/assets/vim-go.svg	/^       y="86.967468" \/>$/;"	i
rect4223	nvim/plugged/vim-go/assets/vim-go.svg	/^       transform="scale(1,-1)" \/>$/;"	i
rect4227	nvim/plugged/vim-go/assets/vim-go.svg	/^       y="131.96747" \/>$/;"	i
rect4231	nvim/plugged/vim-go/assets/vim-go.svg	/^       style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible/;"	i
rect4233	nvim/plugged/vim-go/assets/vim-go.svg	/^       y="131.96747" \/>$/;"	i
rect4248	nvim/plugged/vim-go/assets/vim-go.svg	/^       style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible/;"	i
rect4263	nvim/plugged/vim-go/assets/vim-go.svg	/^       y="-127.75694" \/>$/;"	i
rect4267	nvim/plugged/vim-go/assets/vim-go.svg	/^       y="176.96747" \/>$/;"	i
rect4280	nvim/plugged/vim-go/assets/vim-go.svg	/^       transform="scale(1,-1)" \/>$/;"	i
rect4283	nvim/plugged/vim-go/assets/vim-go.svg	/^         style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visib/;"	i
rect4284	nvim/plugged/vim-go/assets/vim-go.svg	/^       y="286.96747" \/>$/;"	i
rect4293	nvim/plugged/vim-go/assets/vim-go.svg	/^         transform="matrix(0.70710678,0.70710678,-0.70710678,0.70710678,0,0)" \/>$/;"	i
rect4297	nvim/plugged/vim-go/assets/vim-go.svg	/^       style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible/;"	i
rect4301	nvim/plugged/vim-go/assets/vim-go.svg	/^       y="241.96747" \/>$/;"	i
rect4303	nvim/plugged/vim-go/assets/vim-go.svg	/^       y="331.96747" \/>$/;"	i
rect4347	nvim/plugged/vim-go/assets/vim-go.svg	/^       inkscape:export-ydpi="46.84" \/>$/;"	i
rect4659	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="scssscssscssscsss" \/>$/;"	i
rect4661	nvim/plugged/vim-go/assets/vim-go.svg	/^       sodipodi:nodetypes="scssscssscssscsss" \/>$/;"	i
rel_info	nvim/plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^rel_info = json.load(io.StringIO(str(response.read(), 'utf-8')))$/;"	v
release	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^release = __version__$/;"	v
release	nvim/plugged/emmet-vim/Makefile	/^release: emmet-vim.zip$/;"	t
release_winsock	nvim/plugged/vimproc.vim/src/proc_w32.c	/^release_winsock()$/;"	f	typeref:typename:int	file:
remote	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var remote = \/^(?:\\w+:)?\\\/\\\/([^\\\/?#]+)\/;$/;"	V
remove	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		remove: function( elem, classNames ) {$/;"	M
remove	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	remove: function( selector ) {$/;"	M
remove	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	remove: function(elem, types, handler) {$/;"	M
remove-zip	nvim/plugged/emmet-vim/Makefile	/^remove-zip:$/;"	t
removeAttr	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	removeAttr: function( name ) {$/;"	M
removeClass	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	removeClass: function( classNames ) {$/;"	M
removeData	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	removeData: function( elem, name ) {$/;"	M
removeData	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	removeData: function( key ){$/;"	M
rename	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def rename(self, old_key, new_key):$/;"	m	class:OrderedDict
replaceAll	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	replaceAll: "replaceWith"$/;"	P
replaceWith	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	replaceWith: function( value ) {$/;"	M
repo_name	nvim/plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^repo_name = 'koron\/vim-kaoriya'$/;"	v
repository	nvim/plugged/vim-go/addon-info.json	/^  "repository" : {"type": "git", "url": "https:\/\/github.com\/fatih\/vim-go.git"}$/;"	o
request	nvim/plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^    request = urllib.request.Request(gh_release_url)$/;"	v
requestDone	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				requestDone = true;$/;"	P
reset	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			reset: function(a){return "reset"==a.type;},$/;"	M
reset	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			reset: function(a){return "reset"==a.type;},$/;"	P
resetInsertionMode	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) resetInsertionMode() {$/;"	f	unknown:html.parser
result	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		result = result || 1;$/;"	P
results	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		results = { top: top, left: left };$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							ret = null;$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						ret = r = oid && (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						ret = r;$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					ret = r;$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				ret = "1";$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				ret = computedStyle.getPropertyValue( name );$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				ret = extra.apply( elem, val == null ? data : data.concat( val ) );$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				ret = handler.apply( this, arguments );$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				ret = jQuery.merge( ret, elem );$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				ret = name == "display" && swap[ stack.length - 1 ] != null ?$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				ret = r = val.r;$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				ret = r;$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				ret = style.pixelLeft + "px";$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			ret = [];$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			ret = array;$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			ret = elem.currentStyle[ name ] || elem.currentStyle[ camelCase ];$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			ret = jQuery.attr( style, "opacity" );$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			ret = jQuery.multiFilter( selector, ret );$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			ret = style[ name ];$/;"	P
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = "";$/;"	V
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = [], done = {};$/;"	A
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = [];$/;"	A
ret	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = [context], done = [], last, nodeName;$/;"	A
revents	nvim/plugged/vimproc.vim/src/fakepoll.h	/^    short revents;                  \/* events that occurred on fd *\/$/;"	m	struct:pollfd	typeref:typename:short
reverse	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def reverse(self):$/;"	m	class:OrderedDict
root	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^root = logging.getLogger('deoplete')$/;"	v
s	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		s = jQuery.extend(true, s, jQuery.extend(true, {}, jQuery.ajaxSettings, s));$/;"	P
s	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var s = [];$/;"	A
s	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> s$/;"	m
s	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> s$/;"	m
s	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-sn)$/;"	m
s	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s2)$/;"	m
s/	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s\/ <Plug>(easymotion-sn)$/;"	m
s:AddToClasspath	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath, path) " {{{2$/;"	f
s:AdditionalColors	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:AdditionalColors()$/;"	f
s:AlternatePair	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:AlternatePair()$/;"	f
s:ApplyConfig	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ApplyConfig(config) abort " {{{1$/;"	f
s:Args	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:Args() " {{{2$/;"	f
s:BLOCKLEVEL_TAGS	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:BLOCKLEVEL_TAGS = [$/;"	v
s:Balanced	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:Balanced(lnum)$/;"	f
s:Balanced	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:Balanced(lnum,line)$/;"	f
s:Bookmark	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Bookmark.AddBookmark	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
s:Bookmark.BookmarkExistsFor	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
s:Bookmark.BookmarkFor	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
s:Bookmark.BookmarkNames	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
s:Bookmark.Bookmarks	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
s:Bookmark.CacheBookmarks	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
s:Bookmark.ClearAll	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
s:Bookmark.CompareBookmarksByName	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
s:Bookmark.GetNodeForName	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
s:Bookmark.GetSelected	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
s:Bookmark.InvalidBookmarks	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
s:Bookmark.New	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
s:Bookmark.SortBookmarksList	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
s:Bookmark.ToRoot	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
s:Bookmark.Write	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
s:Bookmark.activate	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
s:Bookmark.delete	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
s:Bookmark.getNode	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
s:Bookmark.mustExist	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
s:Bookmark.open	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
s:Bookmark.openInNewTab	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
s:Bookmark.setPath	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
s:Bookmark.str	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
s:Bookmark.toRoot	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
s:Bookmark.validate	nvim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
s:BufEnterHook	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook(fname) abort " {{{2$/;"	f
s:BufReadPostHook	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:BufReadPostHook(fname) abort " {{{2$/;"	f
s:BufWinEnterHook	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:BufWinEnterHook(fname) abort " {{{2$/;"	f
s:BufWritePostHook	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:BufWritePostHook(fname) abort " {{{2$/;"	f
s:Buffer	nvim/plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^let s:Buffer = vital#easymotion#import('Vim.Buffer')$/;"	v
s:CacheErrors	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(buf, checker_names) abort " {{{2$/;"	f
s:Cancell	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:Cancell() " {{{$/;"	f
s:Center	nvim/plugged/tabular/autoload/tabular.vim	/^function! s:Center(string, fieldwidth)$/;"	f
s:CheckBinaries	nvim/plugged/vim-go/plugin/go.vim	/^function! s:CheckBinaries()$/;"	f
s:ChooseCommandMap	nvim/plugged/tabular/plugin/Tabular.vim	/^function! s:ChooseCommandMap(commandline)$/;"	f
s:ClassSep	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:ClassSep() " {{{2$/;"	f
s:ClearCache	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:ClearCache(buf) abort " {{{2$/;"	f
s:ClearMatches	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:ClearMatches()$/;"	f
s:ClearWindow	nvim/plugged/apiblueprint.vim/plugin/apiblueprint.vim	/^function! s:ClearWindow(name)$/;"	f
s:CompleteCheckerName	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
s:CompleteFiletypes	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:CompleteFiletypes(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
s:CompleteTabularizeCommand	nvim/plugged/tabular/plugin/Tabular.vim	/^function! s:CompleteTabularizeCommand(argstart, cmdline, cursorpos)$/;"	f
s:Continues	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:Continues()$/;"	f
s:CreateCoordKeyDict	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:CreateCoordKeyDict(groups, ...)$/;"	f
s:CreateWindow	nvim/plugged/apiblueprint.vim/plugin/apiblueprint.vim	/^function! s:CreateWindow(name)$/;"	f
s:Creator	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Creator.BufNamePrefix	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
s:Creator.CreateMirror	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
s:Creator.CreateTabTree	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
s:Creator.CreateWindowTree	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
s:Creator.New	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
s:Creator.ToggleTabTree	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
s:Creator._bindMappings	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
s:Creator._broadcastInitEvent	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
s:Creator._createNERDTree	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
s:Creator._createTreeWin	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
s:Creator._isBufHidden	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
s:Creator._nextBufferName	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
s:Creator._nextBufferNumber	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
s:Creator._pathForString	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
s:Creator._removeTreeBufForTab	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
s:Creator._setCommonBufOptions	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
s:Creator._setupStatusline	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
s:Creator._tabpagevar	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
s:Creator._uniq	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
s:Creator.createMirror	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
s:Creator.createTabTree	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
s:Creator.createWindowTree	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
s:Creator.toggleTabTree	nvim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
s:CygwinPath	nvim/plugged/vim-go/autoload/go/path.vim	/^function! s:CygwinPath(path)$/;"	f
s:DIRECTION	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:DIRECTION = { 'forward': 0, 'backward': 1, 'bidirection': 2}$/;"	v
s:DIRECTION	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:DIRECTION = {'forward': 0, 'backward': 1}$/;"	v
s:DetectAPIBlueprint	nvim/plugged/apiblueprint.vim/ftdetect/apiblueprint.vim	/^fun! s:DetectAPIBlueprint()$/;"	f
s:Disable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:Disable()$/;"	f
s:DisableShellSlash	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:DisableShellSlash() " {{{2$/;"	f
s:DoWhile	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:DoWhile()$/;"	f
s:DotPromptUser	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:DotPromptUser(groups) "{{{$/;"	f
s:EMPTY_TAGS	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:EMPTY_TAGS = [$/;"	v
s:EasyMotion	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:EasyMotion(regexp, direction, visualmode, is_inclusive, ...) " {{{$/;"	f
s:EditClasspath	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath() " {{{2$/;"	f
s:EditConfig	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditConfig() " {{{2$/;"	f
s:Error	nvim/plugged/vim-go/autoload/go/import.vim	/^function! s:Error(s) abort$/;"	f
s:Event	nvim/plugged/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:Event.New	nvim/plugged/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
s:ExprCol	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:ExprCol()$/;"	f
s:FALSE	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:FALSE = 0$/;"	v
s:FGForBG	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:FGForBG(color)$/;"	f
s:Filter	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:Filter()$/;"	f
s:FilterString	nvim/plugged/tabular/autoload/tabular.vim	/^function! s:FilterString(lines, commandstring)$/;"	f
s:FindPythonFiles	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:FindPythonFiles() " {{{1$/;"	f
s:FindPythonInterp	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:FindPythonInterp() " {{{1$/;"	f
s:FlagSet	nvim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:FlagSet.New	nvim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
s:FlagSet._flagsForScope	nvim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
s:FlagSet.addFlag	nvim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
s:FlagSet.clearFlags	nvim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
s:FlagSet.removeFlag	nvim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
s:FlagSet.renderToString	nvim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
s:ForwardToZshChecker	nvim/plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker() " {{{2$/;"	f
s:GetChar	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetChar(...) abort "{{{$/;"	f
s:GetDialect	nvim/plugged/syntastic/syntax_checkers/asm/gcc.vim	/^function! s:GetDialect(buf) " {{{2$/;"	f
s:GetEslintExec	nvim/plugged/syntastic-local-eslint.vim/ftplugin/javascript.vim	/^fun! s:GetEslintExec (node_modules)$/;"	f
s:GetFilenames	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:GetFilenames(path, filename)$/;"	f
s:GetIncludes	nvim/plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! s:GetIncludes(checker, base) " {{{2$/;"	f
s:GetMakeprg	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetMakeprg(buf) " {{{2$/;"	f
s:GetMavenClasspath	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath() " {{{2$/;"	f
s:GetMavenProperties	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties() " {{{2$/;"	f
s:GetNodeModulesAbsPath	nvim/plugged/syntastic-local-eslint.vim/ftplugin/javascript.vim	/^fun! s:GetNodeModulesAbsPath ()$/;"	f
s:GetOcamlBuildMakeprg	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlBuildMakeprg(buf) " {{{2$/;"	f
s:GetOcamlcMakeprg	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlcMakeprg(buf) " {{{2$/;"	f
s:GetOtherMakeprg	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOtherMakeprg(buf) " {{{2$/;"	f
s:GetPair	nvim/plugged/typescript-vim/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,...)$/;"	f
s:GetPair	nvim/plugged/typescript-vim/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,time,...)$/;"	f
s:GetPair	nvim/plugged/vim-javascript/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
s:GetProfile	nvim/plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^function! s:GetProfile(buf) " {{{2$/;"	f
s:GetShell	nvim/plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell(buf) " {{{2$/;"	f
s:GetShell	nvim/plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! s:GetShell(buf) " {{{2$/;"	f
s:GetValaOpts	nvim/plugged/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaOpts(buf, name, comment, cmd) " {{{2$/;"	f
s:GetVars	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:GetVars()$/;"	f
s:GetVisualStartPosition	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetVisualStartPosition(c_pos, v_start, v_end, search_direction) "{{{$/;"	f
s:GoInstallBinaries	nvim/plugged/vim-go/plugin/go.vim	/^function! s:GoInstallBinaries(updateBinaries, ...)$/;"	f
s:GoMinisnip	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^function! s:GoMinisnip() abort$/;"	f
s:GoNeosnippet	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^function! s:GoNeosnippet() abort$/;"	f
s:GoUltiSnips	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^function! s:GoUltiSnips() abort$/;"	f
s:GodocView	nvim/plugged/vim-go/autoload/go/doc.vim	/^function! s:GodocView(newposition, position, content) abort$/;"	f
s:GroupingAlgorithmOriginal	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmOriginal(targets, keys)$/;"	f
s:GroupingAlgorithmSCTree	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmSCTree(targets, keys) "{{{$/;"	f
s:HasPath	nvim/plugged/vim-go/autoload/go/path.vim	/^function! s:HasPath(path) abort$/;"	f
s:HashIndent	nvim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:HashIndent(lnum)$/;"	f
s:HexForHSLValue	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:HexForHSLValue(h,s,l)$/;"	f
s:HexForRGBValue	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:HexForRGBValue(r,g,b)$/;"	f
s:Hinter	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:Hinter = {$/;"	v
s:Hinter._pos2hint_to_line2col2hint	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
s:Hinter._replace_line_for_hint	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_line_for_hint(col_num, line, hint) abort$/;"	f
s:Hinter._replace_tab_target	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_tab_target(col_num, line) abort$/;"	f
s:Hinter._replace_text_to_space	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_text_to_space(line, col_num, len) abort$/;"	f
s:Hinter._save_lines	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._save_lines() abort$/;"	f
s:Hinter._show_hint_for_line	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._show_hint_for_line(winnr, lnum, col2hint) abort$/;"	f
s:Hinter._show_hint_for_win	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._show_hint_for_win(winnr) abort$/;"	f
s:Hinter.after	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.after() abort$/;"	f
s:Hinter.before	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.before() abort$/;"	f
s:Hinter.disable_conceal_in_other_win	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.disable_conceal_in_other_win() abort$/;"	f
s:Hinter.init	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.init(hint_dict) abort$/;"	f
s:Hinter.modify_env_for_win	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.modify_env_for_win(winnr) abort$/;"	f
s:Hinter.new	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.new(hint_dict, config) abort$/;"	f
s:Hinter.remove_hints	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.remove_hints(winnr) abort$/;"	f
s:Hinter.restore_conceal_in_other_win	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_conceal_in_other_win() abort$/;"	f
s:Hinter.restore_env	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_env() abort$/;"	f
s:Hinter.restore_lines_for_win	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_lines_for_win(winnr) abort$/;"	f
s:Hinter.restore_options	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_options() abort$/;"	f
s:Hinter.save_options	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.save_options() abort$/;"	f
s:Hinter.show_hint	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.show_hint() abort$/;"	f
s:Hinter.show_hint_pos	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.show_hint_pos(lnum, cnum, char, winnr) abort$/;"	f
s:HitAHintMotion	nvim/plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^let s:HitAHintMotion = s:V.import('HitAHint.Motion')$/;"	v
s:IGNORE_ERRORS	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:IGNORE_ERRORS = [$/;"	v
s:INLINE_TAGS	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:INLINE_TAGS = [$/;"	v
s:IgnoreError	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
s:IgnoreError	nvim/plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
s:IndentLinesDisable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:IndentLinesDisable()$/;"	f
s:IndentLinesEnable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:IndentLinesEnable()$/;"	f
s:IndentLinesToggle	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:IndentLinesToggle()$/;"	f
s:InitColor	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:InitColor()$/;"	f
s:Initialize	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:Initialize() " {{{1$/;"	f
s:InitializeExternalCommand	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializeExternalCommand() " {{{2$/;"	f
s:InitializePythonBuiltin	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializePythonBuiltin(editorconfig_core_py_dir) " {{{2$/;"	f
s:InitializePythonExternal	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializePythonExternal() " {{{2$/;"	f
s:IsBlock	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:IsBlock()$/;"	f
s:IsBlock	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:IsBlock()$/;"	f
s:IsContOne	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:IsContOne(cont)$/;"	f
s:IsRuleActive	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:IsRuleActive(name, config) " {{{{$/;"	f
s:IsShellValid	nvim/plugged/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid(buf) " {{{2$/;"	f
s:IsSwitch	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:IsSwitch()$/;"	f
s:KeyMap	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KeyMap.Add	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
s:KeyMap.All	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
s:KeyMap.BindAll	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
s:KeyMap.Compare	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
s:KeyMap.Create	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
s:KeyMap.FindFor	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
s:KeyMap.Invoke	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
s:KeyMap.Remove	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
s:KeyMap.bind	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
s:KeyMap.invoke	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
s:LeadingSpaceDisable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:LeadingSpaceDisable()$/;"	f
s:LeadingSpaceEnable	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:LeadingSpaceEnable()$/;"	f
s:LeadingSpaceToggle	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:LeadingSpaceToggle()$/;"	f
s:Left	nvim/plugged/tabular/autoload/tabular.vim	/^function! s:Left(string, fieldwidth)$/;"	f
s:LetEslintExec	nvim/plugged/syntastic-local-eslint.vim/ftplugin/javascript.vim	/^fun! s:LetEslintExec (eslint_exec)$/;"	f
s:LoadConfigFile	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadConfigFile() " {{{2$/;"	f
s:LocalVimRC	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRC()$/;"	f
s:LocalVimRCCalcChecksum	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCCalcChecksum(file)$/;"	f
s:LocalVimRCCalcFNV	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCCalcFNV(text)$/;"	f
s:LocalVimRCCheckChecksum	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCCheckChecksum(file, checksum)$/;"	f
s:LocalVimRCCleanup	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCCleanup()$/;"	f
s:LocalVimRCClear	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCClear()$/;"	f
s:LocalVimRCDebug	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCDebug(level, text)$/;"	f
s:LocalVimRCDebugShow	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCDebugShow()$/;"	f
s:LocalVimRCDisable	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCDisable()$/;"	f
s:LocalVimRCEdit	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCEdit()$/;"	f
s:LocalVimRCEnable	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCEnable()$/;"	f
s:LocalVimRCError	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCError(text)$/;"	f
s:LocalVimRCForget	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCForget(...)$/;"	f
s:LocalVimRCMatchAny	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCMatchAny(str, patterns)$/;"	f
s:LocalVimRCReadPersistent	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCReadPersistent()$/;"	f
s:LocalVimRCSourceScript	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCSourceScript(script_path, sandbox)$/;"	f
s:LocalVimRCUserAutocommand	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCUserAutocommand(event)$/;"	f
s:LocalVimRCWritePersistent	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRCWritePersistent()$/;"	f
s:LocalVimRcCalcSHA256	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^function! s:LocalVimRcCalcSHA256(text)$/;"	f
s:LookingAt	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:LookingAt()$/;"	f
s:MAJOR_VERSION	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let s:MAJOR_VERSION = 9$/;"	v
s:MINOR_VERSION	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let s:MINOR_VERSION = 3$/;"	v
s:MatchColorValue	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:MatchColorValue(color, part)$/;"	f
s:MavenOutputDirectory	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory() " {{{2$/;"	f
s:MenuController	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuController.New	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
s:MenuController._allIndexesFor	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
s:MenuController._current	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
s:MenuController._cursorDown	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
s:MenuController._cursorUp	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
s:MenuController._echoPrompt	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
s:MenuController._handleKeypress	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
s:MenuController._nextIndexFor	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
s:MenuController._restoreOptions	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
s:MenuController._saveOptions	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
s:MenuController._setCmdheight	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
s:MenuController.showMenu	nvim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
s:MenuItem	nvim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:MenuItem.All	nvim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
s:MenuItem.AllEnabled	nvim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
s:MenuItem.Create	nvim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
s:MenuItem.CreateSeparator	nvim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
s:MenuItem.CreateSubmenu	nvim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
s:MenuItem.enabled	nvim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
s:MenuItem.execute	nvim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
s:MenuItem.isSeparator	nvim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
s:MenuItem.isSubmenu	nvim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
s:Message	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Message(message) " {{{$/;"	f
s:Modules	nvim/plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function s:Modules(buf)$/;"	f
s:MoveBlockDown	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveBlockDown(start, end, count)$/;"	f
s:MoveBlockHalfPageDown	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveBlockHalfPageDown() range$/;"	f
s:MoveBlockHalfPageUp	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveBlockHalfPageUp() range$/;"	f
s:MoveBlockLeft	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveBlockLeft() range$/;"	f
s:MoveBlockOneLineDown	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveBlockOneLineDown() range$/;"	f
s:MoveBlockOneLineUp	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveBlockOneLineUp() range$/;"	f
s:MoveBlockRight	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveBlockRight() range$/;"	f
s:MoveBlockUp	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveBlockUp(start, end, count)$/;"	f
s:MoveCharLeft	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveCharLeft()$/;"	f
s:MoveCharRight	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveCharRight()$/;"	f
s:MoveKey	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveKey(key)$/;"	f
s:MoveLineDown	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveLineDown(count) range$/;"	f
s:MoveLineHalfPageDown	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveLineHalfPageDown() range$/;"	f
s:MoveLineHalfPageUp	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveLineHalfPageUp() range$/;"	f
s:MoveLineUp	nvim/plugged/vim-move/plugin/move.vim	/^function! s:MoveLineUp(count) range$/;"	f
s:NERDTree	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTree.AddPathFilter	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
s:NERDTree.Close	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
s:NERDTree.CloseIfQuitOnOpen	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
s:NERDTree.CursorToBookmarkTable	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
s:NERDTree.CursorToTreeWin	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
s:NERDTree.ExistsForBuf	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
s:NERDTree.ExistsForTab	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
s:NERDTree.ForCurrentBuf	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
s:NERDTree.ForCurrentTab	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
s:NERDTree.GetWinNum	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
s:NERDTree.IsOpen	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
s:NERDTree.MustBeOpen	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
s:NERDTree.New	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
s:NERDTree.PathFilters	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
s:NERDTree.changeRoot	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
s:NERDTree.getRoot	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
s:NERDTree.isTabTree	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
s:NERDTree.isWinTree	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
s:NERDTree.previousBuf	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
s:NERDTree.render	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
s:NERDTree.setPreviousBuf	nvim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
s:Nat	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:Nat(int)$/;"	f
s:NewTags	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:NewTags(name) " {{{2$/;"	f
s:Notifier	nvim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Notifier.AddListener	nvim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
s:Notifier.GetListenersForEvent	nvim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
s:Notifier.GetListenersMap	nvim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
s:Notifier.NotifyListeners	nvim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
s:OneScope	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:OneScope(lnum)$/;"	f
s:OneScope	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:OneScope()$/;"	f
s:OpenNERDTree	nvim/settings/NERDTree.vim	/^function! s:OpenNERDTree()$/;"	f
s:OpenNERDTree	vim/settings/NERDTree.vim	/^function! s:OpenNERDTree()$/;"	f
s:Opener	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Opener.New	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
s:Opener._bufInWindows	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
s:Opener._checkToCloseTree	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
s:Opener._firstUsableWindow	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
s:Opener._gotoTargetWin	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
s:Opener._isWindowUsable	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
s:Opener._newSplit	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
s:Opener._newVSplit	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
s:Opener._openDirectory	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
s:Opener._openFile	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
s:Opener._previousWindow	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
s:Opener._restoreCursorPos	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
s:Opener._reuseWindow	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
s:Opener._saveCursorPos	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
s:Opener.open	nvim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
s:ParseCino	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:ParseCino(f)$/;"	f
s:ParsePattern	nvim/plugged/tabular/plugin/Tabular.vim	/^function! s:ParsePattern(string)$/;"	f
s:Path	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:Path.AbsolutePathFor	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
s:Path.CopyingSupported	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
s:Path.Create	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
s:Path.JoinPathStrings	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
s:Path.New	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
s:Path.Resolve	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
s:Path.Slash	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
s:Path.WinToUnixPath	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
s:Path._escChars	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
s:Path._ignorePatternMatches	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
s:Path._splitChunks	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
s:Path._str	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
s:Path._strForCd	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
s:Path._strForEdit	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
s:Path._strForGlob	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
s:Path._strForUI	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
s:Path.addDelimiter	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
s:Path.bookmarkNames	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
s:Path.cacheDisplayString	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
s:Path.changeToDir	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
s:Path.compareTo	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
s:Path.copy	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
s:Path.copyingWillOverwrite	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
s:Path.createParentDirectories	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
s:Path.delete	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
s:Path.displayString	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
s:Path.edit	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
s:Path.equals	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
s:Path.exists	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
s:Path.extractDriveLetter	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
s:Path.getDir	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
s:Path.getLastPathComponent	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
s:Path.getParent	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
s:Path.getSortKey	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
s:Path.getSortOrderIndex	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
s:Path.ignore	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
s:Path.isAncestor	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(path)$/;"	f
s:Path.isHiddenUnder	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
s:Path.isUnder	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
s:Path.isUnixHiddenFile	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
s:Path.isUnixHiddenPath	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
s:Path.readInfoFromDisk	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
s:Path.refresh	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
s:Path.refreshFlags	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
s:Path.rename	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
s:Path.str	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
s:Path.strTrunk	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
s:Path.tabnr	nvim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
s:PrevCodeLine	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:PrevCodeLine(lnum)$/;"	f
s:PreviewCSSColor	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:PreviewCSSColor(str)$/;"	f
s:PreviousToken	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:PreviousToken(...)$/;"	f
s:PrintOutput	nvim/plugged/apiblueprint.vim/plugin/apiblueprint.vim	/^function! s:PrintOutput(output)$/;"	f
s:ProcessByLine	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:ProcessByLine(w)$/;"	f
s:Prompt	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Prompt(message) " {{{$/;"	f
s:PromptUser	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:PromptUser(groups) "{{{$/;"	f
s:Pure	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:Pure(f,...)$/;"	f
s:QuitPreHook	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook(fname) abort " {{{2$/;"	f
s:RemoveCarriageReturn	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line) " {{{2$/;"	f
s:ResetConcealOption	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:ResetConcealOption()$/;"	f
s:ResetCursor	nvim/plugged/vim-move/plugin/move.vim	/^function! s:ResetCursor()$/;"	f
s:ResetShellSlash	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ResetShellSlash() " {{{2$/;"	f
s:ResetWidth	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:ResetWidth(...)$/;"	f
s:RestoreColors	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:RestoreColors()$/;"	f
s:RestoreValue	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:RestoreValue() "{{{$/;"	f
s:Right	nvim/plugged/tabular/autoload/tabular.vim	/^function! s:Right(string, fieldwidth)$/;"	f
s:SID	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f
s:SID_PREFIX	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:SID_PREFIX() abort$/;"	f
s:SNR	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SaveClasspath	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath() " {{{2$/;"	f
s:SaveConfig	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveConfig() " {{{2$/;"	f
s:SaveValue	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:SaveValue() "{{{$/;"	f
s:SearchDict	nvim/plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict() "{{{$/;"	f
s:SearchDict2	nvim/plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict2(name) "{{{$/;"	f
s:SearchLoop	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f
s:SelectJavascript	nvim/plugged/vim-javascript/ftdetect/javascript.vim	/^fun! s:SelectJavascript()$/;"	f
s:SelectWindow	nvim/plugged/apiblueprint.vim/plugin/apiblueprint.vim	/^function! s:SelectWindow(name)$/;"	f
s:SetCompilerType	nvim/plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! s:SetCompilerType(exe) " {{{2$/;"	f
s:SetConcealOption	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:SetConcealOption()$/;"	f
s:SetLines	nvim/plugged/tabular/autoload/tabular.vim	/^function! s:SetLines(start, len, strings)$/;"	f
s:SetLines	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:SetLines(lines, key) " {{{$/;"	f
s:SetTagbar	nvim/plugged/vim-go/ftplugin/go/tagbar.vim	/^function! s:SetTagbar()$/;"	f
s:Setup	nvim/plugged/indentline/after/plugin/indentLine.vim	/^function! s:Setup()$/;"	f
s:SetupWindow	nvim/plugged/apiblueprint.vim/plugin/apiblueprint.vim	/^function! s:SetupWindow()$/;"	f
s:SkipFunc	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:SkipFunc()$/;"	f
s:SpawnExternalParser	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:SpawnExternalParser(cmd) " {{{2$/;"	f
s:SplitClasspath	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^function! s:SplitClasspath(classpath) " {{{2$/;"	f
s:SplitCommands	nvim/plugged/tabular/plugin/Tabular.vim	/^function! s:SplitCommands(string)$/;"	f
s:SplitDelim	nvim/plugged/tabular/autoload/tabular.vim	/^function! s:SplitDelim(string, delim)$/;"	f
s:SplitDelimTest	nvim/plugged/tabular/autoload/tabular.vim	/^function! s:SplitDelimTest(string, delim, expected)$/;"	f
s:StripLeadingSpaces	nvim/plugged/tabular/autoload/tabular.vim	/^function! s:StripLeadingSpaces(string)$/;"	f
s:StripTrailingSpaces	nvim/plugged/tabular/autoload/tabular.vim	/^function! s:StripTrailingSpaces(string)$/;"	f
s:Strlen	nvim/plugged/tabular/autoload/tabular.vim	/^  function! s:Strlen(string)$/;"	f
s:Strlen	nvim/plugged/tabular/autoload/tabular.vim	/^  let s:Strlen = function("strdisplaywidth")$/;"	v
s:SynAt	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:SynAt(l,c)$/;"	f
s:TRUE	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:TRUE = !0$/;"	v
s:TYPE	nvim/autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list': t/;"	v
s:TabularCommands	nvim/plugged/tabular/plugin/Tabular.vim	/^let s:TabularCommands = {}$/;"	v
s:Throw	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Throw(message) "{{{$/;"	f
s:TidyEncOptByFenc	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc() " {{{2$/;"	f
s:TidyEncOptByFenc	nvim/plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
s:Tlist_Add_Files	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
s:Tlist_Add_Files_Recursive	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
s:Tlist_Buffer_Removed	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
s:Tlist_Change_Sort	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
s:Tlist_Debug_Disable	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
s:Tlist_Debug_Enable	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
s:Tlist_Debug_Show	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
s:Tlist_Detect_Filetype	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
s:Tlist_Discard_FileInfo	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
s:Tlist_Discard_TagInfo	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
s:Tlist_Exe_Cmd_No_Acmds	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
s:Tlist_Extract_Tag_Scope	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
s:Tlist_Extract_Tagtype	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
s:Tlist_FileType_Init	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
s:Tlist_Find_Nearest_Tag_Idx	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
s:Tlist_Get_Buffer_Filetype	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
s:Tlist_Get_File_Index	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
s:Tlist_Get_Tag_Linenum	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
s:Tlist_Get_Tag_Prototype	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
s:Tlist_Get_Tag_SearchPat	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
s:Tlist_Get_Tag_Type_By_Tag	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
s:Tlist_Init_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
s:Tlist_Log_Msg	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
s:Tlist_Menu_Add_Base_Menu	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
s:Tlist_Menu_File_Refresh	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
s:Tlist_Menu_Get_Tag_Type_Cmd	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
s:Tlist_Menu_Init	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
s:Tlist_Menu_Jump_To_Tag	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
s:Tlist_Menu_Refresh	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
s:Tlist_Menu_Remove_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
s:Tlist_Menu_Update_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
s:Tlist_Parse_Tagline	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
s:Tlist_Post_Close_Cleanup	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
s:Tlist_Process_Dir	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
s:Tlist_Process_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
s:Tlist_Process_Filelist	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
s:Tlist_Refresh	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
s:Tlist_Refresh_Folds	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
s:Tlist_Remove_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
s:Tlist_Session_Load	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
s:Tlist_Session_Save	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
s:Tlist_Skip_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
s:Tlist_Skip_Refresh	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:Tlist_Update_Current_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
s:Tlist_Update_Remove_List	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
s:Tlist_User_Removed_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
s:Tlist_Vim_Session_Load	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
s:Tlist_Warning_Msg	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
s:Tlist_Window_Check_Auto_Open	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
s:Tlist_Window_Check_Width	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
s:Tlist_Window_Close	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
s:Tlist_Window_Create	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
s:Tlist_Window_Display_Help	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
s:Tlist_Window_Exit_Only_Window	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
s:Tlist_Window_Get_File_Index_By_Linenum	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
s:Tlist_Window_Get_Tag_Index	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
s:Tlist_Window_Get_Tag_Type_By_Linenum	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
s:Tlist_Window_Goto_Window	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
s:Tlist_Window_Highlight_Line	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
s:Tlist_Window_Highlight_Tag	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
s:Tlist_Window_Init	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
s:Tlist_Window_Jump_To_Tag	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
s:Tlist_Window_Mark_File_Window	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
s:Tlist_Window_Move_To_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
s:Tlist_Window_Open	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
s:Tlist_Window_Open_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
s:Tlist_Window_Open_File_Fold	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
s:Tlist_Window_Refresh	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
s:Tlist_Window_Refresh_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
s:Tlist_Window_Remove_File_From_Display	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
s:Tlist_Window_Show_Info	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
s:Tlist_Window_Toggle	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
s:Tlist_Window_Toggle_Help_Text	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
s:Tlist_Window_Update_File	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
s:Tlist_Window_Update_Line_Offsets	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
s:Tlist_Window_Zoom	nvim/plugged/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
s:Token	nvim/plugged/vim-javascript/indent/javascript.vim	/^function s:Token()$/;"	f
s:TreeDirNode	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeDirNode.AbsoluteTreeRoot	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
s:TreeDirNode.GetSelected	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
s:TreeDirNode.New	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
s:TreeDirNode._glob	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
s:TreeDirNode._initChildren	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
s:TreeDirNode._openInNewTab	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
s:TreeDirNode.activate	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
s:TreeDirNode.addChild	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
s:TreeDirNode.close	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
s:TreeDirNode.closeChildren	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
s:TreeDirNode.createChild	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
s:TreeDirNode.displayString	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
s:TreeDirNode.findNode	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
s:TreeDirNode.getCascade	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
s:TreeDirNode.getCascadeRoot	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
s:TreeDirNode.getChild	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
s:TreeDirNode.getChildByIndex	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
s:TreeDirNode.getChildCount	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
s:TreeDirNode.getChildIndex	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
s:TreeDirNode.getVisibleChildCount	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
s:TreeDirNode.getVisibleChildren	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
s:TreeDirNode.hasVisibleChildren	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
s:TreeDirNode.isCascadable	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
s:TreeDirNode.open	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
s:TreeDirNode.openAlong	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
s:TreeDirNode.openExplorer	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
s:TreeDirNode.openInNewTab	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
s:TreeDirNode.openRecursively	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
s:TreeDirNode.refresh	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
s:TreeDirNode.refreshDirFlags	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
s:TreeDirNode.refreshFlags	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
s:TreeDirNode.removeChild	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
s:TreeDirNode.reveal	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
s:TreeDirNode.sortChildren	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
s:TreeDirNode.toggleOpen	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
s:TreeDirNode.transplantChild	nvim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
s:TreeFileNode	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TreeFileNode.GetRootForTab	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
s:TreeFileNode.GetSelected	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
s:TreeFileNode.New	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
s:TreeFileNode._renderToString	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
s:TreeFileNode.activate	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
s:TreeFileNode.bookmark	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
s:TreeFileNode.cacheParent	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
s:TreeFileNode.clearBookmarks	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
s:TreeFileNode.copy	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
s:TreeFileNode.delete	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
s:TreeFileNode.displayString	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
s:TreeFileNode.equals	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
s:TreeFileNode.findNode	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
s:TreeFileNode.findSibling	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
s:TreeFileNode.getNerdtree	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
s:TreeFileNode.isRoot	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
s:TreeFileNode.isVisible	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
s:TreeFileNode.open	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
s:TreeFileNode.openInNewTab	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
s:TreeFileNode.openSplit	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
s:TreeFileNode.openVSplit	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
s:TreeFileNode.putCursorHere	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
s:TreeFileNode.refresh	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
s:TreeFileNode.refreshFlags	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
s:TreeFileNode.rename	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
s:TreeFileNode.renderToString	nvim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
s:Trim	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:Trim(ln)$/;"	f
s:TrimTrailingWhitespace	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:TrimTrailingWhitespace() " {{{{$/;"	f
s:UI	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:UI.IndentWid	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
s:UI.MarkupReg	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
s:UI.New	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
s:UI.UpDirLine	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
s:UI._dumpHelp	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
s:UI._indentLevelFor	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
s:UI._renderBookmarks	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
s:UI._stripMarkup	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
s:UI.centerView	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
s:UI.getLineNum	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
s:UI.getPath	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
s:UI.getRootLineNum	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
s:UI.getShowBookmarks	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
s:UI.getShowFiles	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
s:UI.getShowHelp	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
s:UI.getShowHidden	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
s:UI.isIgnoreFilterEnabled	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
s:UI.isMinimal	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
s:UI.render	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
s:UI.renderViewSavingPosition	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
s:UI.restoreScreenState	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
s:UI.saveScreenState	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
s:UI.setShowHidden	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
s:UI.toggleHelp	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
s:UI.toggleIgnoreFilter	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
s:UI.toggleShowBookmarks	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
s:UI.toggleShowFiles	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
s:UI.toggleShowHidden	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
s:UI.toggleZoom	nvim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
s:UpdateErrors	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(buf, auto_invoked, checker_names) abort " {{{2$/;"	f
s:UseConfigFiles	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles() abort$/;"	f
s:UseConfigFiles_ExternalCommand	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_ExternalCommand() " {{{2$/;"	f
s:UseConfigFiles_Python_Builtin	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_Python_Builtin() abort " {{{2$/;"	f
s:UseConfigFiles_Python_External	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_Python_External() " {{{2$/;"	f
s:V	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:V = vital#easymotion#new()$/;"	v
s:V	nvim/plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^let s:V = vital#easymotion#new()$/;"	v
s:VERSION_NUMBER	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let s:VERSION_NUMBER = str2nr(printf('%2d%02d', s:MAJOR_VERSION, s:MINOR_VERSION))$/;"	v
s:VERSION_STRING	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let s:VERSION_STRING = printf('%d.%d', s:MAJOR_VERSION, s:MINOR_VERSION)$/;"	v
s:ValidateDub	nvim/plugged/syntastic/syntax_checkers/d/dmd.vim	/^function! s:ValidateDub(checker) " {{{2$/;"	f
s:VimCssInit	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:VimCssInit(update)$/;"	f
s:VimEnterHook	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:VimEnterHook() abort " {{{2$/;"	f
s:Vital	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital = {}$/;"	v
s:Vital	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:WRAP_MODE_DEFAULT	nvim/plugged/vim-pencil/autoload/pencil.vim	/^let s:WRAP_MODE_DEFAULT = -1$/;"	v
s:WRAP_MODE_DEFAULT	nvim/plugged/vim-pencil/plugin/pencil.vim	/^let s:WRAP_MODE_DEFAULT = -1$/;"	v
s:WRAP_MODE_HARD	nvim/plugged/vim-pencil/autoload/pencil.vim	/^let s:WRAP_MODE_HARD    = 1$/;"	v
s:WRAP_MODE_HARD	nvim/plugged/vim-pencil/plugin/pencil.vim	/^let s:WRAP_MODE_HARD    = 1$/;"	v
s:WRAP_MODE_OFF	nvim/plugged/vim-pencil/autoload/pencil.vim	/^let s:WRAP_MODE_OFF     = 0$/;"	v
s:WRAP_MODE_OFF	nvim/plugged/vim-pencil/plugin/pencil.vim	/^let s:WRAP_MODE_OFF     = 0$/;"	v
s:WRAP_MODE_SOFT	nvim/plugged/vim-pencil/autoload/pencil.vim	/^let s:WRAP_MODE_SOFT    = 2$/;"	v
s:WRAP_MODE_SOFT	nvim/plugged/vim-pencil/plugin/pencil.vim	/^let s:WRAP_MODE_SOFT    = 2$/;"	v
s:XTermColorForRGB	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    function! s:XTermColorForRGB(color)$/;"	f
s:_	nvim/plugged/lightline.vim/autoload/lightline.vim	/^let s:_ = 1 " 1: uninitialized, 2: disabled$/;"	v
s:_DEFAULT_CHECKERS	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_CHECKERS = {$/;"	v
s:_DEFAULT_FILETYPE_MAP	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_FILETYPE_MAP = {$/;"	v
s:_ECLIM_TYPES	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_ECLIM_TYPES = [$/;"	v
s:_FILE_SHORTCUTS	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^let s:_FILE_SHORTCUTS = {$/;"	v
s:_NOTIFIER_TYPES	nvim/plugged/syntastic/plugin/syntastic/notifiers.vim	/^let s:_NOTIFIER_TYPES = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:_PERSISTENT_NOTIFIERS	nvim/plugged/syntastic/plugin/syntastic/notifiers.vim	/^let s:_PERSISTENT_NOTIFIERS = ['signs', 'balloons']$/;"	v
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_SID() abort$/;"	f
s:_UNDEFINED	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:_UNDEFINED = function('s:_undefined')$/;"	v
s:_YCM_TYPES	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^let s:_YCM_TYPES = [$/;"	v
s:_add_to_errors	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:_add_to_errors(errors, options) abort " {{{2$/;"	f
s:_as_echon	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_as_echon(str)$/;"	f
s:_as_statusline	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_as_statusline(list, count)$/;"	f
s:_assert	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_assert(...) abort$/;"	f
s:_auto_cmap	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_auto_cmap()$/;"	f
s:_base_set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set = {$/;"	v
s:_base_set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.and = s:_base_set.intersection$/;"	v
s:_base_set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.ge = s:_base_set.issuperset$/;"	v
s:_base_set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.le = s:_base_set.issubset$/;"	v
s:_base_set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.or = s:_base_set.union$/;"	v
s:_base_set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.sub = s:_base_set.difference$/;"	v
s:_base_set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.xor = s:_base_set.symmetric_difference$/;"	v
s:_base_set._add	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._add(x) abort$/;"	f
s:_base_set._clear	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._clear() abort$/;"	f
s:_base_set._hash	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._hash(x) abort$/;"	f
s:_base_set._new	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._new(...) abort$/;"	f
s:_base_set._set_data	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._set_data(xs) abort$/;"	f
s:_base_set._to_set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._to_set(x) abort$/;"	f
s:_base_set._update	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._update(xs) abort$/;"	f
s:_base_set.difference	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.difference(t) abort$/;"	f
s:_base_set.gt	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.gt(t) abort$/;"	f
s:_base_set.in	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.in(x) abort$/;"	f
s:_base_set.intersection	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.intersection(t) abort$/;"	f
s:_base_set.issubset	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.issubset(t) abort$/;"	f
s:_base_set.issuperset	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.issuperset(t) abort$/;"	f
s:_base_set.len	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.len() abort$/;"	f
s:_base_set.lt	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.lt(t) abort$/;"	f
s:_base_set.symmetric_difference	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.symmetric_difference(t) abort$/;"	f
s:_base_set.to_list	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.to_list() abort$/;"	f
s:_base_set.union	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.union(t) abort$/;"	f
s:_buffer_complete	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_buffer_complete()$/;"	f
s:_capture	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_capture(mode)$/;"	f
s:_checkPackage	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPackage(name, ...) abort " {{{2$/;"	f
s:_checkPhp	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPhp() abort " {{{2$/;"	f
s:_checkPython	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPython() abort " {{{2$/;"	f
s:_checkRuby	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_checkRuby() abort " {{{2$/;"	f
s:_check_stack	nvim/plugged/syntastic/plugin/syntastic.vim	/^let s:_check_stack = []$/;"	v
s:_clamp	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_clamp(x, max, min)$/;"	f
s:_compare	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
s:_compare_checker_names	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_compare_checker_names(a, b) abort " {{{2$/;"	f
s:_compare_error_items_by_columns	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_columns(a, b) abort " {{{2$/;"	f
s:_compare_error_items_by_lines	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_lines(a, b) abort " {{{2$/;"	f
s:_convert_sid	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_convert_sid(rhs, sid) abort$/;"	f
s:_create_win2pos2hint	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_create_win2pos2hint(dict, hint_dict, ...) abort$/;"	f
s:_decode_JSON	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! s:_decode_JSON(json) abort " {{{2$/;"	f
s:_default_compare	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
s:_delete	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^let s:_delete = function(v:version > 704 || (v:version == 704 && has('patch1128')) ? 'delete' : /;"	v
s:_delete_dumb	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_delete_dumb(what, flags) abort " {{{2$/;"	f
s:_disabled_by_eclim	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_eclim(filetype) abort " {{{2$/;"	f
s:_disabled_by_ycm	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_ycm(filetype) abort " {{{2$/;"	f
s:_dot_to_sharp	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_echon	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_echon(expr)$/;"	f
s:_engine	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:_engine = exists("+regexpengine") ? '\\%#=2' : ''$/;"	v
s:_execute	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_execute(cmd)$/;"	f
s:_exists_autoload_func_with_source	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f
s:_explain_skip	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:_explain_skip(filetypes) abort " {{{2$/;"	f
s:_extract_files	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_file2module	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_file2module(file) abort$/;"	f
s:_find_index	nvim/plugged/syntastic/plugin/syntastic/cursor.vim	/^function! s:_find_index(column, messages) abort " {{{2$/;"	f
s:_finish	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_finish()$/;"	f
s:_float2str	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^let s:_float2str = function(has('float') ? 's:_float2str_smart' : 's:_float2str_dumb')$/;"	v
s:_float2str_dumb	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_dumb(val) abort " {{{2$/;"	f
s:_float2str_smart	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_smart(val) abort " {{{2$/;"	f
s:_foldl	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:_foldl(f, init, xs) abort$/;"	f
s:_format_variable	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_format_variable(name) abort " {{{2$/;"	f
s:_function	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_function	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  let s:_function = function('function')$/;"	v
s:_function	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_fuzz	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^let s:_fuzz = function(exists('*getpid') ? 'getpid' : 's:_fuzz_dumb')$/;"	v
s:_fuzz_dumb	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_fuzz_dumb() abort " {{{2$/;"	f
s:_get_builtin_module	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_cflags	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_cflags(ft, ck, opts) abort " {{{2$/;"	f
s:_get_checker_var	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_checker_var(scope, filetype, subchecker, name, default) abort " {{{2$/;"	f
s:_get_include_dirs	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_get_include_dirs(filetype) abort " {{{2$/;"	f
s:_get_key	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_get_key(conf)$/;"	f
s:_get_module	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_getbufvar	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^let s:_getbufvar = function(v:version > 703 || (v:version == 703 && has('patch831')) ? 'getbufva/;"	v
s:_getbufvar_dumb	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_getbufvar_dumb(buf, name, ...) abort " {{{2$/;"	f
s:_global_vital_files	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_handleOldOptions	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
s:_hash_func	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_hash_func(x) abort$/;"	f
s:_ignore_file	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:_ignore_file(filename) abort " {{{2$/;"	f
s:_import	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import_func_name	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_init	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_init() abort " {{{2$/;"	f
s:_init_hl	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_init_hl() abort$/;"	f
s:_isAvailableDefault	nvim/plugged/syntastic/plugin/syntastic/checker.vim	/^function! s:_isAvailableDefault() dict " {{{2$/;"	f
s:_isDebugEnabled	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^let s:_isDebugEnabled = function(exists('*and') ? 's:_isDebugEnabled_smart' : 's:_isDebugEnabled/;"	v
s:_isDebugEnabled_dumb	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_dumb(level) abort " {{{2$/;"	f
s:_isDebugEnabled_smart	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_smart(level) abort " {{{2$/;"	f
s:_is_modified	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_is_modified(name) abort " {{{2$/;"	f
s:_is_quitting	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:_is_quitting(buf) abort " {{{2$/;"	f
s:_is_same_index	nvim/plugged/syntastic/plugin/syntastic/cursor.vim	/^function! s:_is_same_index(line, old_line, column, idx, messages) abort " {{{2$/;"	f
s:_is_set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_is_set(x) abort$/;"	f
s:_is_valid_highlight	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_is_valid_highlight(name)$/;"	f
s:_keymapping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_keymapping(str)$/;"	f
s:_keys_count	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_keys_count(targets_len, keys_len) abort$/;"	f
s:_lightline	nvim/plugged/lightline.vim/autoload/lightline.vim	/^let s:_lightline = {$/;"	v
s:_logRedirect	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_logRedirect(on) abort " {{{2$/;"	f
s:_log_timestamp	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^let s:_log_timestamp = function(has('float') && exists('*reltimefloat') ? 's:_log_timestamp_smar/;"	v
s:_log_timestamp_dumb	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp_dumb() abort " {{{2$/;"	f
s:_log_timestamp_smart	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp_smart() abort " {{{2$/;"	f
s:_maparg	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_maparg(name, mode, abbr, dict)$/;"	f
s:_max_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:_max_by(dict, expr) abort$/;"	f
s:_module_path	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_sid	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid_base_dir	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_new_environment	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_environment(name) abort$/;"	f
s:_new_instance	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_instance(instance, ...) abort$/;"	f
s:_new_option	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_option(name) abort$/;"	f
s:_new_register	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_register(name) abort$/;"	f
s:_new_variable	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_variable(name, ...) abort$/;"	f
s:_normalise_filetype	nvim/plugged/syntastic/plugin/syntastic/registry.vim	/^function! s:_normalise_filetype(ftalias) abort " {{{2$/;"	f
s:_os_name	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:_os_name() abort " {{{2$/;"	f
s:_parse_line	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_parse_line(line)$/;"	f
s:_path2project_directory_git	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
s:_path2project_directory_others	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
s:_path2project_directory_svn	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
s:_plugin_name	nvim/plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_quit_pre	nvim/plugged/syntastic/plugin/syntastic.vim	/^let s:_quit_pre = []$/;"	v
s:_redir	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_redir(cmd) abort$/;"	f
s:_redraw	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_redraw(cmdline)$/;"	f
s:_regex	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:_regex = exists("+regexpengine")$/;"	v
s:_registerHandler	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_registerHandler(regex, function, args) abort " {{{2$/;"	f
s:_remove_shadowed_items	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_remove_shadowed_items(errors) abort " {{{2$/;"	f
s:_reset	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_reset()$/;"	f
s:_reset	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_reset()$/;"	f
s:_rmrf	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_rmrf(what) abort " {{{2$/;"	f
s:_running_windows	nvim/plugged/syntastic/plugin/syntastic.vim	/^let s:_running_windows = syntastic#util#isRunningWindows()$/;"	v
s:_runtime	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_runtime(path) abort$/;"	f
s:_s	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_safe_eval	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_safe_eval(expr, ...)$/;"	f
s:_search_headers	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! s:_search_headers() abort " {{{2$/;"	f
s:_self_vital_files	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_set_screen_column	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_set_screen_column(item) abort " {{{2$/;"	f
s:_sfuncname	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_should_match_cmdline	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_should_match_cmdline(cmdline)$/;"	f
s:_sid	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_skip_file	nvim/plugged/syntastic/plugin/syntastic.vim	/^function! s:_skip_file(buf) abort " {{{2$/;"	f
s:_source	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_source(path) abort$/;"	f
s:_split_keystring	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_split_keystring(str, ...)$/;"	f
s:_str2float	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^let s:_str2float = function(exists('*str2float') ? 'str2float' : 'str2nr')$/;"	v
s:_throw	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_throw(message) abort$/;"	f
s:_throw	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_throw(msg) abort$/;"	f
s:_translate	nvim/plugged/syntastic/plugin/syntastic/loclist.vim	/^function! s:_translate(key, val) abort " {{{2$/;"	f
s:_translateElement	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_translateElement(key, term) abort " {{{2$/;"	f
s:_translateFilter	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! s:_translateFilter(filters) abort " {{{2$/;"	f
s:_undefined	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_undefined() abort$/;"	f
s:_unify_path	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path_cache	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_uniq	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_uniq(list)$/;"	f
s:_uniq	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_verbosefile_pop	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_pop()$/;"	f
s:_verbosefile_push	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_push(file)$/;"	f
s:_virtual_tab2spacelen	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
s:_virtual_tab2spacelen	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
s:_vital_created	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_warn_deprecated	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
s:_wcwidth	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:_wid_base	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^let s:_wid_base = 'syntastic_' . s:_fuzz() . '_' . reltimestr(g:_SYNTASTIC_START) . '_'$/;"	v
s:_wid_pool	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^let s:_wid_pool = 0$/;"	v
s:_width	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^let s:_width = function(exists('*strwidth') ? 'strwidth' : 'strlen')$/;"	v
s:abs_path	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:abs_path(bufnr, shellesc)$/;"	f
s:action_for	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
s:activateAll	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f
s:activateBookmark	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
s:activateDirNode	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode)$/;"	f
s:activateFileNode	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
s:add_db	nvim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
s:add_dummy_sign	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:add_dummy_sign(bufnr) abort$/;"	f
s:added_db_files	nvim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	nvim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:adjust_header	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_header(bufnr, hunk_diff)$/;"	f
s:adjust_hunk_summary	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_hunk_summary(hunk_diff) abort$/;"	f
s:adjust_screen	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:adjust_screen() "{{{$/;"	f
s:ag_handler	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_handler(lines, with_column)$/;"	f
s:ag_to_qf	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line, with_column)$/;"	f
s:align_lists	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
s:align_pairs	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
s:all	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
s:all_files	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:all_files()$/;"	f
s:alternatePair	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:alternatePair(stop)$/;"	f
s:and	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:and(xs) abort$/;"	f
s:ansi	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
s:ansi	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cya/;"	v
s:any	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
s:append_ul	nvim/autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:aqua	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:aqua = '#3e999f'$/;"	v
s:aqua	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:aqua = '#3e999f'$/;"	v
s:args_after	nvim/plugged/syntastic/syntax_checkers/css/stylelint.vim	/^let s:args_after = {$/;"	v
s:as_key_config	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:as_key_config(config)$/;"	f
s:as_keymapping	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:as_keymapping(key)$/;"	f
s:ask	nvim/autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	nvim/autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:asmfmt_autosave	nvim/plugged/vim-go/plugin/go.vim	/^function! s:asmfmt_autosave()$/;"	f
s:assert	nvim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/concatenate.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/error.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/expand.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/highlight.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/link.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/mode.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/onetab.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/subseparator.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/tabline.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/tabs.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/toggle.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/lightline.vim/test/uniq.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/vimproc.vim/test/fopen.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/vimproc.vim/test/functions.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/vimproc.vim/test/lexer.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/vimproc.vim/test/parser.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/vimproc.vim/test/popen.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/vimproc.vim/test/socket.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	nvim/plugged/vimproc.vim/test/system.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assign_name	nvim/autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assoc	nvim/autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:async_guru	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! s:async_guru(args) abort$/;"	f
s:async_info	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! s:async_info(echo, showstatus)$/;"	f
s:attributes	nvim/plugged/vim-pug/indent/pug.vim	/^let s:attributes = '\\%((.\\{-\\})\\)'$/;"	v
s:auto_sameids	nvim/plugged/vim-go/plugin/go.vim	/^function! s:auto_sameids()$/;"	f
s:auto_type_info	nvim/plugged/vim-go/plugin/go.vim	/^function! s:auto_type_info()$/;"	f
s:available	nvim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:background	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:background = '#444444'$/;"	v
s:background	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:background = '#F5F5F5'$/;"	v
s:bang	nvim/autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bar	nvim/autoload/plug.vim	/^function! s:bar()$/;"	f
s:base	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	let s:base.variables.modules = s:Signals.make()$/;"	v
s:base	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:base = {$/;"	v
s:base	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^let s:base = {$/;"	v
s:base	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:base = {}$/;"	v
s:base.__empty	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__empty(...)$/;"	f
s:base.__execute	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute(command)$/;"	f
s:base.__execute__	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute__(cmd)$/;"	f
s:base.__finish	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__finish()$/;"	f
s:base.__get_keymapping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__get_keymapping()$/;"	f
s:base.__init	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init()$/;"	f
s:base.__init_variables	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init_variables()$/;"	f
s:base.__input	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input(input, ...)$/;"	f
s:base.__input_char	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input_char(char)$/;"	f
s:base.__inputting	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__inputting()$/;"	f
s:base.__is_exit	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__is_exit()$/;"	f
s:base.__keymapping__	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__keymapping__()$/;"	f
s:base.__main	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__main(...)$/;"	f
s:base.__update	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__update()$/;"	f
s:base.backward	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward()$/;"	f
s:base.backward	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.backward()$/;"	f
s:base.backward_word	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward_word(...)$/;"	f
s:base.call	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.call(func, ...)$/;"	f
s:base.callevent	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.callevent(event)$/;"	f
s:base.char	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.char()$/;"	f
s:base.cmap	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cmap(lhs, rhs)$/;"	f
s:base.cnoremap	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cnoremap(lhs, rhs)$/;"	f
s:base.connect	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.connect(module, ...)$/;"	f
s:base.connect	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.connect(slot)$/;"	f
s:base.cunmap	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cunmap(lhs)$/;"	f
s:base.disable_keymapping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disable_keymapping()$/;"	f
s:base.disconnect	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disconnect(name)$/;"	f
s:base.disconnect	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect(slot)$/;"	f
s:base.disconnect_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect_by(expr)$/;"	f
s:base.draw	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.draw()$/;"	f
s:base.enable_keymapping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.enable_keymapping()$/;"	f
s:base.execute	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.execute(...)$/;"	f
s:base.exit	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit(...)$/;"	f
s:base.exit_code	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit_code()$/;"	f
s:base.find_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_by(expr)$/;"	f
s:base.find_first_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_first_by(expr)$/;"	f
s:base.forward	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.forward()$/;"	f
s:base.forward	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.forward()$/;"	f
s:base.get	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get(...)$/;"	f
s:base.get_module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_module(name)$/;"	f
s:base.get_prompt	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_prompt()$/;"	f
s:base.get_slot	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.get_slot(val)$/;"	f
s:base.get_suffix	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_suffix()$/;"	f
s:base.get_tap_key	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_tap_key()$/;"	f
s:base.getchar	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getchar(...)$/;"	f
s:base.getline	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getline()$/;"	f
s:base.getpos	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getpos()$/;"	f
s:base.hl_cursor_off	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_off()$/;"	f
s:base.hl_cursor_on	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_on()$/;"	f
s:base.input	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.input(str)$/;"	f
s:base.input_key	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key()$/;"	f
s:base.input_key_stack	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack()$/;"	f
s:base.input_key_stack_pop	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_pop()$/;"	f
s:base.input_key_stack_string	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_string()$/;"	f
s:base.insert	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.insert(word, ...)$/;"	f
s:base.is_enable_keymapping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_enable_keymapping()$/;"	f
s:base.is_exit	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_exit()$/;"	f
s:base.is_input	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_input(key, ...)$/;"	f
s:base.keymapping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.keymapping()$/;"	f
s:base.length	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.length()$/;"	f
s:base.next	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.next()$/;"	f
s:base.pos	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos()$/;"	f
s:base.pos_char	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos_char()$/;"	f
s:base.prev	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.prev()$/;"	f
s:base.remove	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove(index)$/;"	f
s:base.remove_next	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_next()$/;"	f
s:base.remove_pos	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_pos()$/;"	f
s:base.remove_prev	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_prev()$/;"	f
s:base.set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set(item)$/;"	f
s:base.set_input_key_stack	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_input_key_stack(stack)$/;"	f
s:base.set_pos	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_pos(pos)$/;"	f
s:base.set_prompt	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_prompt(prompt)$/;"	f
s:base.set_str	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_str(str)$/;"	f
s:base.set_suffix	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_suffix(str)$/;"	f
s:base.setchar	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setchar(char, ...)$/;"	f
s:base.setline	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setline(line)$/;"	f
s:base.setpos	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setpos(pos)$/;"	f
s:base.slots	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.slots()$/;"	f
s:base.sort_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.sort_by(expr)$/;"	f
s:base.start	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.start(...)$/;"	f
s:base.str	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.str()$/;"	f
s:base.tap_keyinput	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.tap_keyinput(key)$/;"	f
s:base.untap_keyinput	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.untap_keyinput(key)$/;"	f
s:base.variables.modules.get_slot	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	function! s:base.variables.modules.get_slot(val)$/;"	f
s:base0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base0 = [ '#0000ff', 12 ]$/;"	v
s:base0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base0 = '#666666'$/;"	v
s:base0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base0 = '#909090'$/;"	v
s:base0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base0 = '#ffffff'$/;"	v
s:base0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base0 = '#949494'$/;"	v
s:base0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base0 = '#777777'$/;"	v
s:base0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base0 = [ '#808080', 244 ]$/;"	v
s:base00	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base00 = [ '#ffff00', 11  ]$/;"	v
s:base00	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base00 = '#808080'$/;"	v
s:base00	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base00 = '#6060df'$/;"	v
s:base00	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base00 = '#767676'$/;"	v
s:base00	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base00 = [ '#666666', 242  ]$/;"	v
s:base01	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base01 = [ '#00ff00', 10 ]$/;"	v
s:base01	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base01 = '#b4b4b4'$/;"	v
s:base01	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base01 = '#6060af'$/;"	v
s:base01	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base01 = '#606060'$/;"	v
s:base01	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base01 = [ '#585858', 240 ]$/;"	v
s:base02	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base02 = [ '#000000', 0 ]$/;"	v
s:base02	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base02 = '#c8c8c8'$/;"	v
s:base02	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base02 = '#434343'$/;"	v
s:base02	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base02 = '#606087'$/;"	v
s:base02	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base02 = '#4e4e4e'$/;"	v
s:base02	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base02 = '#444444'$/;"	v
s:base02	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base02 = [ '#30302c ', 236 ]$/;"	v
s:base02	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base02 = [ '#30302c ', 236 ]$/;"	v
s:base02	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base02 = [ '#30302c ', 236 ]$/;"	v
s:base02	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base02 = [ '#444444 ', 238 ]$/;"	v
s:base023	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base023 = '#dfdfdf'$/;"	v
s:base023	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base023 = '#303030'$/;"	v
s:base023	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base023 = '#202087'$/;"	v
s:base023	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base023 = '#262626'$/;"	v
s:base023	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base023 = '#333333'$/;"	v
s:base023	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base023 = [ '#353535 ', 236 ]$/;"	v
s:base03	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base03 = [ '#808080', 8 ]$/;"	v
s:base03	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base03 = '#fafafa'$/;"	v
s:base03	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base03 = '#1d1f21'$/;"	v
s:base03	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base03 = '#002451'$/;"	v
s:base03	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base03 = '#12124c'$/;"	v
s:base03	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base03 = '#2d2d2d'$/;"	v
s:base03	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base03 = [ '#242424', 235 ]$/;"	v
s:base1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base1 = [ '#00ffff', 14 ]$/;"	v
s:base1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base1 = '#555555'$/;"	v
s:base1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base1 = '#a0a0a0'$/;"	v
s:base1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base1 = '#ffffff'$/;"	v
s:base1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base1 = '#b2b2b2'$/;"	v
s:base1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base1 = '#999999'$/;"	v
s:base1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base1 = [ '#969696', 247 ]$/;"	v
s:base2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base2 = [ '#c0c0c0', 7 ]$/;"	v
s:base2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base2 = '#4f4f4f'$/;"	v
s:base2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base2 = '#bababa'$/;"	v
s:base2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base2 = '#ffffff'$/;"	v
s:base2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base2 = '#c6c6c6'$/;"	v
s:base2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base2 = '#aaaaaa'$/;"	v
s:base2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base2 = [ '#a8a8a8', 248 ]$/;"	v
s:base23	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base23 = '#ffffff'$/;"	v
s:base23	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base23 = '#d0d0d0'$/;"	v
s:base23	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base23 = '#bbbbbb'$/;"	v
s:base3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base3 = [ '#ffffff', 15 ]$/;"	v
s:base3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base3 = '#4d4d4c'$/;"	v
s:base3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base3 = '#c5c8c6'$/;"	v
s:base3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base3 = '#ffffff'$/;"	v
s:base3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base3 = '#eaeaea'$/;"	v
s:base3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base3 = '#cccccc'$/;"	v
s:base3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base3 = [ '#d0d0d0', 252 ]$/;"	v
s:base_path	nvim/plugged/syntastic/syntax_checkers/python/python.vim	/^let s:base_path = expand('<sfile>:p:h', 1) . syntastic#util#Slash()$/;"	v
s:base_spec	nvim/autoload/plug.vim	/^let s:base_spec = { 'branch': 'master', 'frozen': 0 }$/;"	v
s:bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg     = [ '#282c34', 235 ]$/;"	v
s:bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg     = [ '#fafafa', 255 ]$/;"	v
s:bg_processes	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let s:bg_processes = {}$/;"	v
s:bin	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = fnamemodify(s:bin.preview, ':8')$/;"	v
s:bin	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = split(system('for %A in ("'.s:bin.preview.'") do @echo %~sA'), "\\n")[0]$/;"	v
s:bin	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^  let s:bin.preview = 'bash '.escape(s:bin.preview, '\\')$/;"	v
s:bin	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:bin_dir	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:h:h:h').'\/bin\/'$/;"	v
s:binary_search	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
s:black	nvim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:black(x) abort$/;"	f
s:black	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:black = [ '#2b2b2b', 235 ]$/;"	v
s:black	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:black = [ '#232526', 233 ]$/;"	v
s:black	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:black = s:colors.black$/;"	v
s:black	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:black = 0$/;"	v
s:black	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^let s:black = '#000000'$/;"	v
s:blank	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:blank(repel)$/;"	f
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:blue = [ '#000080', 4 ]$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:blue = [ '#4fb4d8' , 39 ]$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:blue = '#00afaf'$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:blue = '#81a2be'$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:blue = '#bbdaff'$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:blue = '#7aa6da'$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:blue = '#99cccc'$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:blue = [ '#6897bb' , 67 ] $/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:blue = [ '#8197bf', 103 ]$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:blue   = '#89ddff'$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:blue   = '#82aaff'$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:blue   = [ '#61afef', 75 ]$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:blue = [ '#87afaf', 109 ]$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:blue = [ '#5573a3', 4 ]$/;"	v
s:blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:blue = [ '#8ac6f2', 117 ]$/;"	v
s:blue	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:blue = s:colors.blue$/;"	v
s:bname	nvim/plugged/apiblueprint.vim/plugin/apiblueprint.vim	/^let s:bname = '__Refract__'$/;"	v
s:break	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
s:bright_blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_blue = [ '#8eb2f7', 12 ]$/;"	v
s:bright_green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_green = [ '#98bc37', 10 ]$/;"	v
s:bright_magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_magenta = [ '#e35682', 13 ]$/;"	v
s:browsefilter	nvim/plugged/vim-pug/ftplugin/pug.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	nvim/plugged/vim-pug/ftplugin/pug.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:btags_sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
s:btags_source	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
s:buf_nr	nvim/plugged/vim-go/autoload/go/doc.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr	nvim/plugged/vim-go/autoload/go/ui.vim	/^let s:buf_nr = -1$/;"	v
s:buffer_line_handler	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
s:buffer_lines	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_lines(query)$/;"	f
s:buflisted	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
s:buflisted_sorted	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted_sorted()$/;"	f
s:bufnr	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:bufopen	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
s:build_command	nvim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:build_command(cmd)$/;"	f
s:bvars	nvim/plugged/vim-javascript/indent/javascript.vim	/^let s:bvars = {$/;"	v
s:bx	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^let s:bx = '{\\%("[^"]*"\\|''[^'']*''\\|\\$#\\|\\${\\w\\+}\\|\\$\\+\\|{[^{]\\+\\|[^{}]\\)\\{-}}'$/;"	v
s:c_flag	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:c_flag = s:git_supports_command_line_config_override()$/;"	v
s:cache_command	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:cache_command = {}$/;"	v
s:cache_project_root	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
s:cache_sid	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:cache_sid = {}$/;"	v
s:call	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:call(list, func, ...)$/;"	f
s:call_jsonrpc	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:call_jsonrpc(method, ...) abort$/;"	f
s:callback	nvim/plugged/vim-go/autoload/go/job.vim	/^  function! s:callback(chan, msg) dict$/;"	f
s:callback2on_stderr	nvim/plugged/vim-go/autoload/go/job.vim	/^          function! s:callback2on_stderr(ch, data, event) dict$/;"	f
s:callback2on_stdout	nvim/plugged/vim-go/autoload/go/job.vim	/^          function! s:callback2on_stdout(ch, data, event) dict$/;"	f
s:can_preserve_syntax	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:can_preserve_syntax = s:has_patch(7, 4, 792)$/;"	v
s:capture	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:capture(name)$/;"	f
s:capture	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture(...)$/;"	f
s:capture	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
s:capture_list	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture_list(...)$/;"	f
s:cd	nvim/plugged/vim-go/scripts/runtest.vim	/^let s:cd = exists('*haslocaldir') && haslocaldir() ? 'lcd ' : 'cd '$/;"	v
s:chCwd	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f
s:chRoot	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f
s:channel_log	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:char_range	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
s:checkVersion	nvim/plugged/vim-go/plugin/go.vim	/^function! s:checkVersion() abort$/;"	f
s:check_custom_option	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:check_custom_option(old_var, new_var) abort$/;"	f
s:check_custom_var	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:check_custom_var(source_name, old_var, new_var) abort$/;"	f
s:check_file	nvim/plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let s:check_file = syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . '/;"	v
s:check_ls	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:check_ls() abort$/;"	f
s:check_required_python_for_deoplete	nvim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_required_python_for_deoplete() abort$/;"	f
s:check_ruby	nvim/autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:check_t_list	nvim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_t_list() abort$/;"	f
s:check_timers	nvim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_timers() abort$/;"	f
s:checkout	nvim/autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:chomp	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
s:chomp	nvim/plugged/vim-go/autoload/go/keyify.vim	/^function! s:chomp(string)$/;"	f
s:chsh	nvim/autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:clean	nvim/autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:cleanlist	nvim/plugged/vim-go/autoload/go/term.vim	/^function! s:cleanlist(winid, listtype) abort$/;"	f
s:clear	nvim/plugged/lightline.vim/test/link.vim	/^function! s:clear()$/;"	f
s:clear	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:clear(dict) abort$/;"	f
s:clear	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:clear(list) abort$/;"	f
s:clear	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:clear(bufnr)$/;"	f
s:clearState	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:clearState() abort$/;"	f
s:close	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:close() dict "{{{$/;"	f
s:closeChildren	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
s:closeCurrentDir	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
s:closeTreeWindow	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
s:close_all	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:close_all(self) abort "{{{$/;"	f
s:close_cb	nvim/plugged/vim-go/autoload/go/def.vim	/^  function! s:close_cb(next, ch) dict$/;"	f
s:close_cb	nvim/plugged/vim-go/autoload/go/job.vim	/^  function! s:close_cb(ch) dict$/;"	f
s:closed_fdopen	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:closed_fdopen(f_close, f_read, f_write) abort "{{{$/;"	f
s:cmd	nvim/plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^let s:cmd = {}$/;"	v
s:cmd.close	nvim/plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.close() abort "{{{$/;"	f
s:cmd.open	nvim/plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.open() abort "{{{$/;"	f
s:cmd.system	nvim/plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.system(cmd) abort "{{{$/;"	f
s:cmd_history_sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
s:cmd_job	nvim/plugged/vim-go/autoload/go/cmd.vim	/^function! s:cmd_job(args) abort$/;"	f
s:cmdheight	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:cmdheight = {}$/;"	v
s:cmdheight.get	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.get()$/;"	f
s:cmdheight.restore	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.restore()$/;"	f
s:cmdheight.save	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.save()$/;"	f
s:cmdline	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:cmdline = s:V.import('Over.Commandline.Base')$/;"	v
s:code	nvim/plugged/vim-go/autoload/fzf/decls.vim	/^function! s:code(group, attr) abort$/;"	f
s:color	nvim/plugged/vim-go/autoload/fzf/decls.vim	/^function! s:color(str, group) abort$/;"	f
s:color_prefix	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:color_prefix  = 'cterm'$/;"	v
s:color_prefix	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^let s:color_prefix  = 'gui'$/;"	v
s:colors	nvim/plugged/palenight.vim/autoload/palenight.vim	/^let s:colors = {$/;"	v
s:colors	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:colors = palenight#GetColors()$/;"	v
s:combinations	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
s:command	nvim/plugged/apiblueprint.vim/plugin/apiblueprint.vim	/^let s:command = 'drafter -f json'$/;"	v
s:command	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:command(cmd, ...)$/;"	f
s:command_sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
s:comment_grey	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:comment_grey = s:colors.comment_grey$/;"	v
s:commits	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits(buffer_local, args)$/;"	f
s:commits_sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
s:compare_git_uri	nvim/autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:complete	nvim/plugged/vim-go/autoload/go/complete.vim	/^  function! s:complete(job, exit_status, messages) abort dict$/;"	f
s:complete	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:complete(job, exit_status, data) abort$/;"	f
s:complete	nvim/plugged/vim-go/autoload/go/guru.vim	/^  function! s:complete(job, exit_status, messages) dict abort$/;"	f
s:complete	nvim/plugged/vim-go/plugin/go.vim	/^fun! s:complete(lead, cmdline, cursor)$/;"	f
s:complete_insert	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
s:complete_trigger	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
s:completion_async	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_async(timer) abort$/;"	f
s:completion_begin	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_begin(event) abort$/;"	f
s:completion_timer_start	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_timer_start(event) abort$/;"	f
s:completion_timer_stop	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_timer_stop() abort$/;"	f
s:completions	nvim/plugged/vim-go/autoload/go/complete.vim	/^let s:completions = ""$/;"	v
s:concat	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:concat(list) abort$/;"	f
s:concealends	nvim/plugged/vim-markdown/syntax/markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealends	nvim/plugged/vim-markdown/syntax/markdown.vim	/^let s:concealends = ''$/;"	v
s:config	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:config = {$/;"	v
s:conj	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
s:cons	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
s:const	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:const(val, min, max)$/;"	f
s:contents	nvim/plugged/vimproc.vim/test/fopen.vim	/^let s:contents = ['foo', 'bar']$/;"	v
s:continuation	nvim/plugged/typescript-vim/indent/typescript.vim	/^let s:continuation = get(g:,'typescript_continuation',$/;"	v
s:continuation	nvim/plugged/vim-javascript/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:continues	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:continues(ln,con)$/;"	f
s:convert	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:convert(name, index) abort$/;"	f
s:convert	nvim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:convert(rgb) abort$/;"	f
s:convertMigemo	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertMigemo(re) "{{{$/;"	f
s:convertRegep	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertRegep(input) "{{{$/;"	f
s:convertSmartcase	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartcase(re, char) "{{{$/;"	f
s:convertSmartsign	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartsign(chars) "{{{$/;"	f
s:convert_args	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:convert_args(args) abort "{{{$/;"	f
s:convert_t_regexp	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convert_t_regexp(re, direction) "{{{$/;"	f
s:counter	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:counter = 0$/;"	v
s:coverage_browser_callback	nvim/plugged/vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_callback(coverfile, job, exit_status, data)$/;"	f
s:coverage_callback	nvim/plugged/vim-go/autoload/go/coverage.vim	/^function! s:coverage_callback(coverfile, job, exit_status, data)$/;"	f
s:coverage_job	nvim/plugged/vim-go/autoload/go/coverage.vim	/^function s:coverage_job(args)$/;"	f
s:cpo_save	nvim/autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/fzf.vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/goyo.vim/autoload/goyo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/typescript-vim/compiler/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/typescript-vim/ftplugin/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/typescript-vim/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/ctrlp/decls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/fzf/decls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/alternate.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/asmfmt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/cmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/cmd_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/complete_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/config.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/coverage.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/debug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/debug_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/decls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/def.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/def_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/doc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/fillstruct.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/fmt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/fmt_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/guru.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/guru_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/highlight_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/iferr.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/impl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/impl_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/import.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/indent_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/issue.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/job.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/keyify.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/lint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/lint_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/list.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/mod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/package.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/path.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/play.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/rename.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/statusline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/tags.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/tags_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/template.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/term.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/term_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/test_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/textobj.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/tool.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/tool_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/ui.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/go/util.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/autoload/gotest.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/compiler/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/ftdetect/gofiletype.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/ftplugin/asm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/ftplugin/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/ftplugin/go/tagbar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/ftplugin/gomod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/indent/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/indent/gohtmltmpl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/plugin/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/scripts/runbench.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/scripts/runtest.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-go/test/gopath_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	nvim/plugged/vim-javascript/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:create	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:create(targets, keys) abort$/;"	f
s:create_cmd	nvim/plugged/vim-go/autoload/go/tags.vim	/^func s:create_cmd(args) abort$/;"	f
s:create_win2pos2hint	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:create_win2pos2hint(hint_dict) abort$/;"	f
s:csi	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
s:cubergb	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:cubergb = [ 0x00, 0x5F, 0x87, 0xAF, 0xD7, 0xFF ]$/;"	v
s:cuicolor	nvim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:cuicolor = {$/;"	v
s:cuicolors	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cuicolors = {$/;"	v
s:cuiindex	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 2$/;"	v
s:current_dir	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_file	nvim/plugged/vim-go/autoload/go/template.vim	/^let s:current_file = expand("<sfile>")$/;"	v
s:current_fileencodings	nvim/plugged/vim-go/ftdetect/gofiletype.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileformats	nvim/plugged/vim-go/ftdetect/gofiletype.vim	/^let s:current_fileformats = ''$/;"	v
s:current_hunk	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:current_hunk() abort$/;"	f
s:cursor_grey	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:cursor_grey = s:colors.cursor_grey$/;"	v
s:cursor_in_two_hunks	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:cursor_in_two_hunks()$/;"	f
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:cyan = [ '#008080', 6 ]$/;"	v
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:cyan = '#3e999f'$/;"	v
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:cyan = '#8abeb7'$/;"	v
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:cyan = '#99ffff'$/;"	v
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:cyan = '#70c0b1'$/;"	v
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:cyan = '#009999'$/;"	v
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:cyan = [ '#8fbfdc', 110 ]$/;"	v
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:cyan = [ '#66d9ef', 81 ]$/;"	v
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:cyan = [ '#87d7d7', 23 ]$/;"	v
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:cyan = [ '#0aaeb3', 6 ]$/;"	v
s:cyan	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:cyan = s:colors.cyan$/;"	v
s:darkGray	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:darkGray = [ '#45474f' , 238 ]$/;"	v
s:dark_red	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:dark_red = s:colors.dark_red$/;"	v
s:dark_yellow	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:dark_yellow = s:colors.dark_yellow$/;"	v
s:debug	nvim/plugged/vim-go/autoload/go/debug_test.vim	/^function! s:debug(...) abort$/;"	f
s:decode_list	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:decode_list(str) abort$/;"	f
s:decode_size	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:decode_size(str, off) abort$/;"	f
s:deepextend	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:deepextend(expr1, expr2) abort$/;"	f
s:def_job	nvim/plugged/vim-go/autoload/go/def.vim	/^function s:def_job(args, state) abort$/;"	f
s:default_action	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:default_config	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:default_config() abort$/;"	f
s:default_includes	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [$/;"	v
s:default_list_type_commands	nvim/plugged/vim-go/autoload/go/list.vim	/^let s:default_list_type_commands = {$/;"	v
s:default_mapping	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^    function! s:default_mapping(motions, do_mapping) "{{{$/;"	f
s:define_commands	nvim/autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:define_completion_via_timer	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:define_completion_via_timer(event) abort$/;"	f
s:define_on_event	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:define_on_event(event) abort$/;"	f
s:define_sign_line_highlights	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_line_highlights() abort$/;"	f
s:define_sign_text	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_text() abort$/;"	f
s:define_signals	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:define_signals() abort$/;"	f
s:defs	nvim/plugged/fzf.vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
s:delete	nvim/autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:deleteBookmark	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark)$/;"	f
s:delete_expands	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:delete_expands()$/;"	f
s:delete_op	nvim/autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:detect_wrap_mode	nvim/plugged/vim-pencil/autoload/pencil.vim	/^fun! s:detect_wrap_mode() abort$/;"	f
s:did_check_exe	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:diff	nvim/autoload/plug.vim	/^function! s:diff()$/;"	f
s:dir	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dir(bufnr) abort$/;"	f
s:dir	nvim/plugged/vim-go/scripts/runtest.vim	/^let s:dir = expand('%:p:h')$/;"	v
s:dirArrows	nvim/plugged/nerdtree/syntax/nerdtree.vim	/^let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpand/;"	v
s:dirname	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:dirname(path) abort$/;"	f
s:dirpath	nvim/autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:discard_header	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:discard_header(hunk_diff)$/;"	f
s:displayHelp	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f
s:dll_handle	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:dll_handle = s:vp_dlopen(g:vimproc#dll_path)$/;"	v
s:do	nvim/autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:doModeline	nvim/plugged/vim-pencil/autoload/pencil.vim	/^fun! s:doModeline(line) abort$/;"	f
s:doModelines	nvim/plugged/vim-pencil/autoload/pencil.vim	/^fun! s:doModelines() abort$/;"	f
s:doOne	nvim/plugged/vim-pencil/autoload/pencil.vim	/^fun! s:doOne(item) abort$/;"	f
s:do_tests	nvim/plugged/emmet-vim/unittest.vim	/^function! s:do_tests(bang, ...)$/;"	f
s:doautocmd	nvim/autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:doautocmd_user	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:doautocmd_user(prefix, command)$/;"	f
s:dobufread	nvim/autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:dollar_add	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! s:dollar_add(base,no) abort$/;"	f
s:done	nvim/plugged/vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	nvim/plugged/vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:done	nvim/plugged/vim-go/scripts/runtest.vim	/^  let s:done += 1$/;"	v
s:done	nvim/plugged/vim-go/scripts/runtest.vim	/^let s:done = 0$/;"	v
s:done_include	nvim/plugged/vim-markdown/syntax/markdown.vim	/^    let s:done_include[matchstr(s:type,'[^.]*')] = 1$/;"	v
s:done_include	nvim/plugged/vim-markdown/syntax/markdown.vim	/^  let s:done_include = {}$/;"	v
s:done_include	nvim/plugged/vim-markdown/syntax/markdown.vim	/^  let s:done_include[matchstr(s:type,'[^.]*')] = 1$/;"	v
s:done_include	nvim/plugged/vim-markdown/syntax/markdown.vim	/^let s:done_include = {}$/;"	v
s:dot_vim_path	vim/plugs.vim	/^let s:dot_vim_path = s:vim_path.'\/.vim'$/;"	v
s:dummy_sign_id	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:echo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:echo(hl, msg) abort$/;"	f
s:echo	nvim/plugged/vim-go/autoload/go/util.vim	/^function! s:echo(msg, hi)$/;"	f
s:echo_go_info	nvim/plugged/vim-go/plugin/go.vim	/^function! s:echo_go_info()$/;"	f
s:echomsg	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
s:edit_content	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:edit_content(content, ...) abort$/;"	f
s:editorconfig_core_mode	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = ''$/;"	v
s:editorconfig_core_mode	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = g:EditorConfig_core_mode$/;"	v
s:efm	nvim/plugged/vim-go/autoload/go/test.vim	/^let s:efm = ""$/;"	v
s:elapsed_time	nvim/plugged/vim-go/scripts/runtest.vim	/^  let s:elapsed_time = substitute(reltimestr(reltime(s:started)), '^\\s*\\(.\\{-}\\)\\s*$', '\\1/;"	v
s:emacs	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:emacs = {$/;"	v
s:emacs.keymapping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:emacs.keymapping(cmdline)$/;"	f
s:emmet_settings	nvim/plugged/emmet-vim/autoload/emmet.vim	/^let s:emmet_settings = {$/;"	v
s:emmet_unittest_complete	nvim/plugged/emmet-vim/unittest.vim	/^function! s:emmet_unittest_complete(arglead, cmdline, cmdpos)$/;"	f
s:enable_syntax	nvim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! s:enable_syntax() abort$/;"	f
s:encode_list	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:encode_list(arr) abort$/;"	f
s:encode_size	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:encode_size(n) abort$/;"	f
s:engine	nvim/plugged/vim-go/ftplugin/go/snippets.vim	/^let s:engine = go#config#SnippetEngine()$/;"	v
s:env_cache	nvim/plugged/vim-go/autoload/go/util.vim	/^let s:env_cache = {}$/;"	v
s:environment	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:environment = {}$/;"	v
s:environment.restore	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:environment.restore() abort$/;"	f
s:err	nvim/autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:err_cb	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:err_cb(ch, msg) abort$/;"	f
s:error	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:error = '#5f0000'$/;"	v
s:error	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:error = '#ffafdf'$/;"	v
s:error	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:error(text, where)$/;"	f
s:error	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
s:errored	nvim/plugged/vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	nvim/plugged/vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errorformat	nvim/plugged/vim-go/autoload/go/test.vim	/^function! s:errorformat() abort$/;"	f
s:errors	nvim/plugged/vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	nvim/plugged/vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	nvim/plugged/vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:esc	nvim/autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escape	nvim/plugged/emmet-vim/unittest.vim	/^function! s:escape(str)$/;"	f
s:escape	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
s:escape_file_searching	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
s:escape_pattern	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_regexp_char	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:escape_regexp_char(char) "{{{$/;"	f
s:escape_special_key	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:escape_special_key(key)$/;"	f
s:escrtp	nvim/autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:eval	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
s:eval	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:eval(arg) abort$/;"	f
s:eval_tree	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:eval_tree(var, nest) abort$/;"	f
s:evaluate_expand	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:evaluate_expand(component) abort$/;"	f
s:excmds	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
s:exec	nvim/plugged/vim-go/autoload/go/util.vim	/^function! s:exec(cmd, ...) abort$/;"	f
s:exists	nvim/plugged/emmet-vim/autoload/emmet/lang.vim	/^let s:exists = {}$/;"	v
s:exists	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:exists(name) abort dict$/;"	f
s:exists_file	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:exists_file(bufnr) abort$/;"	f
s:exit_cb	nvim/plugged/vim-go/autoload/go/def.vim	/^  function! s:exit_cb(next, job, exitval) dict$/;"	f
s:exit_cb	nvim/plugged/vim-go/autoload/go/job.vim	/^  function! s:exit_cb(job, exitval) dict$/;"	f
s:exit_cb	nvim/plugged/vim-go/autoload/go/rename.vim	/^function! s:exit_cb(next, job, exitval) abort$/;"	f
s:expand	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:expand(components) abort$/;"	f
s:expand	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:expand(...)$/;"	f
s:expand_var	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:expand_var() abort$/;"	f
s:extend	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
s:extend	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:extend(dict, src)$/;"	f
s:extend_opts	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
s:extract_name	nvim/autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:fail	nvim/plugged/vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	nvim/plugged/vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:fail	nvim/plugged/vim-go/scripts/runtest.vim	/^    let s:fail += 1$/;"	v
s:fail	nvim/plugged/vim-go/scripts/runtest.vim	/^let s:fail = 0$/;"	v
s:fdopen	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen(fd, f_close, f_read, f_write) abort "{{{$/;"	f
s:fdopen_pgroup	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pgroup(proc, fd, f_close, f_read, f_write) abort "{{{$/;"	f
s:fdopen_pipes	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pipes(fd, f_close, f_read, f_write) abort "{{{$/;"	f
s:fdopen_pty	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pty(fd_stdin, fd_stdout, f_close, f_read, f_write) abort "{{{$/;"	f
s:fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:fg     = '#d5dbe5'$/;"	v
s:fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:fg     = '#eeffff'$/;"	v
s:fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:fg     = [ '#abb2bf', 145 ]$/;"	v
s:fg_color_calc	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:fg_color_calc = 'let color = s:XTermColorForRGB(a:color)'$/;"	v
s:fg_color_calc	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^let s:fg_color_calc = 'let color = "#" . toupper(a:color)'$/;"	v
s:file_options	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
s:file_source	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
s:file_split_prefix	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
s:filename	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:filename(bufnr) abort$/;"	f
s:filename	nvim/plugged/vimproc.vim/test/fopen.vim	/^let s:filename = 'test.txt'$/;"	v
s:fill_quickfix	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fill_quickfix(list, ...)$/;"	f
s:filtermx	nvim/plugged/emmet-vim/autoload/emmet.vim	/^let s:filtermx = '|\\(\\%(bem\\|html\\|blade\\|haml\\|slim\\|e\\|c\\|s\\|fc\\|xsl\\|t\\|\\\/[^ ]/;"	v
s:finalize	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:finalize() abort$/;"	f
s:find	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
s:findAndRevealPath	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr)$/;"	f
s:findMotion	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:findMotion(num_strokes, direction) "{{{$/;"	f
s:find_current_signs	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:find_current_signs(bufnr) abort$/;"	f
s:find_index	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
s:find_indices	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
s:find_last_index	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
s:find_name	nvim/autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:find_open_window	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
s:finish	nvim/autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	nvim/autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:first_line	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
s:first_rtp	nvim/autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:first_sign_id	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:first_sign_id	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:fix_file_references	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:fix_file_references(filepath, hunk_diff)$/;"	f
s:flatten	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
s:flatten_twice	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:flatten_twice(xss) abort$/;"	f
s:fmt_autosave	nvim/plugged/vim-go/plugin/go.vim	/^function! s:fmt_autosave()$/;"	f
s:fmt_cmd	nvim/plugged/vim-go/autoload/go/fmt.vim	/^function! s:fmt_cmd(bin_name, source, target)$/;"	f
s:fmt_excmd	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:fmt_excmd = '   '.s:blue('%-38s', 'Statement').'%s'$/;"	v
s:fname_prefix	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
s:foldl	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:foldl(f, init, dict) abort$/;"	f
s:foldl	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
s:foldl1	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
s:foldr	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:foldr(f, init, dict) abort$/;"	f
s:foldr	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
s:foldr1	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
s:foreground	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:foreground = '#d0d0d0'$/;"	v
s:foreground	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:foreground = '#4d4d4c'$/;"	v
s:format_buffer	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_buffer(b)$/;"	f
s:format_cmd	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
s:format_excmd	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
s:format_for_log	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
s:format_git_log	nvim/autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_mark	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
s:format_message	nvim/autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:format_win	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
s:formatelempat	nvim/plugged/tabular/autoload/tabular.vim	/^let s:formatelempat = '\\%([lrc]\\d\\+\\)'$/;"	v
s:frozenset	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:frozenset(...) abort$/;"	f
s:frozenset	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:frozenset = deepcopy(s:_base_set)$/;"	v
s:funcref	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:funcref(funcname) abort$/;"	f
s:function	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
s:function	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
s:fzf	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
s:fzf_restore_colors	nvim/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
s:fzf_vim_term	nvim/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
s:garbage_collect	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:garbage_collect(is_force) abort "{{{$/;"	f
s:gather_poses	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:gather_poses(pattern) abort$/;"	f
s:gather_visible_matched_poses	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:gather_visible_matched_poses(pattern, direction, allow_cursor_pos_match) abort$/;"	f
s:generate_wildignore_options	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:generate_wildignore_options() abort$/;"	f
s:get	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:get(name)$/;"	f
s:get	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:get(name, ...)$/;"	f
s:getPromptMessage	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:getPromptMessage(num_strokes) "{{{$/;"	f
s:getReceiver	nvim/plugged/vim-go/autoload/go/impl.vim	/^function! s:getReceiver()$/;"	f
s:get_background_colors	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_background_colors(group) abort$/;"	f
s:get_cmdline	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:get_cmdline()$/;"	f
s:get_cmdline_cword	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:get_cmdline_cword(backward, cword)$/;"	f
s:get_color	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_color	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:get_color(group, attr)$/;"	f
s:get_ctags_executable	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
s:get_escaped_group_char	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:get_escaped_group_char(dict, char) "{{{$/;"	f
s:get_git_root	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_git_root()$/;"	f
s:get_hit_enter_max_length	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
s:get_last_selected	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
s:get_selected_text	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
s:get_visual_content	nvim/plugged/vim-go/autoload/go/play.vim	/^function! s:get_visual_content() abort$/;"	f
s:get_visual_selection	nvim/plugged/vim-go/autoload/go/play.vim	/^function! s:get_visual_selection() abort$/;"	f
s:get_winwidth	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:get_winwidth() abort$/;"	f
s:getchar	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^function! s:getchar(...)$/;"	f
s:getchar	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
s:getchar_safe	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
s:git_diff	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff()$/;"	f
s:git_diff_staged	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged()$/;"	f
s:git_supports_command_line_config_override	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:git_supports_command_line_config_override() abort$/;"	f
s:git_validate	nvim/autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:git_version()$/;"	f
s:git_version_requirement	nvim/autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:glob	nvim/autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
s:glob_dir	nvim/autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:globpath	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
s:glsl_extensions	nvim/plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:glsl_extensions = {$/;"	v
s:go_decls_var	nvim/plugged/vim-go/autoload/ctrlp/decls.vim	/^let s:go_decls_var = {$/;"	v
s:go_major_version	nvim/plugged/vim-go/autoload/go/mod.vim	/^let s:go_major_version = ""$/;"	v
s:go_packages	nvim/plugged/vim-go/autoload/go/impl.vim	/^function! s:go_packages(dirs, arglead) abort$/;"	f
s:go_stack	nvim/plugged/vim-go/autoload/go/def.vim	/^let s:go_stack = []$/;"	v
s:go_stack_level	nvim/plugged/vim-go/autoload/go/def.vim	/^let s:go_stack_level = 0$/;"	v
s:go_test_show_name	nvim/plugged/vim-go/autoload/go/test.vim	/^let s:go_test_show_name = 0$/;"	v
s:goarch	nvim/plugged/vim-go/autoload/go/package.vim	/^    let s:goarch = '*'$/;"	v
s:goarch	nvim/plugged/vim-go/autoload/go/package.vim	/^    let s:goarch = g:golang_goarch$/;"	v
s:goarch	nvim/plugged/vim-go/autoload/go/package.vim	/^let s:goarch = $GOARCH$/;"	v
s:gocodeAutocomplete	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! s:gocodeAutocomplete() abort$/;"	f
s:gocodeCommand	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! s:gocodeCommand(cmd, args) abort$/;"	f
s:gocodeFile	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! s:gocodeFile()$/;"	f
s:godocWord	nvim/plugged/vim-go/autoload/go/doc.vim	/^function! s:godocWord(args) abort$/;"	f
s:gofiletype_post	nvim/plugged/vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_post()$/;"	f
s:gofiletype_pre	nvim/plugged/vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_pre(type)$/;"	f
s:gogetdoc	nvim/plugged/vim-go/autoload/go/doc.vim	/^function! s:gogetdoc(json) abort$/;"	f
s:gomod	nvim/plugged/vim-go/ftdetect/gofiletype.vim	/^fun! s:gomod()$/;"	f
s:goos	nvim/plugged/vim-go/autoload/go/package.vim	/^    let s:goos = '*'$/;"	v
s:goos	nvim/plugged/vim-go/autoload/go/package.vim	/^    let s:goos = 'darwin'$/;"	v
s:goos	nvim/plugged/vim-go/autoload/go/package.vim	/^    let s:goos = 'windows'$/;"	v
s:goos	nvim/plugged/vim-go/autoload/go/package.vim	/^    let s:goos = g:golang_goos$/;"	v
s:goos	nvim/plugged/vim-go/autoload/go/package.vim	/^let s:goos = $GOOS$/;"	v
s:gopath	nvim/plugged/vim-go/scripts/runtest.vim	/^let s:gopath = $GOPATH$/;"	v
s:got_fmt_error	nvim/plugged/vim-go/autoload/go/asmfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:goto_file	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:goto_file() abort$/;"	f
s:goyo_off	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:goyo_off()$/;"	f
s:goyo_on	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:goyo_on(dim)$/;"	f
s:gray	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:gray = [ '#686b78' , 242 ]$/;"	v
s:gray	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:gray = [ '#323232', 236 ]$/;"	v
s:gray	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:gray = [ '#808080', 244 ]$/;"	v
s:gray1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#2c393f'$/;"	v
s:gray1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#37474f'$/;"	v
s:gray1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#2e3c43'$/;"	v
s:gray1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#314549'$/;"	v
s:gray1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1  = [ '#494b53', 238 ]$/;"	v
s:gray1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1  = [ '#5c6370', 241 ]$/;"	v
s:gray2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#2c393f'$/;"	v
s:gray2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#d5dbe5'$/;"	v
s:gray2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#2E3C43'$/;"	v
s:gray2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#eeffff'$/;"	v
s:gray2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2  = [ '#2c323d', 235 ]$/;"	v
s:gray2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2  = [ '#f0f0f0', 255 ]$/;"	v
s:gray3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#37474f'$/;"	v
s:gray3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#707880'$/;"	v
s:gray3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#314549'$/;"	v
s:gray3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#546e7a'$/;"	v
s:gray3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3  = [ '#3e4452', 240 ]$/;"	v
s:gray3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3  = [ '#d0d0d0', 250 ]$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:green = [ '#008000', 2 ]$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:green = [ '#78bd65' , 41 ]$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:green = '#008700'$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:green = '#008700'$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:green = '#718c00'$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:green = '#b5bd68'$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:green = '#d1f1a9'$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:green = '#b9ca4a'$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:green = '#99cc99'$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:green = [ '#629755', 71 ] $/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:green = [ '#99ad6a', 107 ]$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:green  = '#8bd649'$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:green  = '#c3e88d'$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:green = [ '#a6e22e', 118 ]$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:green  = [ '#98c379', 35 ]$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:green  = [ '#98c379', 76 ]$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:green = [ '#87af87', 108 ]$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:green = [ '#519f50', 2 ]$/;"	v
s:green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:green = [ '#95e454', 119 ]$/;"	v
s:green	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:green = s:colors.green$/;"	v
s:grep_version	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:grep_version()$/;"	f
s:group_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
s:group_list	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:group_list()$/;"	f
s:grouping_algorithms	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:grouping_algorithms = {$/;"	v
s:groutineID	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:groutineID() abort$/;"	f
s:guard	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:guard = {}$/;"	v
s:guard.restore	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:guard.restore() abort$/;"	f
s:guicolor	nvim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:guicolor = {$/;"	v
s:guru_cmd	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! s:guru_cmd(args) range abort$/;"	f
s:gutter_fg_grey	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:gutter_fg_grey = s:colors.gutter_fg_grey$/;"	v
s:h	nvim/colors/thea.vim	/^function! s:h(group, style)$/;"	f
s:h	nvim/plugged/palenight.vim/colors/palenight.vim	/^function! s:h(group, style)$/;"	f
s:h	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^    let s:h.ids[s:group] = []$/;"	v
s:h	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h = {}$/;"	v
s:h	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h.ids = {}$/;"	v
s:h	vim/settings/thea.vim	/^function! s:h(group, style)$/;"	f
s:handleEmpty	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:handleEmpty(input, visualmode) "{{{$/;"	f
s:handleLeftClick	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
s:handleMiddleMouse	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
s:has	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
s:has_common_items	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
s:has_fresh_changes	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:has_fresh_changes(bufnr) abort$/;"	f
s:has_highlighting	nvim/plugged/syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_index	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
s:has_maven	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^let s:has_maven = 0$/;"	v
s:has_patch	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:has_patch(major, minor, patch) abort$/;"	f
s:has_vimproc	nvim/plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:has_vimproc() "{{{$/;"	f
s:hash_match	nvim/autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:hd2list	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2list(hd) abort$/;"	f
s:hd2str	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2str(hd) abort$/;"	f
s:hd2str_lua	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2str_lua(hd) abort$/;"	f
s:helptag_sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
s:hex	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^  let s:hex[ printf( '%02x', i ) ] = i$/;"	v
s:hex	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^let s:hex={}$/;"	v
s:hi	nvim/plugged/lightline.vim/test/highlight.vim	/^function! s:hi(name)$/;"	f
s:hi	nvim/plugged/lightline.vim/test/link.vim	/^function! s:hi(name)$/;"	f
s:hi	nvim/plugged/vim-go/syntax/go.vim	/^function! s:hi()$/;"	f
s:hide_linenr	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:hide_linenr()$/;"	f
s:hide_statusline	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:hide_statusline()$/;"	f
s:highlight_keys	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
s:highlight_name_for_change	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:highlight_name_for_change(text) abort$/;"	f
s:history	nvim/plugged/fzf.vim/plugin/fzf.vim	/^function! s:history(arg, bang)$/;"	f
s:history_sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
s:history_source	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
s:hook_list	nvim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^let s:hook_list = []$/;"	v
s:hooks	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks = [$/;"	v
s:hooks_camel	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks_camel = [$/;"	v
s:hunk_op	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:hunk_op(op)$/;"	f
s:hunk_re	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:id	nvim/plugged/vim-go/autoload/ctrlp/decls.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:imap	nvim/plugged/vim-pencil/autoload/pencil.vim	/^fun! s:imap(preserve_completion, key, icmd) abort$/;"	f
s:import	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:import_paths	nvim/plugged/vim-go/autoload/go/package.vim	/^let s:import_paths = {}$/;"	v
s:imports	nvim/plugged/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = '--compass'$/;"	v
s:imports	nvim/plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ''$/;"	v
s:in_comm	nvim/plugged/vim-javascript/indent/javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:inc_highlight	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:inc_highlight(re) "{{{$/;"	f
s:indent	nvim/plugged/vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	nvim/plugged/vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:index	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:index(haystack, needle, ...)$/;"	f
s:infer_properties	nvim/autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:info	nvim/plugged/vim-go/autoload/go/guru.vim	/^  function! s:info(exit_val, output, mode)$/;"	f
s:info_complete	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! s:info_complete(echo, result) abort$/;"	f
s:info_filter	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! s:info_filter(echo, result) abort$/;"	f
s:initVariable	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
s:init_internal_variables	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:init_internal_variables() abort$/;"	f
s:init_pad	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:init_pad(command)$/;"	f
s:initial_go_path	nvim/plugged/vim-go/autoload/go/path.vim	/^let s:initial_go_path = ""$/;"	v
s:initialized	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:initialized = 0$/;"	v
s:inject_snippet	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
s:input	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:input(cmdline)$/;"	f
s:input_helper	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
s:input_safe	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
s:install	nvim/autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:install_plugin	nvim/plugged/emmet-vim/plugin/emmet.vim	/^function! s:install_plugin(mode, buffer)$/;"	f
s:instance	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:instance = {}$/;"	v
s:instance.restore	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:instance.restore() abort$/;"	f
s:interface_list	nvim/plugged/vim-go/autoload/go/impl.vim	/^function! s:interface_list(pkg) abort$/;"	f
s:intersect	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
s:isActive	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:isActive()$/;"	f
s:is_absolute	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^  function! s:is_absolute(path) abort$/;"	f
s:is_added	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_added(from_count, to_count) abort$/;"	f
s:is_case_tolerant	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:is_case_tolerant() abort$/;"	f
s:is_case_tolerant	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_case_tolerant = filereadable(expand('<sfile>:r') . '.VIM')$/;"	v
s:is_cmdwin	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
s:is_cygwin	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
s:is_cygwin	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_dict	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
s:is_exiting	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_exiting() abort$/;"	f
s:is_file_buffer	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:is_file_buffer(bufnr) abort$/;"	f
s:is_float	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
s:is_funcref	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
s:is_handler_enabled	nvim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let s:is_handler_enabled = 0$/;"	v
s:is_in_fold	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:is_in_fold(lnum) abort$/;"	f
s:is_input_waiting	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:is_input_waiting(keymapping, input)$/;"	f
s:is_list	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
s:is_local_plug	nvim/autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_mac	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_mac() abort$/;"	f
s:is_mac	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_managed	nvim/autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_modified	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified(from_count, to_count) abort$/;"	f
s:is_modified_and_added	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_added(from_count, to_count) abort$/;"	f
s:is_modified_and_removed	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_removed(from_count, to_count) abort$/;"	f
s:is_null_device	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:is_null_device(filename) abort$/;"	f
s:is_number	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
s:is_numeric	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
s:is_preview_window_open	nvim/autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_pseudo_device	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:is_pseudo_device(filename) abort "{{{$/;"	f
s:is_removed	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_removed(from_count, to_count) abort$/;"	f
s:is_skip	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip(event) abort$/;"	f
s:is_skip_text	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip_text(event) abort$/;"	f
s:is_string	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
s:is_unix	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_unix() abort$/;"	f
s:is_unix	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_updated	nvim/autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_vital_vim	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_win	nvim/autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:is_win	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	nvim/plugged/fzf.vim/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_windows	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_windows() abort$/;"	f
s:is_windows	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_windows = has('win32')$/;"	v
s:iscontOne	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:iscontOne(i,num,cont)$/;"	f
s:issuebody	nvim/plugged/vim-go/autoload/go/issue.vim	/^function! s:issuebody() abort$/;"	f
s:itemno	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! s:itemno(itemno, current) abort$/;"	f
s:job_abort	nvim/autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:job_cb	nvim/autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	nvim/autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_out_cb	nvim/autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:join	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:join(...) abort$/;"	f
s:jump	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
s:jumpToChild	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last)$/;"	f
s:jumpToFirstChild	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
s:jumpToLastChild	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
s:jumpToNextSibling	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
s:jumpToParent	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
s:jumpToPrevSibling	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
s:jumpToRoot	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
s:jumpToSibling	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward)$/;"	f
s:jump_to_declaration_cb	nvim/plugged/vim-go/autoload/go/def.vim	/^function! s:jump_to_declaration_cb(mode, bin_name, job, exit_status, data) abort dict$/;"	f
s:keyMaps	nvim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:key_sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
s:kill_yarp	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:kill_yarp() abort$/;"	f
s:known_files	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:label_col	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:label_col()$/;"	f
s:last_errmsg	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:last_errmsg = ''$/;"	v
s:last_non_empty_line	nvim/autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:last_rtp	nvim/autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:last_status	nvim/plugged/vim-go/autoload/go/statusline.vim	/^let s:last_status = ""$/;"	v
s:last_status	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:last_status = 0$/;"	v
s:last_wildignores	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:last_wildignores = ''$/;"	v
s:lasterr	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let s:lasterr = []$/;"	v
s:lastline	nvim/autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:layout_keys	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:lazy	nvim/autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
s:length	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:length(str)$/;"	f
s:lexer	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:lexer = {}$/;"	v
s:lexer.advance	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.advance() abort$/;"	f
s:lexer.lex_digit	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.lex_digit() abort$/;"	f
s:lexer.skip_spaces	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.skip_spaces() abort$/;"	f
s:lexer.token	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.token() abort$/;"	f
s:lexer.value	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.value() abort$/;"	f
s:lhs_key_list	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:lhs_key_list(...)$/;"	f
s:libcall	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall(func, args) abort "{{{$/;"	f
s:libcall_raw_read	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall_raw_read(func, args) abort "{{{$/;"	f
s:libcall_raw_write	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall_raw_write(func, args) abort "{{{$/;"	f
s:lightGray	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:lightGray = [ '#848794' , 245 ]$/;"	v
s:light_red	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:light_red = s:colors.light_red$/;"	v
s:line	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:line(tabline, inactive) abort$/;"	f
s:line_adjustment_for_current_hunk	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:line_adjustment_for_current_hunk() abort$/;"	f
s:line_handler	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
s:lines	nvim/autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:links_to	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:links_to(highlight)$/;"	f
s:lint_job	nvim/plugged/vim-go/autoload/go/lint.vim	/^function! s:lint_job(args, bang, autosave)$/;"	f
s:list2hd	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:list2hd(lis) abort$/;"	f
s:list2str	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:list2str(lis) abort$/;"	f
s:listtype	nvim/plugged/vim-go/autoload/go/list.vim	/^function! s:listtype(listtype) abort$/;"	f
s:load	nvim/plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! s:load() abort$/;"	f
s:load	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:load(...) abort dict$/;"	f
s:load_plugin	nvim/autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:load_smart_dict	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:load_smart_dict() "{{{$/;"	f
s:loaded	nvim/autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:loaded = s:FALSE$/;"	v
s:loaded	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:loaded = {}$/;"	v
s:loaded_names	nvim/autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:localvar	nvim/plugged/emmet-vim/autoload/emmet.vim	/^function! s:localvar(current, key) abort$/;"	f
s:localvimrc_ask	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_ask = g:localvimrc_ask$/;"	v
s:localvimrc_ask	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_ask = 1$/;"	v
s:localvimrc_autocmd	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_autocmd = g:localvimrc_autocmd$/;"	v
s:localvimrc_autocmd	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_autocmd = 1$/;"	v
s:localvimrc_blacklist	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^    let s:localvimrc_blacklist = [ g:localvimrc_blacklist ]$/;"	v
s:localvimrc_blacklist	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^    let s:localvimrc_blacklist = g:localvimrc_blacklist$/;"	v
s:localvimrc_blacklist	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_blacklist = [ "^$" ] " this never matches a file$/;"	v
s:localvimrc_checksum_func	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^    let s:localvimrc_checksum_func = function("s:LocalVimRCCalcFNV")$/;"	v
s:localvimrc_checksum_func	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^    let s:localvimrc_checksum_func = function("s:LocalVimRcCalcSHA256")$/;"	v
s:localvimrc_checksum_func	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_checksum_func = function("sha256")$/;"	v
s:localvimrc_count	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_count = g:localvimrc_count$/;"	v
s:localvimrc_count	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_count = -1$/;"	v
s:localvimrc_data	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_data = {}$/;"	v
s:localvimrc_debug_lines	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_debug_lines = g:localvimrc_debug_lines$/;"	v
s:localvimrc_debug_lines	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_debug_lines = 100$/;"	v
s:localvimrc_debug_message	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_debug_message = []$/;"	v
s:localvimrc_enable	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_enable = g:localvimrc_enable$/;"	v
s:localvimrc_enable	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_enable = 1$/;"	v
s:localvimrc_event	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_event = g:localvimrc_event$/;"	v
s:localvimrc_event	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_event = [ "BufWinEnter" ]$/;"	v
s:localvimrc_event_pattern	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_event_pattern = g:localvimrc_event_pattern$/;"	v
s:localvimrc_event_pattern	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_event_pattern = "*"$/;"	v
s:localvimrc_file_directory_only	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_file_directory_only = g:localvimrc_file_directory_only$/;"	v
s:localvimrc_file_directory_only	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_file_directory_only = 0$/;"	v
s:localvimrc_finish	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_finish = 0$/;"	v
s:localvimrc_name	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^    let s:localvimrc_name = [ g:localvimrc_name ]$/;"	v
s:localvimrc_name	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^    let s:localvimrc_name = g:localvimrc_name$/;"	v
s:localvimrc_name	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_name = [ ".lvimrc" ]$/;"	v
s:localvimrc_persistence_file	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_persistence_file = expand('$HOME') . "\/.localvimrc_persistent"$/;"	v
s:localvimrc_persistence_file	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_persistence_file = expand('$HOME') . "\/_localvimrc_persistent"$/;"	v
s:localvimrc_persistence_file	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_persistence_file = g:localvimrc_persistence_file$/;"	v
s:localvimrc_persistence_file_checksum	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_persistence_file_checksum = ""$/;"	v
s:localvimrc_persistent	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_persistent = g:localvimrc_persistent$/;"	v
s:localvimrc_persistent	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_persistent = 0$/;"	v
s:localvimrc_persistent_data	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_persistent_data = {}$/;"	v
s:localvimrc_python2_enable	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_python2_enable = g:localvimrc_python2_enable$/;"	v
s:localvimrc_python2_enable	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_python2_enable = 1$/;"	v
s:localvimrc_python3_enable	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_python3_enable = g:localvimrc_python3_enable$/;"	v
s:localvimrc_python3_enable	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_python3_enable = 1$/;"	v
s:localvimrc_python_available	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^      let s:localvimrc_python_available = 1$/;"	v
s:localvimrc_python_available	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_python_available = 0$/;"	v
s:localvimrc_python_command	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^      let s:localvimrc_python_command = "python"$/;"	v
s:localvimrc_python_command	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^      let s:localvimrc_python_command = "python3"$/;"	v
s:localvimrc_python_command	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_python_command = "no working python available"$/;"	v
s:localvimrc_python_command	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_python_command = "not checked for python"$/;"	v
s:localvimrc_reverse	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_reverse = g:localvimrc_reverse$/;"	v
s:localvimrc_reverse	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_reverse = 0$/;"	v
s:localvimrc_running	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_running = 0$/;"	v
s:localvimrc_sandbox	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^  let s:localvimrc_sandbox = g:localvimrc_sandbox$/;"	v
s:localvimrc_sandbox	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_sandbox = 1$/;"	v
s:localvimrc_sourced	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_sourced = {}$/;"	v
s:localvimrc_whitelist	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^    let s:localvimrc_whitelist = [ g:localvimrc_whitelist ]$/;"	v
s:localvimrc_whitelist	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^    let s:localvimrc_whitelist = g:localvimrc_whitelist$/;"	v
s:localvimrc_whitelist	nvim/plugged/vim-localvimrc/plugin/localvimrc.vim	/^let s:localvimrc_whitelist = [ "^$" ] " this never matches a file$/;"	v
s:lod	nvim/autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	nvim/autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	nvim/autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	nvim/autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	nvim/autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log	nvim/plugged/emmet-vim/unittest.vim	/^function! s:log(msg)$/;"	f
s:log4	nvim/autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:log_file	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:logger	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:logger(prefix, ch, msg) abort$/;"	f
s:logging	nvim/plugged/emmet-vim/unittest.vim	/^let s:logging = 0$/;"	v
s:logmessages	nvim/plugged/vim-go/scripts/runtest.vim	/^function! s:logmessages() abort$/;"	f
s:logn	nvim/plugged/emmet-vim/unittest.vim	/^function! s:logn(msg)$/;"	f
s:logpos	nvim/autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:logs	nvim/plugged/vim-go/scripts/runtest.vim	/^let s:logs = []$/;"	v
s:looking_at	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:looking_at()$/;"	f
s:lpad	nvim/autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:mac_gui	nvim/autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:magenta = [ '#800080', 5 ]$/;"	v
s:magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:magenta = '#8959a8'$/;"	v
s:magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:magenta = '#b294bb'$/;"	v
s:magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:magenta = '#ebbbff'$/;"	v
s:magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:magenta = '#c397d8'$/;"	v
s:magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:magenta = '#cc99cc'$/;"	v
s:magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:magenta = [ '#f0a0c0', 217 ]$/;"	v
s:magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:magenta = [ '#df5f87', 168 ]$/;"	v
s:magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:magenta = [ '#e02c6d', 5 ]$/;"	v
s:magenta	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:magenta = [ '#f2c68a', 216 ]$/;"	v
s:main	nvim/plugged/syntastic-local-eslint.vim/ftplugin/javascript.vim	/^fun! s:main ()$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:make(keys, values, ...) abort$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make(...)$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:make(name, ...)$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:make()$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:make()$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:make()$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:make()$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:make(prefix)$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:make()$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:make(...)$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:make(...)$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:make()$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:make(...)$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:make()$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make(chars)$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:make()$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:make()$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:make()$/;"	f
s:make	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:make(...)$/;"	f
s:make_emacs	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_emacs()$/;"	f
s:make_index	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:make_index(list, ...) abort$/;"	f
s:make_plain	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make_plain()$/;"	f
s:make_special_chars	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make_special_chars()$/;"	f
s:make_vim_cmdline_mapping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_vim_cmdline_mapping()$/;"	f
s:manual_update_tags	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
s:map	nvim/plugged/lightline.vim/autoload/lightline.vim	/^  function! s:map(xs, f) abort$/;"	f
s:map	nvim/plugged/lightline.vim/autoload/lightline.vim	/^  let s:map = function('map')$/;"	v
s:map_accum	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
s:maps_nop	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:maps_nop()$/;"	f
s:maps_resize	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:maps_resize()$/;"	f
s:mark_sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
s:match_highlight	nvim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:match_highlight(highlight, pattern) abort$/;"	f
s:match_key	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:match_key(keymapping, key)$/;"	f
s:match_words	nvim/plugged/vim-pug/ftplugin/pug.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	nvim/plugged/vim-pug/ftplugin/pug.vim	/^let s:match_words = ""$/;"	v
s:max_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:max_by(dict, expr) abort$/;"	f
s:max_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
s:maximal_number_of_compared_movments	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:maximal_number_of_compared_movments = 10000$/;"	v
s:maybe_enable_autoformat	nvim/plugged/vim-pencil/autoload/pencil.vim	/^fun! s:maybe_enable_autoformat() abort$/;"	f
s:me	nvim/autoload/plug.vim	/^let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:menu_char_prefix	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:menu_grey	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:menu_grey = s:colors.menu_grey$/;"	v
s:merge_opts	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
s:message	nvim/plugged/lightline.vim/test/error.vim	/^function! s:message() abort$/;"	f
s:messages	nvim/plugged/vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:metalinter_autosave	nvim/plugged/vim-go/plugin/go.vim	/^function! s:metalinter_autosave()$/;"	f
s:min_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:min_by(dict, expr) abort$/;"	f
s:min_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
s:mode	nvim/plugged/lightline.vim/autoload/lightline.vim	/^let s:mode = ''$/;"	v
s:modemap	nvim/plugged/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:modep	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:modep = "[nvoicsxl]"$/;"	v
s:modfmt_autosave	nvim/plugged/vim-go/plugin/go.vim	/^function! s:modfmt_autosave()$/;"	f
s:module	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:module = {$/;"	v
s:module	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:module = {$/;"	v
s:module.complete	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.complete(cmdline)$/;"	f
s:module.get_complete_words	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.get_complete_words()$/;"	f
s:module.histories	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.histories()$/;"	f
s:module.is_no_insert	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.is_no_insert(char)$/;"	f
s:module.message	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.message(...)$/;"	f
s:module.on_char	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char(cmdline)$/;"	f
s:module.on_char_pre	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_char_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
s:module.on_draw	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw(cmdline)$/;"	f
s:module.on_draw_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_draw_pre(...)$/;"	f
s:module.on_draw_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
s:module.on_draw_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
s:module.on_enter	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_enter	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_enter(...)$/;"	f
s:module.on_exception	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:module.on_exception(cmdline)$/;"	f
s:module.on_exception	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_exception(cmdline)$/;"	f
s:module.on_execute	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute(...)$/;"	f
s:module.on_execute_failed	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_failed(...)$/;"	f
s:module.on_execute_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_execute_pre(...)$/;"	f
s:module.on_execute_pre	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_pre(cmdline)$/;"	f
s:module.on_leave	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_leave(...)$/;"	f
s:module.on_leave	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.on_leave	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_leave(cmdline)$/;"	f
s:module.redraw	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.redraw(cmdline)$/;"	f
s:module.reset	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.reset()$/;"	f
s:modules	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:modules = s:V.import("Over.Commandline.Modules")$/;"	v
s:motion_map_helper	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^function! s:motion_map_helper(motions) "{{{$/;"	f
s:move	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move(pattern, ...) abort$/;"	f
s:move_f	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_f(...) abort$/;"	f
s:move_f2	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_f2() abort$/;"	f
s:move_to_win	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_to_win(winnr) abort$/;"	f
s:move_to_winpos	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_to_winpos(winpos) abort$/;"	f
s:mx	nvim/plugged/emmet-vim/autoload/emmet/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}'$/;"	v
s:names	nvim/autoload/plug.vim	/^function! s:names(...)$/;"	f
s:navy	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:navy = '#df875f'$/;"	v
s:navy	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:navy = '#005f87'$/;"	v
s:nbs	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:nbs = nr2char(0x2007)$/;"	v
s:neooptions	nvim/plugged/vim-go/autoload/go/job.vim	/^function! s:neooptions(options)$/;"	f
s:new	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new_log_session	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:new_overwin	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:new_overwin(...) abort$/;"	f
s:new_window	nvim/autoload/plug.vim	/^function! s:new_window()$/;"	f
s:next_sign_id	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:next_sign_id	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:next_sign_id() abort$/;"	f
s:next_sign_id	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:node_file	nvim/plugged/syntastic/syntax_checkers/less/lessc.vim	/^let s:node_file = 'node ' . syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Sl/;"	v
s:nomodeline	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:nord0	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord0 = ["#2E3440", "NONE"]$/;"	v
s:nord1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord1 = ["#3B4252", 0]$/;"	v
s:nord10	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord10 = ["#5E81AC", 12]$/;"	v
s:nord11	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord11 = ["#BF616A", 1]$/;"	v
s:nord12	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord12 = ["#D08770", 11]$/;"	v
s:nord13	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord13 = ["#EBCB8B", 3]$/;"	v
s:nord14	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord14 = ["#A3BE8C", 2]$/;"	v
s:nord15	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord15 = ["#B48EAD", 5]$/;"	v
s:nord2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord2 = ["#434C5E", "NONE"]$/;"	v
s:nord3	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord3 = ["#4C566A", 8]$/;"	v
s:nord4	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord4 = ["#D8DEE9", "NONE"]$/;"	v
s:nord5	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord5 = ["#E5E9F0", 7]$/;"	v
s:nord6	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord6 = ["#ECEFF4", 15]$/;"	v
s:nord7	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord7 = ["#8FBCBB", 14]$/;"	v
s:nord8	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord8 = ["#88C0D0", 6]$/;"	v
s:nord9	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord9 = ["#81A1C1", 4]$/;"	v
s:normalize	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:normalize(result) abort$/;"	f
s:normalize_durations	nvim/plugged/vim-go/autoload/go/test_test.vim	/^func! s:normalize_durations(str) abort$/;"	f
s:not_git_dir	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:not_git_dir(bufnr) abort$/;"	f
s:not_tracked_by_git	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^  function! s:not_tracked_by_git(bufnr)$/;"	f
s:notifiers	nvim/plugged/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:nr	nvim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:nr(x) abort$/;"	f
s:null_device	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let s:null_device = vimproc#util#is_windows() ? 'NUL' : '\/dev\/null'$/;"	v
s:nvim	nvim/autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_cb	nvim/autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:nvim_job_exit_wrapper	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
s:nvim_job_out_wrapper	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
s:obsolete_gitgutter_signs_to_remove	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:obsolete_gitgutter_signs_to_remove(bufnr, new_gitgutter_signs_line_numbers) abort$/;"	f
s:off_screen_search	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:off_screen_search(re) "{{{$/;"	f
s:old_cpo	nvim/plugged/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_width	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:old_width = 0$/;"	v
s:olive	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:olive = '#dfaf5f'$/;"	v
s:olive	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:olive = '#718c00'$/;"	v
s:omit	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:omit(dict, keys) abort$/;"	f
s:on_bufenter	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:on_bufenter()$/;"	f
s:on_complete_done	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_complete_done() abort$/;"	f
s:on_data	nvim/plugged/vim-go/autoload/go/debug.vim	/^      function! s:on_data(ch, data, event) dict abort closure$/;"	f
s:on_exit	nvim/plugged/vim-go/autoload/go/job.vim	/^        function! s:on_exit(jobid, exitval, event) dict$/;"	f
s:on_exit	nvim/plugged/vim-go/autoload/go/term.vim	/^function! s:on_exit(job_id, exit_status, event) dict abort$/;"	f
s:on_exit_nvim	nvim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_nvim(_job_id, exit_code, _event) dict abort$/;"	f
s:on_exit_vim	nvim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_vim(channel) dict abort$/;"	f
s:on_insert_leave	nvim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_insert_leave() abort$/;"	f
s:on_stderr	nvim/plugged/vim-go/autoload/go/job.vim	/^        function! s:on_stderr(ch, data, event) dict$/;"	f
s:on_stderr_nvim	nvim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_nvim(_job_id, _data, _event) dict abort$/;"	f
s:on_stderr_vim	nvim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_vim(channel, _data) dict abort$/;"	f
s:on_stdout	nvim/plugged/vim-go/autoload/go/job.vim	/^        function! s:on_stdout(ch, data, event) dict$/;"	f
s:on_stdout	nvim/plugged/vim-go/autoload/go/term.vim	/^function! s:on_stdout(job_id, data, event) dict abort$/;"	f
s:on_stdout_nvim	nvim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_nvim(_job_id, data, _event) dict abort$/;"	f
s:on_stdout_vim	nvim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_vim(_channel, data) dict abort$/;"	f
s:one_time_notices_issued	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^let s:one_time_notices_issued = []$/;"	v
s:open	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:open(cmd, target)$/;"	f
s:open	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:open(buffer, opener) abort$/;"	f
s:openExplorer	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
s:openHSplit	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
s:openInNewTab	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
s:openInNewTabSilent	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
s:openNodeRecursively	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
s:openVSplit	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
s:opfirst	nvim/plugged/typescript-vim/indent/typescript.vim	/^let s:opfirst = '^' . get(g:,'typescript_opfirst',$/;"	v
s:opfirst	nvim/plugged/vim-javascript/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:opt_x	nvim/plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^let s:opt_x = { 'c': 'c', 'cpp': 'c++' }$/;"	v
s:option	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:option = {}$/;"	v
s:option	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:option(name)$/;"	f
s:option.restore	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:option.restore() abort$/;"	f
s:or	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:or(xs) abort$/;"	f
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:orange = [ '#ff0000', 9 ]$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:orange = [ '#ef7c2a' , 202 ]$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:orange = '#f5871f'$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:orange = '#de935f'$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:orange = '#ffc58f'$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:orange = '#e78c45'$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:orange = '#f99157'$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:orange = [ '#fad07a', 222 ]$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:orange = [ '#ef5939', 166 ]$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:orange = [ '#d7875f', 216 ]$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:orange = [ '#d75f00', 166 ]$/;"	v
s:orange	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:orange = [ '#e5786d', 173 ]$/;"	v
s:others	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:others(p)$/;"	f
s:out_cb	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:out_cb(ch, msg) abort$/;"	f
s:output	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:output(text)$/;"	f
s:overrides	nvim/plugged/palenight.vim/autoload/palenight.vim	/^let s:overrides = get(g:, "palenight_color_overrides", {})$/;"	v
s:overwin	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:overwin = {$/;"	v
s:overwin.choose_prompt	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.choose_prompt(hint_dict) abort$/;"	f
s:overwin.gather_poses_overwin	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.gather_poses_overwin(pattern) abort$/;"	f
s:overwin.pattern	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.pattern(pattern) abort$/;"	f
s:overwin.restore_options	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.restore_options() abort$/;"	f
s:overwin.select_winpos	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.select_winpos(winnr2poses, keys) abort$/;"	f
s:overwin.set_options	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.set_options() abort$/;"	f
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.right = [ [ s:base02, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.left = [ [ s:base3, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.error = [ [ s:base2, s:red ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.left = [ [ s:base3, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.warning = [ [ s:base02, s:yellow ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.left = [ [ s:base3, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.left = [ [ s:base3, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.left = [ [ s:lightGray, s:darkGray ], [ s:white, s:darkGray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.right = [ [ s:darkGray, s:gray ], [ s:darkGray, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.error = [ [ s:red, s:darkGray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.right = copy(s:p.normal.left)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.warning = [ [ s:orange, s:darkGray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.left = [ [ s:lightGray, s:darkGray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.middle = [ [ s:yellow, s:veryDarkGray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.tabsel = [ [ s:darkGray, s:yellow ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.left = [ [ s:white, s:orange ], [ s:white, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.insert.left = [ [ s:background, s:blue], [ s:statusline_active_fg, s:status ], [ s:statu/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ /;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.visual.left = [ [ s:visual_fg, s:visual_bg ], [s:statusline_active_fg, s:status ], [ s:s/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.insert.left = [ [ s:blue, s:background ], [ s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ /;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.warning = [ [ s:background, s:olive ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.visual.left = [ [ s:background, s:orange ], [s:statusline_active_fg, s:status ], [ s:sta/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base0 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base00 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base0 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.left =  [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.right = [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:gray ] ] $/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.right = [ [ s:black, s:green ], [ s:green, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.left = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.right = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.right = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.left = [ [ s:blue, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.middle = [ [ s:blue, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.right = [ [ s:black, s:blue ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:blue ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.right = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue], [ '#abb2bf', '#3e/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.left = [ [ '#292c33', '#61afef', s:term_black, s:term_blue, 'bold' ], [ '#61afef'/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.middle = s:p.normal.middle$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue ], [ '#ABB2BF', '#3E4/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.error = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.left = [ [ '#292c33', '#98c379', s:term_black, s:term_green, 'bold' ], [ '#98c379/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.middle = [ [ '#abb2bf', '#292c33', s:term_white, s:term_black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.right = [ [ '#292c33', '#98c379', s:term_black, s:term_green ], [ '#abb2bf', '#3e/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.warning = [ [ '#292c33', '#e5c07b', s:term_black, s:term_yellow ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.left = [ [ '#292c33', '#e06c75', s:term_black, s:term_red, 'bold' ], [ '#e06c75'/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.right = [ [ '#292c33', '#e06c75', s:term_black, s:term_red, 'bold' ], s:p.normal/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.left = [ s:p.normal.left[1] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.middle = s:p.normal.middle$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.right = [ s:p.normal.left[1] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.tabsel = [ s:p.normal.left[0] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.left = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple, 'bold' ], [ '#c678d/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.right = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple, 'bold' ], s:p.norm/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.replace.left = [ [ s:base02, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.middle = [ [ '#303030', '#121212', 236, 233 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.right = [ [ '#121212', '#606060', 233, 241 ], [ '#121212', '#3a3a3a', 233, 237 /;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.insert.left =  [ ['#005f00', '#ffffff', 22, 231, 'bold' ], [ '#ffffff', '#005f00', 231, /;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.error = [ [ '#d0d0d0', '#ff0000', 252, 196 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.left = [ ['#0000ff', '#ffffff', 21, 231, 'bold' ], [ '#ffffff', '#0000ff', 231, 2/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.middle = [ [ '#8a8a8a', '#303030', 245, 236 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.right = [ [ '#303030', '#d0d0d0', 236, 252 ], [ '#303030', '#8a8a8a', 236, 245 ],/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.warning = [ [ '#262626', '#ffff00', 235, 226 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.replace.left = [ [ '#af0000', '#ffffff', 124, 231, 'bold' ], [ '#ffffff', '#af0000', 231/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.left = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.middle = [ [ '#8a8a8a', '#3a3a3a', 245, 237 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.right = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.tabsel = [ [ '#dadada', '#121212', 253, 233 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.visual.left = [ [ '#5f00ff', '#ffffff', 57, 231, 'bold' ], [ '#ffffff', '#5f00ff', 231, /;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.left   = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.insert.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.right  = [ [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.left =  [ [ s:pink, s:black ], [ s:white, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.right = [ [ s:white, s:pink ], [ s:pink, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.error = [ [ s:pink, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.left = [ [ s:black, s:cyan ], [ s:orange, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.middle = [ [ s:orange, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.right = [ [ s:pink, s:black ], [ s:black, s:pink ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.left = [ [ s:pink, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.middle = [ [ s:pink, s:black] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:pink ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:black ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.left =  [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.middle = [ [ s:nord5, s:nord1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.insert.left = [ [ s:nord1, s:nord6 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.error = [ [ s:nord1, s:nord11 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.left = [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.warning = [ [ s:nord1, s:nord13 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.replace.left = [ [ s:nord1, s:nord13 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.left = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.right = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.tabsel = [ [ s:nord1, s:nord8 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.visual.left = [ [ s:nord1, s:nord7 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.left   = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['white', 'darkblue'] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.right = [ [ 'darkestcyan', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediu/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.middle = [ [ 'gray7', 'gray2' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.right = [ ['gray5', 'gray10'], ['gray9', 'gray4'], ['gray8', 'gray2'] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray4' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray8' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray3' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.visual.left = [ ['darkred', 'brightorange', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.replace.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.visual.left = [ [ s:base02, s:peach ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.middle = [ [ s:base01, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.right = [ [ s:base03, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.insert.left = [ [ s:base03, s:green ], [ s:base03, s:base00 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.left = [ [ s:base03, s:blue ], [ s:base03, s:base00 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.right = [ [ s:base03, s:base1 ], [ s:base03, s:base00 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.warning = [ [ s:base03, s:yellow ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.replace.left = [ [ s:base03, s:red ], [ s:base03, s:base00 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.left = [ [ s:base03, s:base00 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.tabsel = [ [ s:base03, s:base1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.visual.left = [ [ s:base03, s:magenta ], [ s:base03, s:base00 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.insert.left = [ [ s:base02, s:bright_green, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.left = [ [ s:base02, s:bright_blue, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.replace.left = [ [ s:base3, s:red, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00, 'bold'] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.visual.left = [ [ s:base3, s:bright_magenta, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base02 ], [ s:base00, s:base023 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.right = [ [ s:base023, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base03 ] ]$/;"	v
s:p	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.inactive.left   = [ [ s:p_black, s:p_menu_grey ], [ s:p_black, s:p_menu_grey ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.inactive.middle = [ [ s:p_black, s:p_menu_grey ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.inactive.right  = copy(s:p.inactive.left)$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.insert.left     = [ [ s:p_black, s:p_blue ], [ s:p_blue, s:p_menu_grey ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.insert.middle   = copy(s:p.normal.middle)$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.insert.right    = copy(s:p.insert.left)$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.normal.error    = [ [ s:p_black, s:p_red ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.normal.left     = [ [ s:p_black, s:p_purple ], [ s:p_purple, s:p_menu_grey ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.normal.middle   = [ [ s:p_comment_grey, s:p_black ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.normal.right    = copy(s:p.normal.left)$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.normal.warning  = [ [ s:p_black, s:p_yellow ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.replace.left    = [ [ s:p_black, s:p_green ], [ s:p_green, s:p_menu_grey ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.replace.middle  = copy(s:p.normal.middle)$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.replace.right   = copy(s:p.replace.left)$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.tabline.left    = [ [ s:p_black, s:p_yellow ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.tabline.middle  = [ [ s:p_black, s:p_menu_grey ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.tabline.right   = copy(s:p.tabline.left)$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.tabline.tabsel  = [ [ s:p_black, s:p_yellow ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.visual.left     = [ [ s:p_black, s:p_cyan ], [ s:p_cyan, s:p_menu_grey ] ]$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.visual.middle   = copy(s:p.normal.middle)$/;"	v
s:p	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.visual.right    = copy(s:p.visual.left)$/;"	v
s:p_black	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_black = ["#292D3E", 235, 0]$/;"	v
s:p_blue	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_blue = ["#82b1ff", 39, 4]$/;"	v
s:p_comment_grey	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_comment_grey = ["#697098", 59, 15]$/;"	v
s:p_cursor_grey	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_cursor_grey = ["#2C323C", 236, 8]$/;"	v
s:p_cyan	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_cyan = ["#89DDFF", 38, 6]$/;"	v
s:p_dark_red	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_dark_red = ["#BE5046", 196, 9]$/;"	v
s:p_dark_yellow	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_dark_yellow = ["#F78C6C", 173, 11]$/;"	v
s:p_green	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_green = ["#C3E88D", 114, 2]$/;"	v
s:p_gutter_fg_grey	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_gutter_fg_grey = ["#4B5263", 238, 15]$/;"	v
s:p_light_red	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_light_red = ["#ff869a", 204, 1]$/;"	v
s:p_menu_grey	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_menu_grey = ["#3E4452", 237, 8]$/;"	v
s:p_purple	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_purple = ["#c792ea", 170, 5]$/;"	v
s:p_red	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_red = ["#ff5370", 204, 1]$/;"	v
s:p_special_grey	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_special_grey = ["#3B4048", 238, 15]$/;"	v
s:p_vertsplit	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_vertsplit = ["#181A1F", 59, 15]$/;"	v
s:p_white	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_white = ["#bfc7d5", 145, 7]$/;"	v
s:p_yellow	nvim/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_yellow = ["#ffcb6b", 180, 3]$/;"	v
s:packages	nvim/plugged/vim-go/plugin/go.vim	/^let s:packages = {$/;"	v
s:palette	nvim/colors/thea.vim	/^let s:palette = {$/;"	v
s:palette	vim/settings/thea.vim	/^let s:palette = {$/;"	v
s:parse	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse(highlight)$/;"	f
s:parse_arg	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:parse_arg(arg)$/;"	f
s:parse_back_quote	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_back_quote(script, i) abort "{{{$/;"	f
s:parse_block	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_block(script) abort "{{{$/;"	f
s:parse_cmdarg	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:parse_cmdarg(...) abort$/;"	f
s:parse_cmdline	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_cmdline(cmdline) abort "{{{$/;"	f
s:parse_double_quote	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_double_quote(script, i) abort "{{{$/;"	f
s:parse_equal	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_equal(script) abort "{{{$/;"	f
s:parse_errors	nvim/plugged/vim-go/autoload/go/fmt.vim	/^function! s:parse_errors(filename, content) abort$/;"	f
s:parse_errors	nvim/plugged/vim-go/autoload/go/mod.vim	/^function! s:parse_errors(filename, content) abort$/;"	f
s:parse_errors	nvim/plugged/vim-go/autoload/go/rename.vim	/^function s:parse_errors(exit_val, bang, out)$/;"	f
s:parse_guru_output	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! s:parse_guru_output(exit_val, output, title) abort$/;"	f
s:parse_lhs	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs(text, ...)$/;"	f
s:parse_lhs_list	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs_list(...)$/;"	f
s:parse_options	nvim/autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:parse_redirection	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_redirection(script) abort "{{{$/;"	f
s:parse_single_quote	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_single_quote(script, i) abort "{{{$/;"	f
s:parse_tilde	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_tilde(script) abort "{{{$/;"	f
s:parse_to_name	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse_to_name(highlight)$/;"	f
s:parse_variables	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_variables(script) abort "{{{$/;"	f
s:parse_wildcard	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_wildcard(script) abort "{{{$/;"	f
s:partition	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
s:path	nvim/autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:path2directory	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
s:path2project_directory	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
s:path_extensions	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:path_extensions() abort$/;"	f
s:path_sep_pattern	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:path_sep_pattern = (exists('+shellslash') ? '[\\\\\/]' : '\/') . '\\+'$/;"	v
s:path_separator	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:path_separator() abort$/;"	f
s:path_separator	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:path_separator = s:is_windows ? ';' : ':'$/;"	v
s:pattern	nvim/plugged/lightline.vim/test/highlight.vim	/^function! s:pattern(xs, ...) abort$/;"	f
s:peach	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:peach = [ '#d7afaf', 181 ]$/;"	v
s:permutations	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
s:pgroup_open	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:pgroup_open(statements, is_pty, npipe) abort "{{{$/;"	f
s:pick	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:pick(dict, keys) abort$/;"	f
s:pink	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:pink = '#afdf00'$/;"	v
s:pink	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:pink = '#d7005f'$/;"	v
s:pink	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:pink = [ '#f92672', 161 ]$/;"	v
s:plineopen	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:plineopen(npipe, commands, is_pty) abort "{{{$/;"	f
s:pluck	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
s:plug_buf	nvim/autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	nvim/autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	nvim/autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_window_exists	nvim/autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:plugin_dir	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:plugin_name	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:pop	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:pop(list) abort$/;"	f
s:pos2hint_to_line2col2hint	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
s:pos2poskey	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:pos2poskey(pos) abort$/;"	f
s:poskey2pos	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:poskey2pos(poskey) abort$/;"	f
s:prefix	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:prefix = printf("vital-over(%s) Exception", s:vname)$/;"	v
s:prepare	nvim/autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:prepend_opts	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
s:preview	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:preview(hunk_diff)$/;"	f
s:previewNodeCurrent	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
s:previewNodeHSplit	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
s:previewNodeVSplit	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
s:preview_commit	nvim/autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:previous_token	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:previous_token()$/;"	f
s:print_error	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:print_error(string) abort$/;"	f
s:priorities	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:priorities = {$/;"	v
s:process_added	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_added(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_hunk	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_hunk(bufnr, hunk) abort$/;"	f
s:process_modified	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_modified_and_added	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_added(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_modified_and_removed	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_removed(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_options_file	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
s:process_removed	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
s:product	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:product(lists) abort$/;"	f
s:progress_bar	nvim/autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	nvim/autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:project_root	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:promptToDelBuffer	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
s:purple	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:purple = [ '#9876aa', 104 ]$/;"	v
s:purple	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:purple = '#82aaff'$/;"	v
s:purple	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:purple = '#c792ea'$/;"	v
s:purple	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:purple = [ '#c678dd', 176 ]$/;"	v
s:purple	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:purple = s:colors.purple$/;"	v
s:push	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
s:pylint_new	nvim/plugged/syntastic/syntax_checkers/python/pylint.vim	/^let s:pylint_new = -1$/;"	v
s:pyscript_path	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:pyscript_path = expand('<sfile>:p:r') . '.py'$/;"	v
s:quiet_warnings	nvim/plugged/syntastic/plugin/syntastic.vim	/^            let s:quiet_warnings = [s:quiet_warnings]$/;"	v
s:quiet_warnings	nvim/plugged/syntastic/plugin/syntastic.vim	/^        let s:quiet_warnings = get(g:syntastic_quiet_messages, 'type', [])$/;"	v
s:quote_arg	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:quote_arg(arg) abort$/;"	f
s:read	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read(...) dict "{{{$/;"	f
s:read_content	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:read_content(content, ...) abort$/;"	f
s:read_line	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_line(...) dict "{{{$/;"	f
s:read_lines	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_lines(...) dict "{{{$/;"	f
s:read_pgroup	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_pgroup(...) dict "{{{$/;"	f
s:read_pipes	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_pipes(...) dict "{{{$/;"	f
s:read_timeout	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let s:read_timeout = 100$/;"	v
s:reader	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:reader = {}$/;"	v
s:reader.read	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:reader.read() abort$/;"	f
s:reader.unread	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:reader.unread() abort$/;"	f
s:reap	nvim/autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:red = [ '#800000', 1 ]$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:red = [ '#f92672' , 161 ]$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:red = '#df0000'$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:red = '#df0000'$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:red = '#c82829'$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:red = '#cc6666'$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:red = '#ff9da4'$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:red = '#d54e53'$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:red = '#f2777a'$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:red = [ '#ff6b68', 204 ]$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:red = [ '#cf6a4c', 167 ]$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:red = [ '#ff0000', 160 ]$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:red = [ '#d68787', 131 ]$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:red = [ '#ff3128', 1 ]$/;"	v
s:red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:red = [ '#e5786d', 203 ]$/;"	v
s:red	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:red = s:colors.red$/;"	v
s:red1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red1   = '#ec5f67'$/;"	v
s:red1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red1   = '#f07178'$/;"	v
s:red1	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red1   = [ '#e06c75', 168 ]$/;"	v
s:red2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red2   = '#ec5f67'$/;"	v
s:red2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red2   = '#ff5370'$/;"	v
s:red2	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red2   = [ '#be5046', 168 ]$/;"	v
s:reduce_line	nvim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
s:reflect_kind	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:reflect_kind(k)$/;"	f
s:refreshCurrent	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
s:refreshRoot	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f
s:register	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:register = {}$/;"	v
s:register.restore	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:register.restore() abort$/;"	f
s:registry	nvim/plugged/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:regress_bar	nvim/autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:rel	nvim/plugged/vim-javascript/indent/javascript.vim	/^let s:rel = has('reltime')$/;"	v
s:reload	nvim/plugged/emmet-vim/unittest.vim	/^function! s:reload(d)$/;"	f
s:reload_changed	nvim/plugged/vim-go/autoload/go/rename.vim	/^function! s:reload_changed() abort$/;"	f
s:reload_plugins	nvim/autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:relsz	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:relsz(expr, limit)$/;"	f
s:remove_last_separator	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:remove_last_separator(path) abort$/;"	f
s:remove_layout	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
s:remove_rtp	nvim/autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_signs	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:remove_signs(bufnr, sign_ids, all_signs) abort$/;"	f
s:remove_triggers	nvim/autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:renameBuffer	nvim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
s:rename_job	nvim/plugged/vim-go/autoload/go/rename.vim	/^function s:rename_job(args)$/;"	f
s:reorg_rtp	nvim/autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:report	nvim/plugged/vim-go/scripts/runbench.vim	/^let s:report = execute('syntime report')$/;"	v
s:reset_summary	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary(bufnr) abort$/;"	f
s:reset_tick	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:reset_tick(bufnr) abort$/;"	f
s:resize_pads	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:resize_pads()$/;"	f
s:restore_cursor_state	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:restore_cursor_state(visualmode) "{{{$/;"	f
s:restore_shell	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:restore_shell() abort$/;"	f
s:retry	nvim/autoload/plug.vim	/^function! s:retry()$/;"	f
s:reuseWin	nvim/plugged/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
s:revert	nvim/autoload/plug.vim	/^function! s:revert()$/;"	f
s:rgb	nvim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:rgb(r, g, b) abort$/;"	f
s:rhs_key_list	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:rhs_key_list(...)$/;"	f
s:rm_rf	nvim/autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:root_dir	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	nvim/plugged/vim-easymotion/t/operator_pending_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dirs	nvim/plugged/vim-go/autoload/go/impl.vim	/^function! s:root_dirs() abort$/;"	f
s:rst2pseudoxml	nvim/plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:rst2pseudoxml = (executable('rst2pseudoxml.py') && !syntastic#util#isRunningWindows()) ? '/;"	v
s:rtp	nvim/autoload/plug.vim	/^  function! s:rtp(spec)$/;"	f
s:run_guru	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! s:run_guru(args) abort$/;"	f
s:runner_exe	nvim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = gutentags#get_plat_file('update_tags')$/;"	v
s:same_ids_highlight	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! s:same_ids_highlight(exit_val, output, mode) abort$/;"	f
s:sass_cache_location	nvim/plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = syntastic#util#tmpdir()$/;"	v
s:save_cpo	nvim/plugged/emmet-vim/autoload/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	nvim/plugged/emmet-vim/plugin/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	nvim/plugged/lightline.vim/autoload/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/lightline.vim/autoload/lightline/colortable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/lightline.vim/autoload/lightline/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/lightline.vim/plugin/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/applescript/osacompile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/asl/iasl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/asm/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/bro/bro.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/avrgcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/checkpatch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/clang_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/clang_tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/cppclean.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/flawfinder.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/oclint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/pc_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/sparse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/c/splint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/cabal/cabal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/chef/foodcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/cmake/cmakelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/co/coco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/cobol/cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/coffee/coffee.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/coffee/coffee_jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/coq/coqtop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/cpp/cpplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/cpp/verapp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/cs/mcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/css/csslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/css/prettycss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/css/stylelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/cuda/nvcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/d/dscanner.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/docbk/igor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/dockerfile/hadolint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/elixir/elixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/erlang/escript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/eruby/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/go/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/go/gofmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/go/golangci_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/go/golint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/go/gometalinter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/go/gotype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/go/govet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/haml/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/haml/haml_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/haskell/hlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/haskell/scan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/haxe/haxe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/hss/hss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/html/htmlhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/html/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/html/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/html/validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/html/w3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/java/checkstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/eslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/flow.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/gjslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/jscs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/jsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/jslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/lynt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/standard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/javascript/tern_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/json/jsonlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/json/jsonval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/julia/lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/less/lessc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/less/recess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/lex/flex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/limbo/limbo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/lisp/clisp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/llvm/llvm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/lua/luac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/lua/luacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/markdown/mdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/markdown/remark_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/matlab/mlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/mercury/mmc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/nasm/nasm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/nix/nix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/nroff/mandoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/perl/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/perl/perlcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/perl6/perl6.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/php/php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/php/phpcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/php/phplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/php/phpmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/php/phpstan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/po/dennis.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/po/msgfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/pod/podchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/pug/pug_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/puppet/puppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/bandit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/frosted.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/mypy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/prospector.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/py3kwarn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/pycodestyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/pydocstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/pyflakes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/pylama.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/pylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/python/python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/qml/qmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/r/lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/r/lintr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/r/svtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/racket/racket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/rnc/rnv.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/rst/rstcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/ruby/flog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/ruby/jruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/ruby/macruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/ruby/mri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/ruby/reek.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/ruby/rubocop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/ruby/rubylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/sass/sass.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/sass/sass_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/sass/sassc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/scala/fsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/scala/scalac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/scala/scalastyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/scss/scss_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/sh/bashate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/sh/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/sh/shellcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/slim/slim_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/slim/slimrb.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/sml/smlnj.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/solidity/solc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/solidity/solhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/solidity/solium.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/spec/rpmlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/sql/sqlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/sql/tsqllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/stylus/stylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/tex/chktex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/tex/lacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/text/atdtool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/text/language_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/text/proselint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/text/textlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/turtle/rapper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/turtle/ttl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/twig/twiglint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/typescript/tslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/vala/valac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/verilog/iverilog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/verilog/verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/vhdl/vcom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/vim/vint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/vue/pug_lint_vue.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/xhtml/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/xml/plutil.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/xml/xmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/xquery/basex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/yacc/bison.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/yaml/yamllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/yang/pyang.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/yara/yara.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/zpt/zptlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/syntastic/syntax_checkers/zsh/zsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/tabular/after/plugin/TabularMaps.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-easymotion/plugin/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-go/autoload/unite/sources/decls.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	nvim/plugged/vim-go/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-pencil/plugin/pencil.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vim-pug/ftplugin/pug.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vimproc.vim/autoload/vimproc/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/vimproc.vim/plugin/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	nvim/plugged/zoomwintab.vim/plugin/zoomwintab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_last_seen_change	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:save_last_seen_change(bufnr) abort$/;"	f
s:save_pos	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:save_pos(f,...)$/;"	f
s:savecpo	nvim/plugged/tabular/autoload/tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:savecpo	nvim/plugged/tabular/plugin/Tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:saved_cpo	nvim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	nvim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:scroll	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:scroll(direction) "{{{$/;"	f
s:search	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search = s:cmdline.make()$/;"	v
s:search	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search.highlights.prompt = 'Question'$/;"	v
s:search	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search.keymapping	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.keymapping() "{{{$/;"	f
s:search.on_char	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_char(cmdline) "{{{$/;"	f
s:search.on_enter	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_enter(cmdline) "{{{$/;"	f
s:search.on_leave	nvim/plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_leave(cmdline) "{{{$/;"	f
s:search_history_sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
s:section	nvim/autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:seed	nvim/plugged/emmet-vim/autoload/emmet/util.vim	/^let s:seed = localtime()$/;"	v
s:separator	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:separator()$/;"	f
s:separator	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:separator() abort$/;"	f
s:set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set(...) abort$/;"	f
s:set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:set = deepcopy(s:_base_set)$/;"	v
s:set	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:set(name, config)$/;"	f
s:set	nvim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default) abort$/;"	f
s:set.add	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.add(x) abort$/;"	f
s:set.clear	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.clear() abort$/;"	f
s:set.difference_update	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.difference_update(t) abort$/;"	f
s:set.discard	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.discard(e) abort$/;"	f
s:set.iand	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.iand(t) abort$/;"	f
s:set.intersection_update	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.intersection_update(t) abort$/;"	f
s:set.ior	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.ior(t) abort$/;"	f
s:set.isub	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.isub(t) abort$/;"	f
s:set.ixor	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.ixor(t) abort$/;"	f
s:set.pop	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.pop() abort$/;"	f
s:set.remove	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.remove(e) abort$/;"	f
s:set.symmetric_difference_update	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.symmetric_difference_update(t) abort$/;"	f
s:set.update	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.update(iterable) abort$/;"	f
s:set_color	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:set_color(group, attr, color)$/;"	f
s:set_custom	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! s:set_custom(dest, name_or_dict, value) abort$/;"	f
s:set_default	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
s:set_path	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path(bufnr, path)$/;"	f
s:set_prefix	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:set_prefix(prefix)$/;"	f
s:set_value	nvim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! s:set_value(dest, name, value) abort$/;"	f
s:setline	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:setline(lnum, text) abort$/;"	f
s:setup_done	nvim/plugged/syntastic/plugin/syntastic/highlighting.vim	/^let s:setup_done = 0$/;"	v
s:setup_done	nvim/plugged/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:setup_maps	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:setup_maps()$/;"	f
s:setup_pad	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:setup_pad(bufnr, vert, size, repel)$/;"	f
s:sfile	nvim/plugged/emmet-vim/unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
s:shade_hl_defaults	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_defaults = {$/;"	v
s:shade_hl_line_defaults	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_line_defaults = {$/;"	v
s:shellesc	nvim/autoload/plug.vim	/^function! s:shellesc(arg)$/;"	f
s:shellesc_cmd	nvim/autoload/plug.vim	/^function! s:shellesc_cmd(arg)$/;"	f
s:shift	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:shift(list) abort$/;"	f
s:shortpath	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
s:should_use_migemo	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_migemo(char) "{{{$/;"	f
s:should_use_regexp	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_regexp() "{{{$/;"	f
s:should_use_smartsign	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_smartsign(char) "{{{$/;"	f
s:showMenu	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f
s:show_category	nvim/plugged/emmet-vim/unittest.vim	/^function! s:show_category(category)$/;"	f
s:show_done	nvim/plugged/emmet-vim/unittest.vim	/^function! s:show_done()$/;"	f
s:show_errors	nvim/plugged/vim-go/autoload/go/fmt.vim	/^function! s:show_errors(errors) abort$/;"	f
s:show_errors	nvim/plugged/vim-go/autoload/go/mod.vim	/^function! s:show_errors(errors) abort$/;"	f
s:show_ng	nvim/plugged/emmet-vim/unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
s:show_ok	nvim/plugged/emmet-vim/unittest.vim	/^function! s:show_ok()$/;"	f
s:show_pass	nvim/plugged/emmet-vim/unittest.vim	/^function! s:show_pass(pass)$/;"	f
s:show_skip	nvim/plugged/emmet-vim/unittest.vim	/^function! s:show_skip(no, title)$/;"	f
s:show_stacktrace	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:show_stacktrace(res) abort$/;"	f
s:show_title	nvim/plugged/emmet-vim/unittest.vim	/^function! s:show_title(no, title)$/;"	f
s:show_type	nvim/plugged/emmet-vim/unittest.vim	/^function! s:show_type(type)$/;"	f
s:show_variables	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:show_variables() abort$/;"	f
s:sid2sfuncs	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:signs	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:signs(filename)$/;"	f
s:sink	nvim/plugged/vim-go/autoload/fzf/decls.vim	/^function! s:sink(str) abort$/;"	f
s:skip_back_quote	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_back_quote(script, i) abort "{{{$/;"	f
s:skip_double_quote	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_double_quote(script, i) abort "{{{$/;"	f
s:skip_else	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_else(args, script, i) abort "{{{$/;"	f
s:skip_expr	nvim/plugged/typescript-vim/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),0),'name') =~? '".s:syng_strcom."'"$/;"	v
s:skip_expr	nvim/plugged/vim-javascript/indent/javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:skip_func	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:skip_func()$/;"	f
s:skip_single_quote	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_single_quote(script, i) abort "{{{$/;"	f
s:smart_execute_command	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
s:snapshot	nvim/autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:sock_type	nvim/plugged/vim-go/autoload/go/config.vim	/^let s:sock_type = (has('win32') || has('win64')) ? 'tcp' : 'unix'$/;"	v
s:solarized_termcolors	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:sort	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
s:sort_buffers	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
s:sort_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
s:source	nvim/autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:source	nvim/plugged/vim-go/autoload/fzf/decls.vim	/^function! s:source(mode,...) abort$/;"	f
s:source	nvim/plugged/vim-go/autoload/unite/sources/decls.vim	/^let s:source = {$/;"	v
s:source.gather_candidates	nvim/plugged/vim-go/autoload/unite/sources/decls.vim	/^function! s:source.gather_candidates(args, context) abort$/;"	f
s:source.hooks.on_syntax	nvim/plugged/vim-go/autoload/unite/sources/decls.vim	/^function! s:source.hooks.on_syntax(args, context) abort$/;"	f
s:span	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
s:spawn	nvim/autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:special_grey	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:special_grey = s:colors.special_grey$/;"	v
s:sphinx_cache_location	nvim/plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^let s:sphinx_cache_location = syntastic#util#tmpdir()$/;"	v
s:split	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  function! s:split(str, sep) abort$/;"	f
s:split	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:split(path) abort$/;"	f
s:split_by_keys	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:split_by_keys(str)$/;"	f
s:split_rtp	nvim/autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:stack_cb	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:stack_cb(res) abort$/;"	f
s:stage	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:stage(hunk_diff)$/;"	f
s:start	nvim/plugged/vim-go/autoload/go/job.vim	/^  function! s:start(args) dict$/;"	f
s:start_args	nvim/plugged/vim-go/autoload/go/debug.vim	/^  let s:start_args = []$/;"	v
s:start_cb	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:start_cb(res) abort$/;"	f
s:started	nvim/plugged/vim-go/scripts/runtest.vim	/^  let s:started = reltime()$/;"	v
s:state	nvim/plugged/vim-go/autoload/go/debug.vim	/^  let s:state = {$/;"	v
s:status	nvim/autoload/plug.vim	/^function! s:status()$/;"	f
s:status	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:status = '#c6c6c6'$/;"	v
s:status	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:status = s:aqua$/;"	v
s:status_load	nvim/autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	nvim/autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:statuses	nvim/plugged/vim-go/autoload/go/statusline.vim	/^let s:statuses = {}$/;"	v
s:statusline_active_bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_bg = '#5f8787'$/;"	v
s:statusline_active_bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_bg = s:navy$/;"	v
s:statusline_active_fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_fg = '#1c1c1c'$/;"	v
s:statusline_active_fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_fg = s:window$/;"	v
s:statusline_inactive_bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_bg = '#444444'$/;"	v
s:statusline_inactive_bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_bg = '#dadada'$/;"	v
s:statusline_inactive_fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_fg = '#c6c6c6'$/;"	v
s:statusline_inactive_fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_fg = s:foreground$/;"	v
s:still_have_issues	nvim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:still_have_issues() abort$/;"	f
s:stop	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:stop() abort$/;"	f
s:store	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:store(targets) abort$/;"	f
s:str2hd	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:str2hd(str) abort$/;"	f
s:str2list	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:str2list(str) abort$/;"	f
s:strip	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
s:strip_trailing_new_line	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:strip_trailing_new_line(line) abort$/;"	f
s:strwidthpart	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart_reverse	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:subseparator	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:subseparator(components, subseparator, expanded) abort$/;"	f
s:subseparator	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:subseparator(...)$/;"	f
s:substitute_path_separator	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
s:suffix	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:suffix(left, suffix)$/;"	f
s:suite	nvim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^let s:suite = themis#suite('custom')$/;"	v
s:suite	nvim/plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/concatenate.vim	/^let s:suite = themis#suite('concatenate')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/error.vim	/^let s:suite = themis#suite('error')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/expand.vim	/^let s:suite = themis#suite('expand')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/highlight.vim	/^let s:suite = themis#suite('highlight')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/link.vim	/^let s:suite = themis#suite('link')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/mode.vim	/^let s:suite = themis#suite('mode')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/onetab.vim	/^let s:suite = themis#suite('onetab')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/subseparator.vim	/^let s:suite = themis#suite('subseparator')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/tabline.vim	/^let s:suite = themis#suite('tabline')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/tabs.vim	/^let s:suite = themis#suite('tabs')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/toggle.vim	/^let s:suite = themis#suite('toggle')$/;"	v
s:suite	nvim/plugged/lightline.vim/test/uniq.vim	/^let s:suite = themis#suite('uniq')$/;"	v
s:suite	nvim/plugged/vimproc.vim/test/fopen.vim	/^let s:suite = themis#suite('fopen')$/;"	v
s:suite	nvim/plugged/vimproc.vim/test/functions.vim	/^let s:suite = themis#suite('functions')$/;"	v
s:suite	nvim/plugged/vimproc.vim/test/lexer.vim	/^let s:suite = themis#suite('lexer')$/;"	v
s:suite	nvim/plugged/vimproc.vim/test/parser.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	nvim/plugged/vimproc.vim/test/popen.vim	/^let s:suite = themis#suite('popen')$/;"	v
s:suite	nvim/plugged/vimproc.vim/test/socket.vim	/^let s:suite = themis#suite('socket')$/;"	v
s:suite	nvim/plugged/vimproc.vim/test/system.vim	/^let s:suite = themis#suite('system')$/;"	v
s:suite.active_inactive	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.active_inactive()$/;"	f
s:suite.after_each	nvim/plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.after_each() abort$/;"	f
s:suite.append	nvim/plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.append() abort$/;"	f
s:suite.backquote	nvim/plugged/vimproc.vim/test/parser.vim	/^function! s:suite.backquote() abort$/;"	f
s:suite.before_each	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/plugged/lightline.vim/test/link.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/plugged/lightline.vim/test/toggle.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	nvim/plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.before_each() abort$/;"	f
s:suite.block_convertion	nvim/plugged/vimproc.vim/test/parser.vim	/^function! s:suite.block_convertion() abort$/;"	f
s:suite.cmd_system1	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.cmd_system1() abort$/;"	f
s:suite.cmd_system2	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.cmd_system2() abort$/;"	f
s:suite.cmd_system3	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.cmd_system3() abort$/;"	f
s:suite.comment	nvim/plugged/vimproc.vim/test/parser.vim	/^function! s:suite.comment() abort$/;"	f
s:suite.component_raw	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.component_raw()$/;"	f
s:suite.component_type	nvim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.component_type()$/;"	f
s:suite.component_type	nvim/plugged/lightline.vim/test/link.vim	/^function! s:suite.component_type()$/;"	f
s:suite.custom	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom()$/;"	f
s:suite.custom_error	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_error()$/;"	f
s:suite.custom_left_nil	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_left_nil()$/;"	f
s:suite.custom_mixed	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed()$/;"	f
s:suite.custom_mixed_2	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed_2()$/;"	f
s:suite.custom_number	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_number()$/;"	f
s:suite.custom_one	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_one()$/;"	f
s:suite.custom_option	nvim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^function! s:suite.custom_option() abort$/;"	f
s:suite.custom_right_nil	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_right_nil()$/;"	f
s:suite.custom_source	nvim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^function! s:suite.custom_source() abort$/;"	f
s:suite.custom_string	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_string()$/;"	f
s:suite.custom_two	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_two()$/;"	f
s:suite.custom_type	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type()$/;"	f
s:suite.custom_type_error	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_error()$/;"	f
s:suite.custom_type_flatten	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_flatten()$/;"	f
s:suite.custom_type_left_nil	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_left_nil()$/;"	f
s:suite.custom_type_mixed	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed()$/;"	f
s:suite.custom_type_mixed_2	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed_2()$/;"	f
s:suite.custom_type_notfound	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_notfound()$/;"	f
s:suite.custom_type_number	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_number()$/;"	f
s:suite.custom_type_one	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_one()$/;"	f
s:suite.custom_type_right_nil	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_right_nil()$/;"	f
s:suite.custom_type_string	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_string()$/;"	f
s:suite.custom_type_two	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_two()$/;"	f
s:suite.custom_type_void_string	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string()$/;"	f
s:suite.custom_type_void_string_array	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array()$/;"	f
s:suite.custom_type_void_string_array_2	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_2()$/;"	f
s:suite.custom_type_void_string_array_3	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_3()$/;"	f
s:suite.custom_type_void_string_array_4	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_4()$/;"	f
s:suite.custom_void_string	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string()$/;"	f
s:suite.custom_void_string_array	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array()$/;"	f
s:suite.custom_void_string_array_2	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_2()$/;"	f
s:suite.custom_void_string_array_3	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_3()$/;"	f
s:suite.custom_void_string_array_4	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_4()$/;"	f
s:suite.default	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.default()$/;"	f
s:suite.default	nvim/plugged/lightline.vim/test/toggle.vim	/^function! s:suite.default()$/;"	f
s:suite.dictionary_function	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.dictionary_function()$/;"	f
s:suite.disable_enable	nvim/plugged/lightline.vim/test/toggle.vim	/^function! s:suite.disable_enable()$/;"	f
s:suite.disabled	nvim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.disabled()$/;"	f
s:suite.duplicated_both_nil	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil()$/;"	f
s:suite.duplicated_both_nil_left_most	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_left_most()$/;"	f
s:suite.duplicated_both_nil_right_most	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_right_most()$/;"	f
s:suite.duplicated_left_nil	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_left_nil()$/;"	f
s:suite.duplicated_right_nil	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_right_nil()$/;"	f
s:suite.duplicated_string	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_string()$/;"	f
s:suite.duplicated_type_both_nil	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil()$/;"	f
s:suite.duplicated_type_both_nil_left_most	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_left_most()$/;"	f
s:suite.duplicated_type_both_nil_right_most	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_right_most()$/;"	f
s:suite.duplicated_type_left_nil	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_left_nil()$/;"	f
s:suite.duplicated_type_right_nil	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_right_nil()$/;"	f
s:suite.enabled	nvim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.enabled()$/;"	f
s:suite.error	nvim/plugged/lightline.vim/test/error.vim	/^function! s:suite.error()$/;"	f
s:suite.escape	nvim/plugged/vimproc.vim/test/parser.vim	/^function! s:suite.escape() abort$/;"	f
s:suite.expand	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.expand()$/;"	f
s:suite.filename	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.filename()$/;"	f
s:suite.filename_modified	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.filename_modified()$/;"	f
s:suite.flatten	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.flatten()$/;"	f
s:suite.functions	nvim/plugged/vimproc.vim/test/functions.vim	/^function! s:suite.functions() abort$/;"	f
s:suite.highlight	nvim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.highlight()$/;"	f
s:suite.insert	nvim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.insert()$/;"	f
s:suite.insert	nvim/plugged/lightline.vim/test/link.vim	/^function! s:suite.insert()$/;"	f
s:suite.invalid_fmode	nvim/plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.invalid_fmode() abort$/;"	f
s:suite.join	nvim/plugged/vimproc.vim/test/parser.vim	/^function! s:suite.join() abort$/;"	f
s:suite.keep_original	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.keep_original()$/;"	f
s:suite.left_right	nvim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.left_right()$/;"	f
s:suite.left_right	nvim/plugged/lightline.vim/test/link.vim	/^function! s:suite.left_right()$/;"	f
s:suite.link	nvim/plugged/lightline.vim/test/link.vim	/^function! s:suite.link()$/;"	f
s:suite.many1	nvim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many1()$/;"	f
s:suite.many2	nvim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many2()$/;"	f
s:suite.many3	nvim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many3()$/;"	f
s:suite.mode	nvim/plugged/lightline.vim/test/mode.vim	/^function! s:suite.mode()$/;"	f
s:suite.mode_map	nvim/plugged/lightline.vim/test/mode.vim	/^function! s:suite.mode_map()$/;"	f
s:suite.modified	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.modified()$/;"	f
s:suite.multiple	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.multiple()$/;"	f
s:suite.multiple_type	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.multiple_type()$/;"	f
s:suite.nil	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.nil()$/;"	f
s:suite.nil	nvim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.nil()$/;"	f
s:suite.no_components	nvim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.no_components()$/;"	f
s:suite.notfound	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.notfound()$/;"	f
s:suite.one	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.one()$/;"	f
s:suite.one	nvim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.one()$/;"	f
s:suite.one_empty	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.one_empty()$/;"	f
s:suite.onetab	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.onetab()$/;"	f
s:suite.parse_redirection	nvim/plugged/vimproc.vim/test/parser.vim	/^function! s:suite.parse_redirection() abort$/;"	f
s:suite.parse_statements	nvim/plugged/vimproc.vim/test/parser.vim	/^function! s:suite.parse_statements() abort$/;"	f
s:suite.password_pattern	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.password_pattern() abort$/;"	f
s:suite.popen2	nvim/plugged/vimproc.vim/test/popen.vim	/^function! s:suite.popen2() abort$/;"	f
s:suite.popen3	nvim/plugged/vimproc.vim/test/popen.vim	/^function! s:suite.popen3() abort$/;"	f
s:suite.quote	nvim/plugged/vimproc.vim/test/parser.vim	/^function! s:suite.quote() abort$/;"	f
s:suite.raw_type	nvim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.raw_type()$/;"	f
s:suite.read	nvim/plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read() abort$/;"	f
s:suite.read_line	nvim/plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read_line() abort$/;"	f
s:suite.read_lines	nvim/plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read_lines() abort$/;"	f
s:suite.read_write	nvim/plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read_write() abort$/;"	f
s:suite.redirection1	nvim/plugged/vimproc.vim/test/popen.vim	/^function! s:suite.redirection1() abort$/;"	f
s:suite.redirection2	nvim/plugged/vimproc.vim/test/popen.vim	/^function! s:suite.redirection2() abort$/;"	f
s:suite.replace	nvim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.replace()$/;"	f
s:suite.replace	nvim/plugged/lightline.vim/test/link.vim	/^function! s:suite.replace()$/;"	f
s:suite.slash_convertion	nvim/plugged/vimproc.vim/test/parser.vim	/^function! s:suite.slash_convertion() abort$/;"	f
s:suite.socket	nvim/plugged/vimproc.vim/test/socket.vim	/^function! s:suite.socket() abort$/;"	f
s:suite.subseparator	nvim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.subseparator()$/;"	f
s:suite.subseparator	nvim/plugged/lightline.vim/test/link.vim	/^function! s:suite.subseparator()$/;"	f
s:suite.subseparator_component	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component()$/;"	f
s:suite.subseparator_component_expand	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand()$/;"	f
s:suite.subseparator_component_expand_1	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_1()$/;"	f
s:suite.subseparator_component_expand_2	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_2()$/;"	f
s:suite.subseparator_component_expand_3	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_3()$/;"	f
s:suite.subseparator_component_function	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function()$/;"	f
s:suite.subseparator_component_function_1	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_1()$/;"	f
s:suite.subseparator_component_function_2	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_2()$/;"	f
s:suite.subseparator_component_function_3	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_3()$/;"	f
s:suite.subseparator_component_function_4	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_4()$/;"	f
s:suite.subseparator_component_function_5	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_5()$/;"	f
s:suite.subseparator_component_function_6	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_6()$/;"	f
s:suite.subseparator_component_function_7	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_7()$/;"	f
s:suite.subseparator_component_function_visible_condition_1	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_1()$/;"	f
s:suite.subseparator_component_function_visible_condition_2	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_2()$/;"	f
s:suite.subseparator_component_function_visible_condition_3	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_3()$/;"	f
s:suite.subseparator_component_function_visible_condition_4	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_4()$/;"	f
s:suite.subseparator_component_function_visible_condition_5	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_5()$/;"	f
s:suite.subseparator_component_function_visible_condition_6	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_6()$/;"	f
s:suite.subseparator_component_function_visible_condition_7	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_7()$/;"	f
s:suite.subseparator_component_not_found	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found()$/;"	f
s:suite.subseparator_component_not_found_1	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_1()$/;"	f
s:suite.subseparator_component_not_found_2	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_2()$/;"	f
s:suite.subseparator_component_visible_condition_1	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_1()$/;"	f
s:suite.subseparator_component_visible_condition_2	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_2()$/;"	f
s:suite.subseparator_component_visible_condition_3	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_3()$/;"	f
s:suite.subseparator_component_visible_condition_4	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_4()$/;"	f
s:suite.subseparator_component_visible_condition_5	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_5()$/;"	f
s:suite.subseparator_component_visible_condition_6	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_6()$/;"	f
s:suite.subseparator_component_visible_condition_7	nvim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_7()$/;"	f
s:suite.system1	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.system1() abort$/;"	f
s:suite.system2	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.system2() abort$/;"	f
s:suite.system_and1	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_and1() abort$/;"	f
s:suite.system_and2	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_and2() abort$/;"	f
s:suite.system_bg1	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_bg1() abort$/;"	f
s:suite.system_bg2	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_bg2() abort$/;"	f
s:suite.system_passwd1	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_passwd1() abort$/;"	f
s:suite.system_passwd2	nvim/plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_passwd2() abort$/;"	f
s:suite.tab_component	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component()$/;"	f
s:suite.tab_component_empty_left	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_left()$/;"	f
s:suite.tab_component_empty_middle	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_middle()$/;"	f
s:suite.tab_component_function	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_function()$/;"	f
s:suite.tabclose	nvim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose()$/;"	f
s:suite.tabclose_last	nvim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose_last()$/;"	f
s:suite.tabline	nvim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabline()$/;"	f
s:suite.tabnew	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew	nvim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew_20	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20()$/;"	f
s:suite.tabnew_20_tabfirst	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst()$/;"	f
s:suite.tabnew_20_tabfirst_tabnext	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst_tabnext()$/;"	f
s:suite.tabnew_20_tabnext_10	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabnext_10()$/;"	f
s:suite.tabnew_20_tabprevious	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious()$/;"	f
s:suite.tabnew_20_tabprevious_tabprevious	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious_tabprevious()$/;"	f
s:suite.tabnew_first	nvim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew_first()$/;"	f
s:suite.tabnew_tabfirst	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabfirst()$/;"	f
s:suite.tabnew_tabnew	nvim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
s:suite.tabnew_tabnew	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
s:suite.tabnew_tabnew_tabfirst	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabfirst()$/;"	f
s:suite.tabnew_tabnew_tabprevious	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabprevious()$/;"	f
s:suite.tabnext	nvim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnext()$/;"	f
s:suite.tabonly	nvim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabonly()$/;"	f
s:suite.tabs	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabs()$/;"	f
s:suite.three	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three()$/;"	f
s:suite.three	nvim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.three()$/;"	f
s:suite.three_duplicated	nvim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.three_duplicated()$/;"	f
s:suite.three_empty_all	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_all()$/;"	f
s:suite.three_empty_left	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left()$/;"	f
s:suite.three_empty_left_middle	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_middle()$/;"	f
s:suite.three_empty_left_right	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_right()$/;"	f
s:suite.three_empty_middle	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle()$/;"	f
s:suite.three_empty_middle_right	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle_right()$/;"	f
s:suite.three_empty_right	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_right()$/;"	f
s:suite.toggle	nvim/plugged/lightline.vim/test/toggle.vim	/^function! s:suite.toggle()$/;"	f
s:suite.token	nvim/plugged/vimproc.vim/test/lexer.vim	/^function! s:suite.token() abort$/;"	f
s:suite.two	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two()$/;"	f
s:suite.two	nvim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.two()$/;"	f
s:suite.two_duplicated	nvim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.two_duplicated()$/;"	f
s:suite.two_empty_both	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_both()$/;"	f
s:suite.two_empty_left	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_left()$/;"	f
s:suite.two_empty_right	nvim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_right()$/;"	f
s:suite.value	nvim/plugged/vimproc.vim/test/lexer.vim	/^function! s:suite.value() abort$/;"	f
s:suite.vimoption2python	nvim/plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^function! s:suite.vimoption2python() abort$/;"	f
s:suite.visual	nvim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.visual()$/;"	f
s:suite.visual	nvim/plugged/lightline.vim/test/link.vim	/^function! s:suite.visual()$/;"	f
s:suite.with_oflag	nvim/plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.with_oflag() abort$/;"	f
s:suite.write	nvim/plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.write() abort$/;"	f
s:supports_star	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:sw	nvim/plugged/typescript-vim/indent/typescript.vim	/^  function s:sw()$/;"	f
s:sw	nvim/plugged/vim-javascript/indent/javascript.vim	/^  function s:sw()$/;"	f
s:swap	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:swap(dict) abort$/;"	f
s:switch_in	nvim/autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	nvim/autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:syn_at	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:syn_at(l,c)$/;"	f
s:sync_gocode	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! s:sync_gocode(cmd, args, input) abort$/;"	f
s:sync_guru	nvim/plugged/vim-go/autoload/go/guru.vim	/^function! s:sync_guru(args) abort$/;"	f
s:sync_info	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! s:sync_info(echo)$/;"	f
s:syng_com	nvim/plugged/typescript-vim/indent/typescript.vim	/^let s:syng_com = 'comment\\|doc'$/;"	v
s:syng_str	nvim/plugged/typescript-vim/indent/typescript.vim	/^let s:syng_str = 'string\\|template\\|special'$/;"	v
s:syng_strcom	nvim/plugged/typescript-vim/indent/typescript.vim	/^let s:syng_strcom = 'string\\|comment\\|regex\\|special\\|doc\\|template\\%(braces\\)\\@!'$/;"	v
s:syntax	nvim/autoload/plug.vim	/^function! s:syntax()$/;"	f
s:system	nvim/autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system	nvim/plugged/vim-go/autoload/go/util.vim	/^function! s:system(cmd, ...) abort$/;"	f
s:system	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:system(cmdline, is_passwd, input, timeout, is_pty) abort "{{{$/;"	f
s:system_chomp	nvim/autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:t_string	nvim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^let s:t_string = type('')$/;"	v
s:tab	nvim/plugged/lightline.vim/test/tabs.vim	/^function! s:tab(number, ...) abort$/;"	f
s:tab2spacelen	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:tab2spacelen(line, col_num) abort$/;"	f
s:tabcnt	nvim/plugged/lightline.vim/autoload/lightline.vim	/^let s:tabcnt = -1$/;"	v
s:table	nvim/plugged/lightline.vim/autoload/lightline/colortable.vim	/^let s:table = s:load()$/;"	v
s:tabline	nvim/plugged/lightline.vim/autoload/lightline.vim	/^let s:tabline = ''$/;"	v
s:tabline_active_bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_bg = '#00afaf'$/;"	v
s:tabline_active_bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_bg = s:window$/;"	v
s:tabline_active_fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_fg = '#1c1c1c'$/;"	v
s:tabline_active_fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_fg = s:foreground$/;"	v
s:tabline_bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_bg = '#3a3a3a'$/;"	v
s:tabline_bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_bg = s:navy$/;"	v
s:tabline_inactive_bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_bg = '#585858'$/;"	v
s:tabline_inactive_bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_bg = s:aqua$/;"	v
s:tabline_inactive_fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_fg = '#c6c6c6'$/;"	v
s:tabline_inactive_fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_fg = s:background$/;"	v
s:tabnr	nvim/plugged/lightline.vim/autoload/lightline.vim	/^let s:tabnr = -1$/;"	v
s:tag	nvim/plugged/vim-pug/indent/pug.vim	/^let s:tag = '\\([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tags_sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
s:take_while	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
s:target_hl2_first_defaults	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_first_defaults = {$/;"	v
s:target_hl2_second_defaults	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_second_defaults = {$/;"	v
s:target_hl_defaults	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_defaults = {$/;"	v
s:target_hl_inc	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc = {$/;"	v
s:target_hl_inc_cursor	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc_cursor = {$/;"	v
s:target_hl_move	nvim/plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_move = {$/;"	v
s:temp_buffer	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_buffer = tempname()$/;"	v
s:temp_from	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_from = tempname()$/;"	v
s:template_autocreate	nvim/plugged/vim-go/plugin/go.vim	/^function! s:template_autocreate()$/;"	f
s:templatepath	nvim/plugged/vim-go/autoload/go/issue.vim	/^let s:templatepath = go#util#Join(expand('<sfile>:p:h:h:h'), '.github', 'ISSUE_TEMPLATE.md')$/;"	v
s:term	nvim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:term(p) abort$/;"	f
s:term_black	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_black = 235$/;"	v
s:term_blue	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_blue = 39$/;"	v
s:term_green	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_green = 114$/;"	v
s:term_grey	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_grey = 236$/;"	v
s:term_purple	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_purple = 170$/;"	v
s:term_red	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_red = 204$/;"	v
s:term_white	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_white = 145$/;"	v
s:term_yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_yellow = 180$/;"	v
s:tern_col	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:tern_col(p)$/;"	f
s:tern_skip	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:tern_skip(p)$/;"	f
s:test	nvim/plugged/emmet-vim/unittest.vim	/^function! s:test(...)$/;"	f
s:test	nvim/plugged/vim-go/autoload/go/test_test.vim	/^func! s:test(file, expected, ...) abort$/;"	f
s:test_job	nvim/plugged/vim-go/autoload/go/test.vim	/^function! s:test_job(cmd, args) abort$/;"	f
s:test_repo	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:testfile	nvim/plugged/vim-go/scripts/runtest.vim	/^let s:testfile = expand('%:t')$/;"	v
s:tests	nvim/plugged/vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	nvim/plugged/vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:tests	nvim/plugged/vim-go/scripts/runtest.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k\\+()\\)', '\\1', 'g'))$/;"	v
s:throw	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:throw(message) abort$/;"	f
s:throw	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw(exp, where)$/;"	f
s:throw_cmd	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw_cmd(exp, where)$/;"	f
s:tick	nvim/autoload/plug.vim	/^function! s:tick()$/;"	f
s:timer_id	nvim/plugged/vim-go/autoload/go/statusline.vim	/^let s:timer_id = 0$/;"	v
s:tlist_app_name	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	nvim/plugged/taglist.vim/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:to_a	nvim/autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_cursor	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:to_cursor = {}$/;"	v
s:to_cursor.failure_message_for_should	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! s:to_cursor.failure_message_for_should(actual, expected)$/;"	f
s:to_cursor.match	nvim/plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! s:to_cursor.match(actual, expected)$/;"	f
s:to_s	nvim/autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:to_string	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:to_string(expr)$/;"	f
s:toggle	nvim/plugged/vim-go/autoload/go/coverage.vim	/^let s:toggle = 0$/;"	v
s:toggleIgnoreFilter	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
s:toggleShowBookmarks	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
s:toggleShowFiles	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
s:toggleShowHidden	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
s:toggleZoom	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f
s:token	nvim/plugged/typescript-vim/indent/typescript.vim	/^function s:token()$/;"	f
s:total_elapsed_time	nvim/plugged/vim-go/scripts/runtest.vim	/^let s:total_elapsed_time = substitute(reltimestr(reltime(s:total_started)), '^\\s*\\(.\\{-}\\)\\/;"	v
s:total_started	nvim/plugged/vim-go/scripts/runtest.vim	/^let s:total_started = reltime()$/;"	v
s:tranquilize	nvim/plugged/goyo.vim/autoload/goyo.vim	/^function! s:tranquilize()$/;"	f
s:tree_up_dir_line	nvim/plugged/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trigger_gitgutter	nvim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:trigger_gitgutter()$/;"	f
s:triggers	nvim/autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	nvim/autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:trim_bracket	nvim/plugged/vim-go/autoload/go/complete.vim	/^function! s:trim_bracket(val) abort$/;"	f
s:truncate	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate_skipping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:turn_off_hl_error	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:turn_off_hl_error() "{{{$/;"	f
s:turn_on_hl_error	nvim/plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:turn_on_hl_error() "{{{$/;"	f
s:type_map	nvim/plugged/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:type_map = {}$/;"	v
s:unc_path	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:unc_path(bufnr)$/;"	f
s:undo	nvim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:undo(hunk_diff)$/;"	f
s:undo_ftplugin	nvim/plugged/vim-pug/ftplugin/pug.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	nvim/plugged/vim-pug/ftplugin/pug.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_lock	nvim/plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^let s:undo_lock = {}$/;"	v
s:undo_lock	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:undo_lock = {}$/;"	v
s:undo_lock._save	nvim/plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock._save() abort$/;"	f
s:undo_lock._save	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock._save() abort$/;"	f
s:undo_lock.restore	nvim/plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.restore() abort$/;"	f
s:undo_lock.restore	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.restore() abort$/;"	f
s:undo_lock.save	nvim/plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.save() abort$/;"	f
s:undo_lock.save	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.save() abort$/;"	f
s:undo_lock.undobreak	nvim/plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.undobreak() abort$/;"	f
s:undo_lock.undobreak	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.undobreak() abort$/;"	f
s:unicode_enabled	nvim/plugged/vim-pencil/plugin/pencil.vim	/^fun! s:unicode_enabled()$/;"	f
s:unify_separator	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:unify_separator(path) abort$/;"	f
s:uniq	nvim/plugged/lightline.vim/autoload/lightline.vim	/^  function! s:uniq(xs) abort$/;"	f
s:uniq	nvim/plugged/lightline.vim/autoload/lightline.vim	/^  let s:uniq = function('uniq')$/;"	v
s:uniq	nvim/plugged/lightline.vim/test/uniq.vim	/^function! s:uniq(...)$/;"	f
s:uniq	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq	nvim/plugged/vim-go/autoload/go/impl.vim	/^  function! s:uniq(list)$/;"	f
s:uniq_by	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:unix_redir	nvim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unload	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:unload() abort dict$/;"	f
s:unmapping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:unmapping(keymapping, key, ...)$/;"	f
s:unshift	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
s:upDirCurrentRootClosed	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
s:upDirCurrentRootOpen	nvim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
s:upconvert	nvim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:upconvert(nr) abort$/;"	f
s:update	nvim/autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_breakpoint	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:update_breakpoint(res) abort$/;"	f
s:update_finish	nvim/autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_impl	nvim/autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_in_progress	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_python	nvim/autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_queue	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:update_ruby	nvim/autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_stacktrace	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:update_stacktrace() abort$/;"	f
s:update_tags	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
s:update_variables	nvim/plugged/vim-go/autoload/go/debug.vim	/^function! s:update_variables() abort$/;"	f
s:update_vim	nvim/autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:upgrade	nvim/autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	nvim/autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:upsert_new_gitgutter_signs	nvim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:upsert_new_gitgutter_signs(bufnr, modified_lines) abort$/;"	f
s:use_known_shell	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:use_known_shell() abort$/;"	f
s:variable	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:variable = {}$/;"	v
s:variable.restore	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:variable.restore() abort$/;"	f
s:verbosefiles	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:verbosefiles = []$/;"	v
s:version_requirement	nvim/autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:vertsplit	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:vertsplit = s:colors.vertsplit$/;"	v
s:veryDarkGray	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:veryDarkGray = [ '#1c1d21' , 234 ]$/;"	v
s:vim8	nvim/autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_cmdline_mapping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:vim_cmdline_mapping = {$/;"	v
s:vim_cmdline_mapping.keymapping	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.keymapping(cmdline)$/;"	f
s:vim_cmdline_mapping.on_enter	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.on_enter(cmdline)$/;"	f
s:vim_path	nvim/plugs.vim	/^let s:vim_path = "~\/.config\/nvim"$/;"	v
s:vim_path	vim/plugs.vim	/^let s:vim_path = '$VIM_PATH'$/;"	v
s:vim_version	nvim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:vim_version()$/;"	f
s:vimlintOutput	nvim/plugged/syntastic/syntax_checkers/vim/vimlint.vim	/^function! s:vimlintOutput(filename, pos, ev, eid, mes, obj) " {{{2$/;"	f
s:vimoption2python	nvim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! s:vimoption2python(option) abort$/;"	f
s:vimproc_dll_basename	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_cygwin.dll'$/;"	v
s:vimproc_dll_basename	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_linux32.so'$/;"	v
s:vimproc_dll_basename	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_linux64.so'$/;"	v
s:vimproc_dll_basename	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_mac.so'$/;"	v
s:vimproc_dll_basename	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_unix.so'$/;"	v
s:vimproc_dll_basename	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = has('win64') ?$/;"	v
s:vimproc_dll_basename	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = system($/;"	v
s:violet	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:violet = [ '#ff00ff', 13 ]$/;"	v
s:violet	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:visual_bg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_bg = '#8787af'$/;"	v
s:visual_black	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:visual_black = s:colors.visual_black " Black out selected text in 16-color visual mode$/;"	v
s:visual_fg	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_fg = '#000000'$/;"	v
s:visual_grey	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:visual_grey = s:colors.visual_grey$/;"	v
s:vital_base_dir	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_files	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:vital_files() abort$/;"	f
s:vname	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:vname = expand("<sfile>:h:h:h:h:t")$/;"	v
s:vname	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:vname = expand("<sfile>:h:h:t")$/;"	v
s:vp_checkpid	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_checkpid() dict$/;"	f
s:vp_dlclose	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_dlclose(handle) abort$/;"	f
s:vp_dlopen	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_dlopen(path) abort$/;"	f
s:vp_file_close	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_close() dict$/;"	f
s:vp_file_open	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_open(path, flags, mode) abort$/;"	f
s:vp_file_read	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_read(number, timeout) dict$/;"	f
s:vp_file_write	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_write(hd, timeout) dict$/;"	f
s:vp_get_winsize	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_get_winsize() dict$/;"	f
s:vp_host_exists	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_host_exists(host) abort$/;"	f
s:vp_kill	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_kill(...) dict$/;"	f
s:vp_pgroup_close	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_close() dict$/;"	f
s:vp_pgroup_kill	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_kill(...) dict$/;"	f
s:vp_pgroup_waitpid	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_waitpid() dict$/;"	f
s:vp_pipe_close	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_close() dict$/;"	f
s:vp_pipe_open	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_open(npipe, hstdin, hstdout, hstderr, argv) abort "{{{$/;"	f
s:vp_pipe_read	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_read(number, timeout) dict$/;"	f
s:vp_pipe_write	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_write(hd, timeout) dict$/;"	f
s:vp_pipes_close	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipes_close() dict$/;"	f
s:vp_pty_close	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_close() dict$/;"	f
s:vp_pty_open	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_open(npipe, width, height, hstdin, hstdout, hstderr, argv) abort$/;"	f
s:vp_pty_read	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_read(number, timeout) dict$/;"	f
s:vp_pty_write	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_write(hd, timeout) dict$/;"	f
s:vp_set_winsize	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_set_winsize(width, height) dict$/;"	f
s:vp_socket_close	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_close() dict$/;"	f
s:vp_socket_open	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_open(host, port) abort$/;"	f
s:vp_socket_read	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_read(number, timeout) dict$/;"	f
s:vp_socket_write	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_write(hd, timeout) dict$/;"	f
s:vp_waitpid	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_waitpid(...) dict$/;"	f
s:waitpid	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:waitpid(pid, ...) abort$/;"	f
s:warn	nvim/autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:warn	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
s:warn	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
s:wcswidth	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:which	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:which(command, ...) abort$/;"	f
s:white	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:white = [ '#ffffff' , 15 ]$/;"	v
s:white	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:white = [ '#a9b7c6', 250 ]$/;"	v
s:white	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:white = [ '#f8f8f2', 234 ]$/;"	v
s:white	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:white = [ '#d0d0d0', 252 ]$/;"	v
s:white	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:white = [ '#fce8c3', 15 ]$/;"	v
s:white	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:white = s:colors.white$/;"	v
s:white	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:white = 15$/;"	v
s:white	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^let s:white = '#ffffff'$/;"	v
s:wide	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:wildignores_options_path	nvim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:wildignores_options_path = ''$/;"	v
s:win2pos2hint_to_w2l2c2h	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:win2pos2hint_to_w2l2c2h(win2pos2hint) abort$/;"	f
s:win_escape	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! s:win_escape(str) abort  "{{{$/;"	f
s:wincall	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:wincall(func, arglist, ...) abort$/;"	f
s:window	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:window = '#efefef'$/;"	v
s:window	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:window = '#efefef'$/;"	v
s:windows_sink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
s:winjobarg	nvim/plugged/vim-go/autoload/go/job.vim	/^function! s:winjobarg(idx, val) abort$/;"	f
s:winnr2poses_to_list	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:winnr2poses_to_list(winnr2poses, ...) abort$/;"	f
s:winshell	nvim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:winshell()$/;"	f
s:with_cd	nvim/autoload/plug.vim	/^function! s:with_cd(cmd, dir)$/;"	f
s:with_index	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
s:wrap	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
s:write	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:write(str, ...) dict "{{{$/;"	f
s:write_buffer	nvim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:write_buffer(bufnr, file)$/;"	f
s:write_out	nvim/plugged/vim-go/autoload/go/tags.vim	/^func s:write_out(out) abort$/;"	f
s:write_pgroup	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:write_pgroup(str, ...) dict "{{{$/;"	f
s:write_pipes	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:write_pipes(str, ...) dict "{{{$/;"	f
s:write_timeout	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^let s:write_timeout = 100$/;"	v
s:write_triggered_update_tags	nvim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
s:xtermcolor	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xtermcolor += [$/;"	v
s:xtermcolor	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xtermcolor = [$/;"	v
s:xvquant	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xvquant = repeat([0],48)$/;"	v
s:xvquant	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xvquant[s:cubergb[2]] = 2$/;"	v
s:xvquant	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xvquant[s:cubergb[3]] = 3$/;"	v
s:xvquant	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xvquant[s:cubergb[4]] = 4$/;"	v
s:xvquant	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xvquant[s:cubergb[5]] = 5$/;"	v
s:yank_to_register	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:yellow = [ '#808000', 3 ]$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:yellow = [ '#e5cd52' , 221 ]$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:yellow = '#eab700'$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:yellow = '#f0c674'$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:yellow = '#ffeead'$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:yellow = '#e7c547'$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:yellow = '#ffcc66'$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:yellow = [ '#ffc66d', 222 ]$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:yellow = [ '#ffb964', 215 ]$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:yellow = '#ffcc00'$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:yellow = '#ffcb6b'$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:yellow = [ '#e6db74', 229 ]$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:yellow = [ '#e5c07b', 180 ]$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:yellow = [ '#d8af5f', 3 ]$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:yellow = [ '#fbb829', 3 ]$/;"	v
s:yellow	nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:yellow = [ '#cae682', 180 ]$/;"	v
s:yellow	nvim/plugged/palenight.vim/colors/palenight.vim	/^let s:yellow = s:colors.yellow$/;"	v
s:z	nvim/plugged/vim-javascript/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
s:zip	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip(...) abort$/;"	f
s:zip_fill	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
safari	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	safari: \/webkit\/.test( userAgent ),$/;"	P
safari2	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		    safari2      = safari && parseInt(version) < 522 && !\/adobeair\/i.test(userAgent),$/;"	P
scope	nvim/plugged/vim-go/test/parse.go	/^type scope int$/;"	t	package:html
script	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				script = document.createElement("script");$/;"	P
script	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			script: "text\/javascript, application\/javascript",$/;"	P
scripting	nvim/plugged/vim-go/test/parse.go	/^	scripting, framesetOK bool$/;"	m	struct:html.parser
scripts	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						scripts = scripts.add( jQuery( "script", elem ).remove() );$/;"	P
scripts	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					scripts = scripts.add( elem );$/;"	P
scrollLeft	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		scrollLeft: function(fx){$/;"	M
scrollTop	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		scrollTop: function(fx){$/;"	M
section	nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^section {$/;"	s
selectScope	nvim/plugged/vim-go/test/parse.go	/^	selectScope$/;"	c	package:html
selected	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					this.selected = (jQuery.inArray( this.value, values ) >= 0 ||$/;"	P
selected	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			selected: function(a){return a.selected||jQuery.attr(a,"selected");},$/;"	M
selected	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			selected: function(a){return a.selected||jQuery.attr(a,"selected");},$/;"	P
selectedIndex	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					this.selectedIndex = -1;$/;"	P
selector	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					selector = [];$/;"	P
selector	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					selector = jQuery.clean( [ match[1] ], context );$/;"	P
selector	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				selector = jQuery.multiFilter( selector, this );$/;"	P
selector	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		selector = selector || document;$/;"	P
serialize	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	serialize: function() {$/;"	M
serializeArray	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	serializeArray: function() {$/;"	M
set	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			set = value !== undefined,$/;"	P
setArray	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	setArray: function( elems ) {$/;"	M
setOriginalIM	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) setOriginalIM() {$/;"	f	unknown:html.parser
setTimeout	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				setTimeout(function(){$/;"	M
set_custom	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def set_custom(self, custom):$/;"	m	class:_Parent
set_pattern	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def set_pattern(variable, keys, pattern):$/;"	f
set_source_attributes	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def set_source_attributes(self, context):$/;"	m	class:_Parent
setdefault	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def setdefault(self, key, defval=None):$/;"	m	class:OrderedDict
setitems	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def setitems(self, items):$/;"	m	class:OrderedDict
setkeys	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def setkeys(self, keys):$/;"	m	class:OrderedDict
setup	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def setup(vim, level, output_file=None):$/;"	f
setup	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			setup: function() {$/;"	M
setvalues	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def setvalues(self, values):$/;"	m	class:OrderedDict
shouldFosterParent	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) shouldFosterParent() bool {$/;"	f	unknown:html.parser
show	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	show: function(){$/;"	M
show	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	show: function(speed,callback){$/;"	M
sibling	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	sibling: function( n, elem ) {$/;"	M
siblings	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	siblings: function(elem){return jQuery.sibling(elem.parentNode.firstChild,elem);},$/;"	M
siblings	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	siblings: function(elem){return jQuery.sibling(elem.parentNode.firstChild,elem);},$/;"	P
singlehtml	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^singlehtml:$/;"	t
size	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				size == undefined ?$/;"	P
size	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	size: function() {$/;"	M
size	nvim/plugged/vimproc.vim/src/vimstack.c	/^    size_t size; \/* stack size *\/$/;"	m	struct:vp_stack_t	typeref:typename:size_t	file:
slice	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	slice: function() {$/;"	M
slideDown	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	slideDown: function(speed,callback){$/;"	M
slideToggle	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	slideToggle: function(speed, callback){$/;"	M
slideUp	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	slideUp: function(speed,callback){$/;"	M
slow	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		slow: 600,$/;"	P
smartdict_jp	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^        let smartdict_jp = g:EasyMotion#sticky_table#jp$/;"	v
smartdict_us	nvim/plugged/vim-easymotion/t/smartsign_spec.vim	/^        let smartdict_us = g:EasyMotion#sticky_table#us$/;"	v
snprintf	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#  define snprintf /;"	d	file:
sockets_number	nvim/plugged/vimproc.vim/src/proc_w32.c	/^static int sockets_number = 0;$/;"	v	typeref:typename:int	file:
sort	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def sort(self, *args, **kwargs):$/;"	m	class:OrderedDict
source_suffix	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^source_suffix = '.rst'$/;"	v
special	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			var special = \/href|src|style\/.test( name );$/;"	V
speed	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	speed: function(speed, easing, fn) {$/;"	M
split_at_equals	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^split_at_equals([$=|T], Acc) ->$/;"	f
split_at_equals	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^split_at_equals([H|T], Acc) ->$/;"	f
split_at_equals	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^split_at_equals([], Acc) ->$/;"	f
split_version	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/versiontools.py	/^def split_version(version):$/;"	f
start	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							start = ((end || 1) \/ e.cur(true)) * start;$/;"	P
start	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						start = e.cur(true) || 0;$/;"	P
start	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.start = from;$/;"	P
start	nvim/plugged/vim-gitgutter/unplace.vim	/^let start = reltime()$/;"	v
start	nvim/plugged/vimproc.vim/tools/benchmark.vim	/^let start = reltime()$/;"	v
startTime	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.startTime = now();$/;"	P
state	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.state = n \/ this.options.duration;$/;"	P
state.complete	nvim/plugged/vim-go/autoload/go/job.vim	/^  function state.complete(job, exit_status, data)$/;"	f
state.show_errors	nvim/plugged/vim-go/autoload/go/job.vim	/^  function state.show_errors(job, exit_status, data)$/;"	f
state.show_status	nvim/plugged/vim-go/autoload/go/job.vim	/^  function state.show_status(job, exit_status) dict$/;"	f
status	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						status = "parsererror";$/;"	P
status	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				status = isTimeout == "timeout" && "timeout" ||$/;"	P
step	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	step: function(gotoEnd){$/;"	M
stop	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	stop: function(clearQueue, gotoEnd){$/;"	M
stop4166	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4166" \/>$/;"	i
stop4178	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4178" \/>$/;"	i
stop4184	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4184" \/>$/;"	i
stop4194	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4194" \/>$/;"	i
stop4263	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4263" \/>$/;"	i
stop4269	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4269" \/>$/;"	i
stop4287	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4287" \/>$/;"	i
stop4293	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4293" \/>$/;"	i
stop4299	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4299" \/>$/;"	i
stop4305	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4305" \/>$/;"	i
stop4311	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4311" \/>$/;"	i
stop4317	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4317" \/>$/;"	i
stop4334	nvim/plugged/vim-go/assets/vim-go.svg	/^         id="stop4334" \/>$/;"	i
stopPropagation	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					stopPropagation: function(){},$/;"	M
stopPropagation	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					stopPropagation: function(){},$/;"	P
str_to_oflag	nvim/plugged/vimproc.vim/src/proc.c	/^str_to_oflag(const char *flags)$/;"	f	typeref:typename:int	file:
str_to_oflag	nvim/plugged/vimproc.vim/src/proc_w32.c	/^str_to_oflag(const char *flags)$/;"	f	typeref:typename:int	file:
strwidth	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def strwidth(string):$/;"	f
styleFloat	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		styleFloat: styleFloat,$/;"	P
submit	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			submit: function(a){return "submit"==a.type;},$/;"	M
submit	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			submit: function(a){return "submit"==a.type;},$/;"	P
subtree merge guide	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^.. _`subtree merge guide`: http:\/\/help.github.com\/subtree-merge\/$/;"	T	subsection:Bundling as a Subtree in Git
success	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			success: callback,$/;"	P
summary	nvim/plugged/vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
swap	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				var swap = [], stack = [], a = elem, i = 0;$/;"	A
swap	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	swap: function( elem, options, callback ) {$/;"	M
swing	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		swing: function( p, n, firstNum, diff ) {$/;"	M
syntastic	nvim/plugged/syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	nvim/plugged/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic	nvim/plugged/syntastic/syntax_checkers/java/javac.vim	/^        augroup syntastic$/;"	a
syntastic	nvim/plugged/syntastic/syntax_checkers/rst/sphinx.vim	/^augroup syntastic$/;"	a
syntastic	nvim/plugged/syntastic/syntax_checkers/sass/sass.vim	/^augroup syntastic$/;"	a
syntastic#c#GetLocList	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options) abort " {{{2$/;"	f
syntastic#c#NullOutput	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#NullOutput() abort " {{{2$/;"	f
syntastic#c#ReadConfig	nvim/plugged/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file) abort " {{{2$/;"	f
syntastic#log#debug	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debug(level, msg, ...) abort " {{{2$/;"	f
syntastic#log#debugDump	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugDump(level) abort " {{{2$/;"	f
syntastic#log#debugShowOptions	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowOptions(level, names) abort " {{{2$/;"	f
syntastic#log#debugShowVariables	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowVariables(level, names) abort " {{{2$/;"	f
syntastic#log#deprecationWarn	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#deprecationWarn(old, new, ...) abort " {{{2$/;"	f
syntastic#log#error	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#error(msg) abort " {{{2$/;"	f
syntastic#log#info	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#info(msg) abort " {{{2$/;"	f
syntastic#log#ndebug	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#ndebug(level, title, messages) abort " {{{2$/;"	f
syntastic#log#oneTimeWarn	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#oneTimeWarn(msg) abort " {{{2$/;"	f
syntastic#log#warn	nvim/plugged/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#warn(msg) abort " {{{2$/;"	f
syntastic#postprocess#compressWhitespace	nvim/plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#compressWhitespace(errors) abort " {{{2$/;"	f
syntastic#postprocess#cygwinRemoveCR	nvim/plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors) abort " {{{2$/;"	f
syntastic#postprocess#decodeXMLEntities	nvim/plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors) abort " {{{2$/;"	f
syntastic#postprocess#filterForeignErrors	nvim/plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors) abort " {{{2$/;"	f
syntastic#postprocess#guards	nvim/plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#guards(errors) abort " {{{2$/;"	f
syntastic#postprocess#iconv	nvim/plugged/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#iconv(errors) abort " {{{2$/;"	f
syntastic#preprocess#bandit	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#bandit(errors) abort " {{{2$/;"	f
syntastic#preprocess#basex	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#basex(errors) abort " {{{2$/;"	f
syntastic#preprocess#bro	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#bro(errors) abort " {{{2$/;"	f
syntastic#preprocess#cabal	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cabal(errors) abort " {{{2$/;"	f
syntastic#preprocess#checkstyle	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#checkstyle(errors) abort " {{{2$/;"	f
syntastic#preprocess#coffeelint	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#coffeelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#cppcheck	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cppcheck(errors) abort " {{{2$/;"	f
syntastic#preprocess#dockerfile_lint	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#dockerfile_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#dscanner	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#dscanner(errors) abort " {{{2$/;"	f
syntastic#preprocess#flow	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#flow(errors) abort " {{{2$/;"	f
syntastic#preprocess#iconv	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#iconv(errors) abort " {{{2$/;"	f
syntastic#preprocess#jscs	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#jscs(errors) abort " {{{2$/;"	f
syntastic#preprocess#killEmpty	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#killEmpty(errors) abort " {{{2$/;"	f
syntastic#preprocess#lynt	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#lynt(errors) abort " {{{2$/;"	f
syntastic#preprocess#mypy	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#mypy(errors) abort " {{{2$/;"	f
syntastic#preprocess#nix	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#nix(errors) abort " {{{2$/;"	f
syntastic#preprocess#perl	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#perl(errors) abort " {{{2$/;"	f
syntastic#preprocess#perl6	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#perl6(errors) abort " {{{2$/;"	f
syntastic#preprocess#prospector	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#prospector(errors) abort " {{{2$/;"	f
syntastic#preprocess#remark_lint	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#remark_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#rparse	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#rparse(errors) abort " {{{2$/;"	f
syntastic#preprocess#scss_lint	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#scss_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#stylelint	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#stylelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#tern_lint	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tern_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#tslint	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tslint(errors) abort " {{{2$/;"	f
syntastic#preprocess#validator	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#validator(errors) abort " {{{2$/;"	f
syntastic#preprocess#vint	nvim/plugged/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#vint(errors) abort " {{{2$/;"	f
syntastic#util#CygwinPath	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#CygwinPath(path) abort " {{{2$/;"	f
syntastic#util#DevNull	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull() abort " {{{2$/;"	f
syntastic#util#Slash	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#Slash() abort " {{{2$/;"	f
syntastic#util#argsescape	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#argsescape(opt) abort " {{{2$/;"	f
syntastic#util#bufIsActive	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer) abort " {{{2$/;"	f
syntastic#util#bufRawVar	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufRawVar(buf, name, ...) abort " {{{2$/;"	f
syntastic#util#bufVar	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufVar(buf, name, ...) abort " {{{2$/;"	f
syntastic#util#compareLexi	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#compareLexi(a, b) abort " {{{2$/;"	f
syntastic#util#decodeXMLEntities	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#decodeXMLEntities(string) abort " {{{2$/;"	f
syntastic#util#dictFilter	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#dictFilter(errors, filter) abort " {{{2$/;"	f
syntastic#util#findFileInParent	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findFileInParent(what, where) abort " {{{2$/;"	f
syntastic#util#findGlobInParent	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findGlobInParent(what, where) abort " {{{2$/;"	f
syntastic#util#float2str	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#float2str(val) abort " {{{2$/;"	f
syntastic#util#fname2buf	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#fname2buf(fname) abort " {{{2$/;"	f
syntastic#util#getbufvar	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#getbufvar(buf, name, ...) abort " {{{2$/;"	f
syntastic#util#isRunningWindows	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#isRunningWindows() abort " {{{2$/;"	f
syntastic#util#parseShebang	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang(buf) abort " {{{2$/;"	f
syntastic#util#parseVersion	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(version, ...) abort " {{{2$/;"	f
syntastic#util#rawVar	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rawVar(name, ...) abort " {{{2$/;"	f
syntastic#util#redraw	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#redraw(full) abort " {{{2$/;"	f
syntastic#util#rmrf	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rmrf(what) abort " {{{2$/;"	f
syntastic#util#screenWidth	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#screenWidth(str, tabstop) abort " {{{2$/;"	f
syntastic#util#setLastTick	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#setLastTick(buf) abort " {{{2$/;"	f
syntastic#util#setWids	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#setWids() abort " {{{2$/;"	f
syntastic#util#shescape	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shescape(string) abort " {{{2$/;"	f
syntastic#util#shexpand	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shexpand(string, ...) abort " {{{2$/;"	f
syntastic#util#stamp	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#stamp() abort " {{{2$/;"	f
syntastic#util#str2float	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#str2float(val) abort " {{{2$/;"	f
syntastic#util#system	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#system(command) abort " {{{2$/;"	f
syntastic#util#tmpdir	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#tmpdir() abort " {{{2$/;"	f
syntastic#util#unique	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list) abort " {{{2$/;"	f
syntastic#util#var	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#var(name, ...) abort " {{{2$/;"	f
syntastic#util#versionIsAtLeast	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required) abort " {{{2$/;"	f
syntastic#util#wformat	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wformat(format, str) abort " {{{2$/;"	f
syntastic#util#wideMsg	nvim/plugged/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg) abort " {{{2$/;"	f
t	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					t = " " + t.substr(1,t.length);$/;"	P
t	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					t = jQuery.trim( t.replace( re, "" ) );$/;"	P
t	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					t = t.replace( re2, "" );$/;"	P
t	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					t = t.substring( m[0].length );$/;"	P
t	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				t = jQuery.trim(val.t);$/;"	P
t	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				t = t.replace( re, "" );$/;"	P
t	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			t = jQuery.trim(t);$/;"	P
t	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> t$/;"	m
t	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> t$/;"	m
t	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-bd-t)$/;"	m
t	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-t)$/;"	m
t/	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t\/ <Plug>(easymotion-tn)$/;"	m
tableBodyScope	nvim/plugged/vim-go/test/parse.go	/^	tableBodyScope$/;"	c	package:html
tableRowScope	nvim/plugged/vim-go/test/parse.go	/^	tableRowScope$/;"	c	package:html
tableScope	nvim/plugged/vim-go/test/parse.go	/^	tableScope$/;"	c	package:html
tabular#DoGTabularize	nvim/plugged/tabular/autoload/tabular.vim	/^function! tabular#DoGTabularize()$/;"	f
tabular#ElementFormatPattern	nvim/plugged/tabular/autoload/tabular.vim	/^function! tabular#ElementFormatPattern()$/;"	f
tabular#PipeRange	nvim/plugged/tabular/autoload/tabular.vim	/^function! tabular#PipeRange(includepat, ...) range$/;"	f
tabular#PipeRangeWithOptions	nvim/plugged/tabular/autoload/tabular.vim	/^function! tabular#PipeRangeWithOptions(includepat, filterlist, options) range$/;"	f
tabular#SplitDelimUnitTest	nvim/plugged/tabular/autoload/tabular.vim	/^function! tabular#SplitDelimUnitTest()$/;"	f
tabular#TabularizeStrings	nvim/plugged/tabular/autoload/tabular.vim	/^function! tabular#TabularizeStrings(strings, delim, ...)$/;"	f
tag	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^								tag = "param";$/;"	P
target	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					target: elem,$/;"	P
target	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		target = arguments[1] || {};$/;"	P
target	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		target = this;$/;"	P
target	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		target = {};$/;"	P
teardown	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			teardown: function() { return; }$/;"	M
teardown	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			teardown: function() { return; }$/;"	P
teardown	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			teardown: function() {$/;"	M
templates_path	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^templates_path = ['_templates']$/;"	v
test	nvim/plugged/deoplete.nvim/Makefile	/^test:$/;"	t
test	nvim/plugged/emmet-vim/Makefile	/^test:$/;"	t
test	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					test = \/(-?)(\\d*)n((?:\\+|-)?\\d*)\/.exec($/;"	P
test	nvim/plugged/vim-go/Makefile	/^test:$/;"	t
test	nvim/plugged/vim-localvimrc/Makefile	/^test:$/;"	t
test_binary_search	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_binary_search():$/;"	f
test_charwidth	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_charwidth():$/;"	f
test_custom	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_custom():$/;"	f
test_editorconfig	nvim/plugged/editorconfig-vim/tests/spec/editorconfig_spec.rb	/^def test_editorconfig(file_name, expected_values)$/;"	f
test_fuzzy_escapse	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_fuzzy_escapse():$/;"	f
test_globruntime	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_globruntime():$/;"	f
test_matcher_full_fuzzy	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_full_fuzzy.py	/^def test_matcher_full_fuzzy():$/;"	f
test_matcher_fuzzy	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_fuzzy.py	/^def test_matcher_fuzzy():$/;"	f
test_overlap_length	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_overlap_length():$/;"	f
test_pos	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_pos():$/;"	f
test_skipping	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_skipping():$/;"	f
test_strwidth	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_strwidth():$/;"	f
test_truncate	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_truncate():$/;"	f
test_uniq_list_dict	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_uniq_list_dict():$/;"	f
text	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^text:$/;"	t
text	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			text: "text\/plain",$/;"	P
text	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			text: function(a){return "text"==a.type;},$/;"	M
text	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			text: function(a){return "text"==a.type;},$/;"	P
text	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	text: function( text ) {$/;"	M
text	nvim/plugged/syntastic/syntax_checkers/python/codec.py	/^            text = codecs.lookup(match.groupdict()["coding"]).incrementaldecoder().decode($/;"	v
text	nvim/plugged/syntastic/syntax_checkers/python/codec.py	/^        text = ''.join(text).encode('utf-8')$/;"	v
text	nvim/plugged/syntastic/syntax_checkers/python/codec.py	/^        text = fle.readlines()$/;"	v
text4285	nvim/plugged/vim-go/assets/vim-go.svg	/^         transform="matrix(1.0880646,0,-0.29154603,1.0880646,-528.83975,-369.0604)">$/;"	i
textIM	nvim/plugged/vim-go/test/parse.go	/^func textIM(p *parser) bool {$/;"	f	package:html
text_type	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/compat.py	/^    text_type = unicode$/;"	v
this	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				this == window || this == document ?$/;"	P
timeStamp	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					timeStamp: now()$/;"	P
timeout	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		timeout: 0,$/;"	P
timerId	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	timerId: null,$/;"	P
timers	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	timers: [],$/;"	P
tmp	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^									tmp = [ r[i] ];$/;"	P
tmp	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							var tmp = [];$/;"	A
tmp	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				var tmp = [], type = m[3];$/;"	A
tmp	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var tmp = [];$/;"	A
tmux_conf_theme	tmux/tmux.conf	/^tmux_conf_theme=powerline$/;"	k
toggle	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	toggle: function( fn ) {$/;"	M
toggle	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	toggle: function( fn, fn2 ){$/;"	M
toggleClass	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	toggleClass: function( classNames ) {$/;"	M
tok	nvim/plugged/vim-go/test/parse.go	/^	tok Token$/;"	m	struct:html.parser
tokenizer	nvim/plugged/vim-go/test/parse.go	/^	tokenizer *Tokenizer$/;"	m	struct:html.parser
top	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				top:  offset.top  - parentOffset.top,$/;"	P
top	nvim/plugged/vim-go/test/parse.go	/^func (p *parser) top() *Node {$/;"	f	unknown:html.parser
top	nvim/plugged/vimproc.vim/src/vimstack.c	/^    char *top;   \/* stack top *\/$/;"	m	struct:vp_stack_t	typeref:typename:char *	file:
translate	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^def translate(pat, nested=False):$/;"	f
translate_path	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(Dir, {i, Path}) ->$/;"	f
translate_path	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(_, Other) -> Other.$/;"	f
translate_paths	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_paths(Dir, RebarOpts) ->$/;"	f
trigger	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	trigger: function( type, data, fn ) {$/;"	M
trigger	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	trigger: function(type, data, elem, donative, extra) {$/;"	M
triggerHandler	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	triggerHandler: function( type, data, fn ) {$/;"	M
triggered	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				this.triggered = true;$/;"	P
triggered	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			this.triggered = false;$/;"	P
trim	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	trim: function( text ) {$/;"	M
truncate	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate(string, max_width):$/;"	f
truncate_skipping	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate_skipping(string, max_width, footer, footer_len):$/;"	f
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						 type == "!=" && z != m[5] ||$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						 type == "$=" && z.substr(z.length - m[5].length) == m[5] ||$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						 type == "=" && z == m[5] ||$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						 type == "^=" && z && !z.indexOf(m[5]) ||$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					type = parts[0];$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					type: type,$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				type = "POST";$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			type = "fx";$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			type = parts[0];$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			type = s.type.toUpperCase();$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			type = type.slice(0, -1);$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			type: "GET",$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			type: "POST",$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			type: type,$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		type = type || "fx";$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		type: "GET",$/;"	P
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		var type = "GET";$/;"	V
type	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	type = type || "fx";$/;"	P
type	nvim/plugged/vim-go/addon-info.json	/^  "repository" : {"type": "git", "url": "https:\/\/github.com\/fatih\/vim-go.git"}$/;"	s	object:repository
types	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					types = types.type;$/;"	P
u	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/compat.py	/^    u = lambda s: codecs.unicode_escape_decode(s)[0]$/;"	f
u	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> u$/;"	m
u	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> u :call <SID>Tlist_Window_Update_File()<CR>$/;"	m
unbind	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	unbind: function( type, fn ) {$/;"	M
uniq_list_dict	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def uniq_list_dict(l):$/;"	f
unique	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	unique: function( array ) {$/;"	M
unit	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							unit = parts[3] || "px";$/;"	P
unit	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		this.unit = unit || this.unit || "px";$/;"	P
unite#sources#decls#define	nvim/plugged/vim-go/autoload/unite/sources/decls.vim	/^function! unite#sources#decls#define()$/;"	f
update	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def update(self, from_od):$/;"	m	class:OrderedDict
update	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	update: function(){$/;"	M
url	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			url = url.slice(0, off);$/;"	P
url	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			url: elem.src,$/;"	P
url	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			url: url,$/;"	P
url	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		url: location.href,$/;"	P
url	nvim/plugged/vim-go/addon-info.json	/^  "repository" : {"type": "git", "url": "https:\/\/github.com\/fatih\/vim-go.git"}$/;"	s	object:repository
usage	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/main.py	/^def usage(command, error=False):$/;"	f
usage	nvim/plugged/fzf.vim/bin/preview.rb	/^def usage$/;"	f
use4338	nvim/plugged/vim-go/assets/vim-go.svg	/^       height="100%" \/>$/;"	i
use_raw_list	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	nvim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
username	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^		username: null,$/;"	P
utf16_to_utf8	nvim/plugged/vimproc.vim/src/proc_w32.c	/^utf16_to_utf8(LPCWSTR wstr)$/;"	f	typeref:typename:char *	file:
utf8_to_utf16	nvim/plugged/vimproc.vim/src/proc_w32.c	/^utf8_to_utf16(const char *str)$/;"	f	typeref:typename:LPWSTR	file:
util	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^import deoplete.util as util$/;"	I
util	nvim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^import deoplete.util as util$/;"	I
val	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					val = ret;$/;"	P
val	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				val = false;$/;"	P
val	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				val = handle.apply( elem, data );$/;"	P
val	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				val = name == "width" ? elem.offsetWidth : elem.offsetHeight;$/;"	P
val	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	val: function( value ) {$/;"	M
value	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^							value = jQuery.browser.msie && !option.attributes.value.specified ? option.text : option./;"	P
value	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^				this.value = value;$/;"	P
value	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			value = undefined;$/;"	P
value	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			value = value.call( elem, i );$/;"	P
values	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def values(self, values=None):$/;"	m	class:OrderedDict
values	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						values = [],$/;"	P
version	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^version = __version__$/;"	v
version	nvim/plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/main.py	/^def version():$/;"	f
version	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	version: (userAgent.match( \/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/ ) || [])[1],$/;"	P
vim	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    vim = neovim$/;"	v
vim	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    vim = pynvim$/;"	v
vim	nvim/plugged/vim-go/autoload/go/coverage.vim	/^  augroup vim-go-coverage$/;"	a
vim	nvim/plugged/vim-go/autoload/go/debug.vim	/^  augroup vim-go-debug$/;"	a
vim	nvim/plugged/vim-go/autoload/go/guru.vim	/^    augroup vim-go-sameids$/;"	a
vim	nvim/plugged/vim-go/autoload/go/guru.vim	/^  augroup vim-go-sameids$/;"	a
vim	nvim/plugged/vim-go/plugin/go.vim	/^augroup vim-go$/;"	a
vim	nvim/plugged/vim-go/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim plugins for HTML and CSS hi-speed coding.	nvim/plugged/emmet-vim/docs/index.html	/^	<h2>vim plugins for HTML and CSS hi-speed coding.<\/h2>$/;"	i
vim-pencil	nvim/plugged/vim-pencil/README.markdown	/^# vim-pencil$/;"	c
vim-pug	nvim/plugged/vim-pug/README.markdown	/^# vim-pug #$/;"	c
vim-themis	nvim/plugged/deoplete.nvim/Makefile	/^vim-themis:$/;"	t
vim-tools	nvim/plugged/vim-localvimrc/Makefile	/^vim-tools = support\/vim-tools$/;"	m
vimproc	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^augroup vimproc$/;"	a
vimproc	nvim/plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^augroup vimproc$/;"	a
vimproc#_get_bg_processes	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#_get_bg_processes() abort "{{{$/;"	f
vimproc#analyze_shebang	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#analyze_shebang(filename) abort "{{{$/;"	f
vimproc#cmd#system	nvim/plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^  function! vimproc#cmd#system(expr) abort$/;"	f
vimproc#cmd#system	nvim/plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! vimproc#cmd#system(expr) abort$/;"	f
vimproc#commands#_bang	nvim/plugged/vimproc.vim/autoload/vimproc/commands.vim	/^function! vimproc#commands#_bang(cmdline) abort "{{{$/;"	f
vimproc#commands#_install	nvim/plugged/vimproc.vim/autoload/vimproc/commands.vim	/^function! vimproc#commands#_install(args) abort "{{{$/;"	f
vimproc#commands#_read	nvim/plugged/vimproc.vim/autoload/vimproc/commands.vim	/^function! vimproc#commands#_read(cmdline) abort "{{{$/;"	f
vimproc#decode_signal	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#decode_signal(signal) abort "{{{$/;"	f
vimproc#delete_trash	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#delete_trash(filename) abort "{{{$/;"	f
vimproc#dll_version	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#dll_version() abort "{{{$/;"	f
vimproc#filepath#which	nvim/plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! vimproc#filepath#which(command, path, maxcount) abort$/;"	f
vimproc#fopen	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#fopen(path, ...) abort "{{{$/;"	f
vimproc#get_command_name	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_command_name(command, ...) abort "{{{$/;"	f
vimproc#get_last_errmsg	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#get_last_errmsg() abort$/;"	f
vimproc#get_last_errmsg	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_last_errmsg() abort "{{{$/;"	f
vimproc#get_last_status	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#get_last_status() abort$/;"	f
vimproc#get_last_status	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_last_status() abort "{{{$/;"	f
vimproc#host_exists	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#host_exists(host) abort "{{{$/;"	f
vimproc#kill	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#kill(pid, sig) abort "{{{$/;"	f
vimproc#lexer#init_lexer	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_lexer(text) abort$/;"	f
vimproc#lexer#init_reader	nvim/plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_reader(text) abort$/;"	f
vimproc#open	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#open(filename) abort "{{{$/;"	f
vimproc#parser#expand_wildcard	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#expand_wildcard(wildcard) abort "{{{$/;"	f
vimproc#parser#parse_pipe	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_pipe(statement) abort "{{{$/;"	f
vimproc#parser#parse_statements	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_statements(script) abort "{{{$/;"	f
vimproc#parser#split_args	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args(script) abort "{{{$/;"	f
vimproc#parser#split_args_through	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args_through(script) abort "{{{$/;"	f
vimproc#parser#split_commands	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_commands(script) abort "{{{$/;"	f
vimproc#parser#split_pipe	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_pipe(script) abort "{{{$/;"	f
vimproc#parser#split_statements	nvim/plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_statements(script) abort "{{{$/;"	f
vimproc#pgroup_open	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#pgroup_open(statements, ...) abort "{{{$/;"	f
vimproc#plineopen2	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#plineopen2(commands, ...) abort "{{{$/;"	f
vimproc#plineopen3	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#plineopen3(commands, ...) abort "{{{$/;"	f
vimproc#popen2	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#popen2(args, ...) abort "{{{$/;"	f
vimproc#popen3	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#popen3(args, ...) abort "{{{$/;"	f
vimproc#ptyopen	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#ptyopen(commands, ...) abort "{{{$/;"	f
vimproc#readdir	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#readdir(dirname) abort "{{{$/;"	f
vimproc#shellescape	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#shellescape(string) abort "{{{$/;"	f
vimproc#socket_open	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#socket_open(host, port) abort "{{{$/;"	f
vimproc#system	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#system(...) abort$/;"	f
vimproc#system	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system(cmdline, ...) abort "{{{$/;"	f
vimproc#system2	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system2(...) abort "{{{$/;"	f
vimproc#system_bg	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_bg(cmdline) abort "{{{$/;"	f
vimproc#system_gui	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_gui(cmdline) abort "{{{$/;"	f
vimproc#system_passwd	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_passwd(cmdline, ...) abort "{{{$/;"	f
vimproc#test_readdir	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#test_readdir(dirname) abort "{{{$/;"	f
vimproc#util#cd	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#cd(path) abort  "{{{$/;"	f
vimproc#util#expand	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#expand(path) abort "{{{$/;"	f
vimproc#util#has_iconv	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#has_iconv() abort "{{{$/;"	f
vimproc#util#has_lua	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#has_lua() abort "{{{$/;"	f
vimproc#util#iconv	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#iconv(expr, from, to) abort "{{{$/;"	f
vimproc#util#is_cygwin	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_cygwin() abort "{{{$/;"	f
vimproc#util#is_mac	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_mac() abort "{{{$/;"	f
vimproc#util#is_windows	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_windows() abort "{{{$/;"	f
vimproc#util#set_default	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#set_default(var, val, ...) abort  "{{{$/;"	f
vimproc#util#stderrencoding	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stderrencoding() abort "{{{$/;"	f
vimproc#util#stdinencoding	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stdinencoding() abort "{{{$/;"	f
vimproc#util#stdoutencoding	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stdoutencoding() abort "{{{$/;"	f
vimproc#util#substitute_path_separator	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#substitute_path_separator(path) abort "{{{$/;"	f
vimproc#util#systemencoding	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#systemencoding() abort "{{{$/;"	f
vimproc#util#termencoding	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#termencoding() abort "{{{$/;"	f
vimproc#util#try_download_windows_dll	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#try_download_windows_dll(version) abort  "{{{$/;"	f
vimproc#util#try_update_windows_dll	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#try_update_windows_dll(version) abort  "{{{$/;"	f
vimproc#util#uniq	nvim/plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#uniq(list, ...) abort "{{{$/;"	f
vimproc#version	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#version() abort "{{{$/;"	f
vimproc#write	nvim/plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#write(filename, string, ...) abort "{{{$/;"	f
vimproc_arch	nvim/plugged/vimproc.vim/tools/update-dll-mingw.bat	/^    set vimproc_arch=32$/;"	v
vimproc_arch	nvim/plugged/vimproc.vim/tools/update-dll-mingw.bat	/^    set vimproc_arch=64$/;"	v
vimproc_arch	nvim/plugged/vimproc.vim/tools/update-dll-mingw.bat	/^  set vimproc_arch=%1$/;"	v
vimproc_dllname	nvim/plugged/vimproc.vim/tools/update-dll-mingw.bat	/^set vimproc_dllname=vimproc_win%vimproc_arch%.dll$/;"	v
visible	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			visible: function(a){return "hidden"!=a.type&&jQuery.css(a,"display")!="none"&&jQuery.css(a,"/;"	M
visible	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			visible: function(a){return "hidden"!=a.type&&jQuery.css(a,"display")!="none"&&jQuery.css(a,"/;"	P
vital	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^augroup vital-hit-a-hint-motion-default-highlight$/;"	a
vital#	nvim/plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	nvim/plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#_easymotion#Data#Dict#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^  function! vital#_easymotion#Data#Dict#import() abort$/;"	f
vital#_easymotion#Data#List#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^  function! vital#_easymotion#Data#List#import() abort$/;"	f
vital#_easymotion#Data#Set#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^  function! vital#_easymotion#Data#Set#import() abort$/;"	f
vital#_easymotion#HitAHint#Hint#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! vital#_easymotion#HitAHint#Hint#import() abort$/;"	f
vital#_easymotion#HitAHint#Motion#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^  function! vital#_easymotion#HitAHint#Motion#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Base#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^  function! vital#_easymotion#Over#Commandline#Base#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#BufferComplete#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#BufferComplete#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Cancel#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Cancel#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#CursorMove#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#CursorMove#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Delete#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Delete#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Doautocmd#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Doautocmd#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#DrawCommandline#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#DrawCommandline#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#ExceptionExit#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#ExceptionExit#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#ExceptionMessage#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#ExceptionMessage#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Exit#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Exit#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#History#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#History#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#InsertRegister#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#InsertRegister#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#KeyMapping#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#KeyMapping#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#NoInsert#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#NoInsert#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Paste#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Paste#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Redraw#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Redraw#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#import() abort$/;"	f
vital#_easymotion#Over#Exception#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^  function! vital#_easymotion#Over#Exception#import() abort$/;"	f
vital#_easymotion#Over#Input#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^  function! vital#_easymotion#Over#Input#import() abort$/;"	f
vital#_easymotion#Over#Keymapping#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^  function! vital#_easymotion#Over#Keymapping#import() abort$/;"	f
vital#_easymotion#Over#Signals#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^  function! vital#_easymotion#Over#Signals#import() abort$/;"	f
vital#_easymotion#Over#String#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^  function! vital#_easymotion#Over#String#import() abort$/;"	f
vital#_easymotion#Palette#Capture#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^  function! vital#_easymotion#Palette#Capture#import() abort$/;"	f
vital#_easymotion#Palette#Highlight#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^  function! vital#_easymotion#Palette#Highlight#import() abort$/;"	f
vital#_easymotion#Palette#Keymapping#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^  function! vital#_easymotion#Palette#Keymapping#import() abort$/;"	f
vital#_easymotion#Prelude#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! vital#_easymotion#Prelude#import() abort$/;"	f
vital#_easymotion#Vim#Buffer#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! vital#_easymotion#Vim#Buffer#import() abort$/;"	f
vital#_easymotion#Vim#Guard#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^  function! vital#_easymotion#Vim#Guard#import() abort$/;"	f
vital#_easymotion#Vim#Message#import	nvim/plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^  function! vital#_easymotion#Vim#Message#import() abort$/;"	f
vital#of	nvim/plugged/vim-easymotion/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vp_close_handle	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_close_handle(char *args)$/;"	f	typeref:typename:const char *
vp_decode	nvim/plugged/vimproc.vim/src/proc.c	/^vp_decode(char *args)$/;"	f	typeref:typename:const char *
vp_decode	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_decode(char *args)$/;"	f	typeref:typename:const char *
vp_decode_size	nvim/plugged/vimproc.vim/src/vimstack.c	/^vp_decode_size(const char *buf)$/;"	f	typeref:typename:unsigned int
vp_delete_trash	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_delete_trash(char *args)$/;"	f	typeref:typename:const char *
vp_dlclose	nvim/plugged/vimproc.vim/src/proc.c	/^vp_dlclose(char *args)$/;"	f	typeref:typename:const char *
vp_dlclose	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_dlclose(char *args)$/;"	f	typeref:typename:const char *
vp_dlopen	nvim/plugged/vimproc.vim/src/proc.c	/^vp_dlopen(char *args)$/;"	f	typeref:typename:const char *
vp_dlopen	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_dlopen(char *args)$/;"	f	typeref:typename:const char *
vp_dlversion	nvim/plugged/vimproc.vim/src/proc.c	/^vp_dlversion(char *args)$/;"	f	typeref:typename:const char *
vp_dlversion	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_dlversion(char *args)$/;"	f	typeref:typename:const char *
vp_encode_size	nvim/plugged/vimproc.vim/src/vimstack.c	/^vp_encode_size(unsigned int size, char *buf)$/;"	f	typeref:typename:char *	file:
vp_fd_read	nvim/plugged/vimproc.vim/src/proc.c	/^vp_fd_read(char *args, int is_pty_pipe)$/;"	f	typeref:typename:const char *
vp_file_close	nvim/plugged/vimproc.vim/src/proc.c	/^vp_file_close(char *args)$/;"	f	typeref:typename:const char *
vp_file_close	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_file_close(char *args)$/;"	f	typeref:typename:const char *
vp_file_open	nvim/plugged/vimproc.vim/src/proc.c	/^vp_file_open(char *args)$/;"	f	typeref:typename:const char *
vp_file_open	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_file_open(char *args)$/;"	f	typeref:typename:const char *
vp_file_read	nvim/plugged/vimproc.vim/src/proc.c	/^vp_file_read(char *args)$/;"	f	typeref:typename:const char *
vp_file_read	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_file_read(char *args)$/;"	f	typeref:typename:const char *
vp_file_write	nvim/plugged/vimproc.vim/src/proc.c	/^vp_file_write(char *args)$/;"	f	typeref:typename:const char *
vp_file_write	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_file_write(char *args)$/;"	f	typeref:typename:const char *
vp_get_signals	nvim/plugged/vimproc.vim/src/proc.c	/^vp_get_signals(char *args)$/;"	f	typeref:typename:const char *
vp_get_signals	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_get_signals(char *args)$/;"	f	typeref:typename:const char *
vp_host_exists	nvim/plugged/vimproc.vim/src/proc.c	/^vp_host_exists(char *args)$/;"	f	typeref:typename:const char *
vp_host_exists	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_host_exists(char *args)$/;"	f	typeref:typename:const char *
vp_kill	nvim/plugged/vimproc.vim/src/proc.c	/^vp_kill(char *args)$/;"	f	typeref:typename:const char *
vp_kill	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_kill(char *args)$/;"	f	typeref:typename:const char *
vp_open	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_open(char *args)$/;"	f	typeref:typename:const char *
vp_pipe_close	nvim/plugged/vimproc.vim/src/proc.c	/^vp_pipe_close(char *args)$/;"	f	typeref:typename:const char *
vp_pipe_close	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_pipe_close(char *args)$/;"	f	typeref:typename:const char *
vp_pipe_open	nvim/plugged/vimproc.vim/src/proc.c	/^vp_pipe_open(char *args)$/;"	f	typeref:typename:const char *
vp_pipe_open	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_pipe_open(char *args)$/;"	f	typeref:typename:const char *
vp_pipe_read	nvim/plugged/vimproc.vim/src/proc.c	/^vp_pipe_read(char *args)$/;"	f	typeref:typename:const char *
vp_pipe_read	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_pipe_read(char *args)$/;"	f	typeref:typename:const char *
vp_pipe_write	nvim/plugged/vimproc.vim/src/proc.c	/^vp_pipe_write(char *args)$/;"	f	typeref:typename:const char *
vp_pipe_write	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_pipe_write(char *args)$/;"	f	typeref:typename:const char *
vp_pty_close	nvim/plugged/vimproc.vim/src/proc.c	/^vp_pty_close(char *args)$/;"	f	typeref:typename:const char *
vp_pty_close	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_close(char *args)$/;"	f	typeref:typename:const char *
vp_pty_get_winsize	nvim/plugged/vimproc.vim/src/proc.c	/^vp_pty_get_winsize(char *args)$/;"	f	typeref:typename:const char *
vp_pty_get_winsize	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_get_winsize(char *args)$/;"	f	typeref:typename:const char *
vp_pty_open	nvim/plugged/vimproc.vim/src/proc.c	/^vp_pty_open(char *args)$/;"	f	typeref:typename:const char *
vp_pty_open	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_open(char *args)$/;"	f	typeref:typename:const char *
vp_pty_read	nvim/plugged/vimproc.vim/src/proc.c	/^vp_pty_read(char *args)$/;"	f	typeref:typename:const char *
vp_pty_read	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_read(char *args)$/;"	f	typeref:typename:const char *
vp_pty_set_winsize	nvim/plugged/vimproc.vim/src/proc.c	/^vp_pty_set_winsize(char *args)$/;"	f	typeref:typename:const char *
vp_pty_set_winsize	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_set_winsize(char *args)$/;"	f	typeref:typename:const char *
vp_pty_write	nvim/plugged/vimproc.vim/src/proc.c	/^vp_pty_write(char *args)$/;"	f	typeref:typename:const char *
vp_pty_write	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_write(char *args)$/;"	f	typeref:typename:const char *
vp_readdir	nvim/plugged/vimproc.vim/src/proc.c	/^vp_readdir(char *args)$/;"	f	typeref:typename:const char *
vp_readdir	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_readdir(char *args)$/;"	f	typeref:typename:const char *
vp_socket_close	nvim/plugged/vimproc.vim/src/proc.c	/^vp_socket_close(char *args)$/;"	f	typeref:typename:const char *
vp_socket_close	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_socket_close(char *args)$/;"	f	typeref:typename:const char *
vp_socket_open	nvim/plugged/vimproc.vim/src/proc.c	/^vp_socket_open(char *args)$/;"	f	typeref:typename:const char *
vp_socket_open	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_socket_open(char *args)$/;"	f	typeref:typename:const char *
vp_socket_read	nvim/plugged/vimproc.vim/src/proc.c	/^vp_socket_read(char *args)$/;"	f	typeref:typename:const char *
vp_socket_read	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_socket_read(char *args)$/;"	f	typeref:typename:const char *
vp_socket_write	nvim/plugged/vimproc.vim/src/proc.c	/^vp_socket_write(char *args)$/;"	f	typeref:typename:const char *
vp_socket_write	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_socket_write(char *args)$/;"	f	typeref:typename:const char *
vp_stack_free	nvim/plugged/vimproc.vim/src/vimstack.c	/^vp_stack_free(vp_stack_t *stack)$/;"	f	typeref:typename:void	file:
vp_stack_from_args	nvim/plugged/vimproc.vim/src/vimstack.c	/^vp_stack_from_args(vp_stack_t *stack, char *args)$/;"	f	typeref:typename:const char *	file:
vp_stack_pop_num	nvim/plugged/vimproc.vim/src/vimstack.c	/^vp_stack_pop_num(vp_stack_t *stack, const char *fmt, void *ptr)$/;"	f	typeref:typename:const char *	file:
vp_stack_pop_str	nvim/plugged/vimproc.vim/src/vimstack.c	/^vp_stack_pop_str(vp_stack_t *stack, char **str)$/;"	f	typeref:typename:const char *	file:
vp_stack_push_num	nvim/plugged/vimproc.vim/src/vimstack.c	/^vp_stack_push_num(vp_stack_t *stack, const char *fmt, ...)$/;"	f	typeref:typename:const char *	file:
vp_stack_push_str	nvim/plugged/vimproc.vim/src/vimstack.c	/^vp_stack_push_str(vp_stack_t *stack, const char *str)$/;"	f	typeref:typename:const char *	file:
vp_stack_reserve	nvim/plugged/vimproc.vim/src/vimstack.c	/^vp_stack_reserve(vp_stack_t *stack, size_t needsize)$/;"	f	typeref:typename:const char *	file:
vp_stack_return	nvim/plugged/vimproc.vim/src/vimstack.c	/^vp_stack_return(vp_stack_t *stack)$/;"	f	typeref:typename:const char *	file:
vp_stack_return_error	nvim/plugged/vimproc.vim/src/vimstack.c	/^vp_stack_return_error(vp_stack_t *stack, const char *fmt, ...)$/;"	f	typeref:typename:const char *	file:
vp_stack_t	nvim/plugged/vimproc.vim/src/vimstack.c	/^typedef struct vp_stack_t {$/;"	s	file:
vp_stack_t	nvim/plugged/vimproc.vim/src/vimstack.c	/^} vp_stack_t;$/;"	t	typeref:struct:vp_stack_t	file:
vp_stack_used	nvim/plugged/vimproc.vim/src/vimstack.c	/^#define vp_stack_used(/;"	d	file:
vp_waitpid	nvim/plugged/vimproc.vim/src/proc.c	/^vp_waitpid(char *args)$/;"	f	typeref:typename:const char *
vp_waitpid	nvim/plugged/vimproc.vim/src/proc_w32.c	/^vp_waitpid(char *args)$/;"	f	typeref:typename:const char *
vsnprintf	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#  define vsnprintf /;"	d	file:
w	nvim/plugged/vim-easymotion/t/easymotion_spec.vim	/^        map w <Plug>(easymotion-w)$/;"	m
w	nvim/plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap w <Plug>(easymotion-w)$/;"	m
w:colorDictRegExp	nvim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim	/^let w:colorDictRegExp=''$/;"	v
warn	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    warn = warning$/;"	v	class:LoggingMixin
warning	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def warning(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
which_build_tool	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^which_build_tool(Dir, Profile) ->$/;"	f
which_compile_opts_profile	nvim/plugged/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^which_compile_opts_profile(File) ->$/;"	f
whitespace	nvim/plugged/vim-go/test/parse.go	/^const whitespace = " \\t\\r\\n\\f"$/;"	c	package:html
whitespaceOrNUL	nvim/plugged/vim-go/test/parse.go	/^const whitespaceOrNUL = whitespace + "\\x00"$/;"	c	package:html
wrap	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	wrap: function( html ) {$/;"	M
wrapAll	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	wrapAll: function( html ) {$/;"	M
wrapInner	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^	wrapInner: function( html ) {$/;"	M
wrapped.newsink	nvim/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! wrapped.newsink(lines)$/;"	f
wrapper	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def wrapper(self, *args, **kwargs):$/;"	f	function:logmethod	file:
write	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def write(self, line):$/;"	m	class:RedirectStream
write	nvim/plugged/vimproc.vim/src/proc_w32.c	/^#define write /;"	d	file:
writelines	nvim/plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def writelines(self, lines):$/;"	m	class:RedirectStream
x	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    inoremap <buffer> <silent> x    <C-o>:call <SID>Tlist_Window_Zoom()<CR>$/;"	m
x	nvim/plugged/taglist.vim/plugin/taglist.vim	/^    nnoremap <buffer> <silent> x :call <SID>Tlist_Window_Zoom()<CR>$/;"	m
xhr	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^					xhr = null;$/;"	P
xml	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			xml = type == "xml" || !type && ct && ct.indexOf("xml") >= 0,$/;"	P
xml	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^			xml: "application\/xml, text\/xml",$/;"	P
z	nvim/plugged/emmet-vim/docs/static/js/jquery-latest.js	/^						z = jQuery.attr(a,m[2]) || '';$/;"	P
{$(SRCDIR)}.c{$(OUTDIR)}.obj	nvim/plugged/vimproc.vim/make_msvc.mak	/^{$(SRCDIR)}.c{$(OUTDIR)}.obj::$/;"	t
